// Code generated by go-swagger; DO NOT EDIT.

// Copyright 2017-2020 Authors of Cilium
// SPDX-License-Identifier: Apache-2.0

package cilium

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// New creates a new cilium API client.
func New(transport runtime.ClientTransport, formats strfmt.Registry) ClientService {
	return &Client{transport: transport, formats: formats}
}

/*
Client for cilium API
*/
type Client struct {
	transport runtime.ClientTransport
	formats   strfmt.Registry
}

// ClientService is the interface for Client methods
type ClientService interface {
	PostManagementCiliumIoV2CiliumEndpoints(params *PostManagementCiliumIoV2CiliumEndpointsParams) (*PostManagementCiliumIoV2CiliumEndpointsOK, *PostManagementCiliumIoV2CiliumEndpointsAccepted, error)

	PostManagementCiliumIoV2CiliumIdentities(params *PostManagementCiliumIoV2CiliumIdentitiesParams) (*PostManagementCiliumIoV2CiliumIdentitiesOK, *PostManagementCiliumIoV2CiliumIdentitiesAccepted, error)

	PostManagementCiliumIoV2CiliumNodes(params *PostManagementCiliumIoV2CiliumNodesParams) (*PostManagementCiliumIoV2CiliumNodesOK, *PostManagementCiliumIoV2CiliumNodesAccepted, error)

	SetTransport(transport runtime.ClientTransport)
}

/*
  PostManagementCiliumIoV2CiliumEndpoints post management cilium io v2 cilium endpoints API
*/
func (a *Client) PostManagementCiliumIoV2CiliumEndpoints(params *PostManagementCiliumIoV2CiliumEndpointsParams) (*PostManagementCiliumIoV2CiliumEndpointsOK, *PostManagementCiliumIoV2CiliumEndpointsAccepted, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewPostManagementCiliumIoV2CiliumEndpointsParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "PostManagementCiliumIoV2CiliumEndpoints",
		Method:             "POST",
		PathPattern:        "/management/cilium.io/v2/ciliumendpoints",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &PostManagementCiliumIoV2CiliumEndpointsReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, nil, err
	}
	switch value := result.(type) {
	case *PostManagementCiliumIoV2CiliumEndpointsOK:
		return value, nil, nil
	case *PostManagementCiliumIoV2CiliumEndpointsAccepted:
		return nil, value, nil
	}
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for cilium: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  PostManagementCiliumIoV2CiliumIdentities post management cilium io v2 cilium identities API
*/
func (a *Client) PostManagementCiliumIoV2CiliumIdentities(params *PostManagementCiliumIoV2CiliumIdentitiesParams) (*PostManagementCiliumIoV2CiliumIdentitiesOK, *PostManagementCiliumIoV2CiliumIdentitiesAccepted, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewPostManagementCiliumIoV2CiliumIdentitiesParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "PostManagementCiliumIoV2CiliumIdentities",
		Method:             "POST",
		PathPattern:        "/management/cilium.io/v2/ciliumidentities",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &PostManagementCiliumIoV2CiliumIdentitiesReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, nil, err
	}
	switch value := result.(type) {
	case *PostManagementCiliumIoV2CiliumIdentitiesOK:
		return value, nil, nil
	case *PostManagementCiliumIoV2CiliumIdentitiesAccepted:
		return nil, value, nil
	}
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for cilium: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  PostManagementCiliumIoV2CiliumNodes post management cilium io v2 cilium nodes API
*/
func (a *Client) PostManagementCiliumIoV2CiliumNodes(params *PostManagementCiliumIoV2CiliumNodesParams) (*PostManagementCiliumIoV2CiliumNodesOK, *PostManagementCiliumIoV2CiliumNodesAccepted, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewPostManagementCiliumIoV2CiliumNodesParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "PostManagementCiliumIoV2CiliumNodes",
		Method:             "POST",
		PathPattern:        "/management/cilium.io/v2/ciliumnodes",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &PostManagementCiliumIoV2CiliumNodesReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, nil, err
	}
	switch value := result.(type) {
	case *PostManagementCiliumIoV2CiliumNodesOK:
		return value, nil, nil
	case *PostManagementCiliumIoV2CiliumNodesAccepted:
		return nil, value, nil
	}
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for cilium: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

// SetTransport changes the transport on the client
func (a *Client) SetTransport(transport runtime.ClientTransport) {
	a.transport = transport
}
