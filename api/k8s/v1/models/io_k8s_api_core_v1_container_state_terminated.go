// Code generated by go-swagger; DO NOT EDIT.

// Copyright 2017-2020 Authors of Cilium
// SPDX-License-Identifier: Apache-2.0

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// IoK8sAPICoreV1ContainerStateTerminated ContainerStateTerminated is a terminated state of a container.
//
// swagger:model io.k8s.api.core.v1.ContainerStateTerminated
type IoK8sAPICoreV1ContainerStateTerminated struct {

	// Container's ID in the format 'docker://<container_id>'
	ContainerID string `json:"containerID,omitempty"`

	// Exit status from the last termination of the container
	// Required: true
	ExitCode *int32 `json:"exitCode"`

	// Time at which the container last terminated
	// Format: date-time
	FinishedAt IoK8sApimachineryPkgApisMetaV1Time `json:"finishedAt,omitempty"`

	// Message regarding the last termination of the container
	Message string `json:"message,omitempty"`

	// (brief) reason from the last termination of the container
	Reason string `json:"reason,omitempty"`

	// Signal from the last termination of the container
	Signal int32 `json:"signal,omitempty"`

	// Time at which previous execution of the container started
	// Format: date-time
	StartedAt IoK8sApimachineryPkgApisMetaV1Time `json:"startedAt,omitempty"`
}

// Validate validates this io k8s api core v1 container state terminated
func (m *IoK8sAPICoreV1ContainerStateTerminated) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateExitCode(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateFinishedAt(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateStartedAt(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *IoK8sAPICoreV1ContainerStateTerminated) validateExitCode(formats strfmt.Registry) error {

	if err := validate.Required("exitCode", "body", m.ExitCode); err != nil {
		return err
	}

	return nil
}

func (m *IoK8sAPICoreV1ContainerStateTerminated) validateFinishedAt(formats strfmt.Registry) error {

	if swag.IsZero(m.FinishedAt) { // not required
		return nil
	}

	if err := m.FinishedAt.Validate(formats); err != nil {
		if ve, ok := err.(*errors.Validation); ok {
			return ve.ValidateName("finishedAt")
		}
		return err
	}

	return nil
}

func (m *IoK8sAPICoreV1ContainerStateTerminated) validateStartedAt(formats strfmt.Registry) error {

	if swag.IsZero(m.StartedAt) { // not required
		return nil
	}

	if err := m.StartedAt.Validate(formats); err != nil {
		if ve, ok := err.(*errors.Validation); ok {
			return ve.ValidateName("startedAt")
		}
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *IoK8sAPICoreV1ContainerStateTerminated) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *IoK8sAPICoreV1ContainerStateTerminated) UnmarshalBinary(b []byte) error {
	var res IoK8sAPICoreV1ContainerStateTerminated
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
