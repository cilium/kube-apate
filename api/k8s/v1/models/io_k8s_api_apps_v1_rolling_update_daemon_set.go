// Code generated by go-swagger; DO NOT EDIT.

// Copyright 2017-2020 Authors of Cilium
// SPDX-License-Identifier: Apache-2.0

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// IoK8sAPIAppsV1RollingUpdateDaemonSet Spec to control the desired behavior of daemon set rolling update.
//
// swagger:model io.k8s.api.apps.v1.RollingUpdateDaemonSet
type IoK8sAPIAppsV1RollingUpdateDaemonSet struct {

	// The maximum number of DaemonSet pods that can be unavailable during the update. Value can be an absolute number (ex: 5) or a percentage of total number of DaemonSet pods at the start of the update (ex: 10%). Absolute number is calculated from percentage by rounding up. This cannot be 0. Default value is 1. Example: when this is set to 30%, at most 30% of the total number of nodes that should be running the daemon pod (i.e. status.desiredNumberScheduled) can have their pods stopped for an update at any given time. The update starts by stopping at most 30% of those DaemonSet pods and then brings up new DaemonSet pods in their place. Once the new pods are available, it then proceeds onto other DaemonSet pods, thus ensuring that at least 70% of original number of DaemonSet pods are available at all times during the update.
	MaxUnavailable IoK8sApimachineryPkgUtilIntstrIntOrString `json:"maxUnavailable,omitempty"`
}

// Validate validates this io k8s api apps v1 rolling update daemon set
func (m *IoK8sAPIAppsV1RollingUpdateDaemonSet) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateMaxUnavailable(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *IoK8sAPIAppsV1RollingUpdateDaemonSet) validateMaxUnavailable(formats strfmt.Registry) error {

	if swag.IsZero(m.MaxUnavailable) { // not required
		return nil
	}

	if err := m.MaxUnavailable.Validate(formats); err != nil {
		if ve, ok := err.(*errors.Validation); ok {
			return ve.ValidateName("maxUnavailable")
		}
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *IoK8sAPIAppsV1RollingUpdateDaemonSet) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *IoK8sAPIAppsV1RollingUpdateDaemonSet) UnmarshalBinary(b []byte) error {
	var res IoK8sAPIAppsV1RollingUpdateDaemonSet
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
