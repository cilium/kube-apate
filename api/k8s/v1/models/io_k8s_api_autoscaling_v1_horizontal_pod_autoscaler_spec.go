// Code generated by go-swagger; DO NOT EDIT.

// Copyright 2017-2020 Authors of Cilium
// SPDX-License-Identifier: Apache-2.0

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// IoK8sAPIAutoscalingV1HorizontalPodAutoscalerSpec specification of a horizontal pod autoscaler.
//
// swagger:model io.k8s.api.autoscaling.v1.HorizontalPodAutoscalerSpec
type IoK8sAPIAutoscalingV1HorizontalPodAutoscalerSpec struct {

	// upper limit for the number of pods that can be set by the autoscaler; cannot be smaller than MinReplicas.
	// Required: true
	MaxReplicas *int32 `json:"maxReplicas"`

	// minReplicas is the lower limit for the number of replicas to which the autoscaler can scale down.  It defaults to 1 pod.  minReplicas is allowed to be 0 if the alpha feature gate HPAScaleToZero is enabled and at least one Object or External metric is configured.  Scaling is active as long as at least one metric value is available.
	MinReplicas int32 `json:"minReplicas,omitempty"`

	// reference to scaled resource; horizontal pod autoscaler will learn the current resource consumption and will set the desired number of pods by using its Scale subresource.
	// Required: true
	ScaleTargetRef *IoK8sAPIAutoscalingV1CrossVersionObjectReference `json:"scaleTargetRef"`

	// target average CPU utilization (represented as a percentage of requested CPU) over all the pods; if not specified the default autoscaling policy will be used.
	TargetCPUUtilizationPercentage int32 `json:"targetCPUUtilizationPercentage,omitempty"`
}

// Validate validates this io k8s api autoscaling v1 horizontal pod autoscaler spec
func (m *IoK8sAPIAutoscalingV1HorizontalPodAutoscalerSpec) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateMaxReplicas(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateScaleTargetRef(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *IoK8sAPIAutoscalingV1HorizontalPodAutoscalerSpec) validateMaxReplicas(formats strfmt.Registry) error {

	if err := validate.Required("maxReplicas", "body", m.MaxReplicas); err != nil {
		return err
	}

	return nil
}

func (m *IoK8sAPIAutoscalingV1HorizontalPodAutoscalerSpec) validateScaleTargetRef(formats strfmt.Registry) error {

	if err := validate.Required("scaleTargetRef", "body", m.ScaleTargetRef); err != nil {
		return err
	}

	if m.ScaleTargetRef != nil {
		if err := m.ScaleTargetRef.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("scaleTargetRef")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (m *IoK8sAPIAutoscalingV1HorizontalPodAutoscalerSpec) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *IoK8sAPIAutoscalingV1HorizontalPodAutoscalerSpec) UnmarshalBinary(b []byte) error {
	var res IoK8sAPIAutoscalingV1HorizontalPodAutoscalerSpec
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
