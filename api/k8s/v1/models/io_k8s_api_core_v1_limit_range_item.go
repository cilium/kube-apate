// Code generated by go-swagger; DO NOT EDIT.

// Copyright 2017-2020 Authors of Cilium
// SPDX-License-Identifier: Apache-2.0

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// IoK8sAPICoreV1LimitRangeItem LimitRangeItem defines a min/max usage limit for any resource that matches on kind.
//
// swagger:model io.k8s.api.core.v1.LimitRangeItem
type IoK8sAPICoreV1LimitRangeItem struct {

	// Default resource requirement limit value by resource name if resource limit is omitted.
	Default map[string]IoK8sApimachineryPkgAPIResourceQuantity `json:"default,omitempty"`

	// DefaultRequest is the default resource requirement request value by resource name if resource request is omitted.
	DefaultRequest map[string]IoK8sApimachineryPkgAPIResourceQuantity `json:"defaultRequest,omitempty"`

	// Max usage constraints on this kind by resource name.
	Max map[string]IoK8sApimachineryPkgAPIResourceQuantity `json:"max,omitempty"`

	// MaxLimitRequestRatio if specified, the named resource must have a request and limit that are both non-zero where limit divided by request is less than or equal to the enumerated value; this represents the max burst for the named resource.
	MaxLimitRequestRatio map[string]IoK8sApimachineryPkgAPIResourceQuantity `json:"maxLimitRequestRatio,omitempty"`

	// Min usage constraints on this kind by resource name.
	Min map[string]IoK8sApimachineryPkgAPIResourceQuantity `json:"min,omitempty"`

	// Type of resource that this limit applies to.
	// Required: true
	Type *string `json:"type"`
}

// Validate validates this io k8s api core v1 limit range item
func (m *IoK8sAPICoreV1LimitRangeItem) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateDefault(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateDefaultRequest(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateMax(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateMaxLimitRequestRatio(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateMin(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateType(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *IoK8sAPICoreV1LimitRangeItem) validateDefault(formats strfmt.Registry) error {

	if swag.IsZero(m.Default) { // not required
		return nil
	}

	for k := range m.Default {

		if val, ok := m.Default[k]; ok {
			if err := val.Validate(formats); err != nil {
				return err
			}
		}

	}

	return nil
}

func (m *IoK8sAPICoreV1LimitRangeItem) validateDefaultRequest(formats strfmt.Registry) error {

	if swag.IsZero(m.DefaultRequest) { // not required
		return nil
	}

	for k := range m.DefaultRequest {

		if val, ok := m.DefaultRequest[k]; ok {
			if err := val.Validate(formats); err != nil {
				return err
			}
		}

	}

	return nil
}

func (m *IoK8sAPICoreV1LimitRangeItem) validateMax(formats strfmt.Registry) error {

	if swag.IsZero(m.Max) { // not required
		return nil
	}

	for k := range m.Max {

		if val, ok := m.Max[k]; ok {
			if err := val.Validate(formats); err != nil {
				return err
			}
		}

	}

	return nil
}

func (m *IoK8sAPICoreV1LimitRangeItem) validateMaxLimitRequestRatio(formats strfmt.Registry) error {

	if swag.IsZero(m.MaxLimitRequestRatio) { // not required
		return nil
	}

	for k := range m.MaxLimitRequestRatio {

		if val, ok := m.MaxLimitRequestRatio[k]; ok {
			if err := val.Validate(formats); err != nil {
				return err
			}
		}

	}

	return nil
}

func (m *IoK8sAPICoreV1LimitRangeItem) validateMin(formats strfmt.Registry) error {

	if swag.IsZero(m.Min) { // not required
		return nil
	}

	for k := range m.Min {

		if val, ok := m.Min[k]; ok {
			if err := val.Validate(formats); err != nil {
				return err
			}
		}

	}

	return nil
}

func (m *IoK8sAPICoreV1LimitRangeItem) validateType(formats strfmt.Registry) error {

	if err := validate.Required("type", "body", m.Type); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *IoK8sAPICoreV1LimitRangeItem) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *IoK8sAPICoreV1LimitRangeItem) UnmarshalBinary(b []byte) error {
	var res IoK8sAPICoreV1LimitRangeItem
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
