// Code generated by go-swagger; DO NOT EDIT.

// Copyright 2017-2020 Authors of Cilium
// SPDX-License-Identifier: Apache-2.0

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// IoK8sAPIAuthenticationV1TokenRequestSpec TokenRequestSpec contains client provided parameters of a token request.
//
// swagger:model io.k8s.api.authentication.v1.TokenRequestSpec
type IoK8sAPIAuthenticationV1TokenRequestSpec struct {

	// Audiences are the intendend audiences of the token. A recipient of a token must identitfy themself with an identifier in the list of audiences of the token, and otherwise should reject the token. A token issued for multiple audiences may be used to authenticate against any of the audiences listed but implies a high degree of trust between the target audiences.
	// Required: true
	Audiences []string `json:"audiences"`

	// BoundObjectRef is a reference to an object that the token will be bound to. The token will only be valid for as long as the bound object exists. NOTE: The API server's TokenReview endpoint will validate the BoundObjectRef, but other audiences may not. Keep ExpirationSeconds small if you want prompt revocation.
	BoundObjectRef *IoK8sAPIAuthenticationV1BoundObjectReference `json:"boundObjectRef,omitempty"`

	// ExpirationSeconds is the requested duration of validity of the request. The token issuer may return a token with a different validity duration so a client needs to check the 'expiration' field in a response.
	ExpirationSeconds int64 `json:"expirationSeconds,omitempty"`
}

// Validate validates this io k8s api authentication v1 token request spec
func (m *IoK8sAPIAuthenticationV1TokenRequestSpec) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateAudiences(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateBoundObjectRef(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *IoK8sAPIAuthenticationV1TokenRequestSpec) validateAudiences(formats strfmt.Registry) error {

	if err := validate.Required("audiences", "body", m.Audiences); err != nil {
		return err
	}

	return nil
}

func (m *IoK8sAPIAuthenticationV1TokenRequestSpec) validateBoundObjectRef(formats strfmt.Registry) error {

	if swag.IsZero(m.BoundObjectRef) { // not required
		return nil
	}

	if m.BoundObjectRef != nil {
		if err := m.BoundObjectRef.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("boundObjectRef")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (m *IoK8sAPIAuthenticationV1TokenRequestSpec) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *IoK8sAPIAuthenticationV1TokenRequestSpec) UnmarshalBinary(b []byte) error {
	var res IoK8sAPIAuthenticationV1TokenRequestSpec
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
