// Code generated by go-swagger; DO NOT EDIT.

// Copyright 2017-2020 Authors of Cilium
// SPDX-License-Identifier: Apache-2.0

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// IoK8sAPIFlowcontrolV1alpha1PriorityLevelConfigurationSpec PriorityLevelConfigurationSpec specifies the configuration of a priority level.
//
// swagger:model io.k8s.api.flowcontrol.v1alpha1.PriorityLevelConfigurationSpec
type IoK8sAPIFlowcontrolV1alpha1PriorityLevelConfigurationSpec struct {

	// `limited` specifies how requests are handled for a Limited priority level. This field must be non-empty if and only if `type` is `"Limited"`.
	Limited *IoK8sAPIFlowcontrolV1alpha1LimitedPriorityLevelConfiguration `json:"limited,omitempty"`

	// `type` indicates whether this priority level is subject to limitation on request execution.  A value of `"Exempt"` means that requests of this priority level are not subject to a limit (and thus are never queued) and do not detract from the capacity made available to other priority levels.  A value of `"Limited"` means that (a) requests of this priority level _are_ subject to limits and (b) some of the server's limited capacity is made available exclusively to this priority level. Required.
	// Required: true
	Type *string `json:"type"`
}

// Validate validates this io k8s api flowcontrol v1alpha1 priority level configuration spec
func (m *IoK8sAPIFlowcontrolV1alpha1PriorityLevelConfigurationSpec) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateLimited(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateType(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *IoK8sAPIFlowcontrolV1alpha1PriorityLevelConfigurationSpec) validateLimited(formats strfmt.Registry) error {

	if swag.IsZero(m.Limited) { // not required
		return nil
	}

	if m.Limited != nil {
		if err := m.Limited.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("limited")
			}
			return err
		}
	}

	return nil
}

func (m *IoK8sAPIFlowcontrolV1alpha1PriorityLevelConfigurationSpec) validateType(formats strfmt.Registry) error {

	if err := validate.Required("type", "body", m.Type); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *IoK8sAPIFlowcontrolV1alpha1PriorityLevelConfigurationSpec) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *IoK8sAPIFlowcontrolV1alpha1PriorityLevelConfigurationSpec) UnmarshalBinary(b []byte) error {
	var res IoK8sAPIFlowcontrolV1alpha1PriorityLevelConfigurationSpec
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
