// Code generated by go-swagger; DO NOT EDIT.

// Copyright 2017-2020 Authors of Cilium
// SPDX-License-Identifier: Apache-2.0

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// IoK8sAPICoreV1DaemonEndpoint DaemonEndpoint contains information about a single Daemon endpoint.
//
// swagger:model io.k8s.api.core.v1.DaemonEndpoint
type IoK8sAPICoreV1DaemonEndpoint struct {

	// Port number of the given endpoint.
	// Required: true
	Port *int32 `json:"Port"`
}

// Validate validates this io k8s api core v1 daemon endpoint
func (m *IoK8sAPICoreV1DaemonEndpoint) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validatePort(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *IoK8sAPICoreV1DaemonEndpoint) validatePort(formats strfmt.Registry) error {

	if err := validate.Required("Port", "body", m.Port); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *IoK8sAPICoreV1DaemonEndpoint) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *IoK8sAPICoreV1DaemonEndpoint) UnmarshalBinary(b []byte) error {
	var res IoK8sAPICoreV1DaemonEndpoint
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
