// Code generated by go-swagger; DO NOT EDIT.

// Copyright 2017-2020 Authors of Cilium
// SPDX-License-Identifier: Apache-2.0

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// IoK8sAPICoreV1PersistentVolumeStatus PersistentVolumeStatus is the current status of a persistent volume.
//
// swagger:model io.k8s.api.core.v1.PersistentVolumeStatus
type IoK8sAPICoreV1PersistentVolumeStatus struct {

	// A human-readable message indicating details about why the volume is in this state.
	Message string `json:"message,omitempty"`

	// Phase indicates if a volume is available, bound to a claim, or released by a claim. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#phase
	Phase string `json:"phase,omitempty"`

	// Reason is a brief CamelCase string that describes any failure and is meant for machine parsing and tidy display in the CLI.
	Reason string `json:"reason,omitempty"`
}

// Validate validates this io k8s api core v1 persistent volume status
func (m *IoK8sAPICoreV1PersistentVolumeStatus) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *IoK8sAPICoreV1PersistentVolumeStatus) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *IoK8sAPICoreV1PersistentVolumeStatus) UnmarshalBinary(b []byte) error {
	var res IoK8sAPICoreV1PersistentVolumeStatus
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
