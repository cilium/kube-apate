// Code generated by go-swagger; DO NOT EDIT.

// Copyright 2017-2020 Authors of Cilium
// SPDX-License-Identifier: Apache-2.0

package autoscaling_v1

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// New creates a new autoscaling v1 API client.
func New(transport runtime.ClientTransport, formats strfmt.Registry) ClientService {
	return &Client{transport: transport, formats: formats}
}

/*
Client for autoscaling v1 API
*/
type Client struct {
	transport runtime.ClientTransport
	formats   strfmt.Registry
}

// ClientService is the interface for Client methods
type ClientService interface {
	CreateAutoscalingV1NamespacedHorizontalPodAutoscaler(params *CreateAutoscalingV1NamespacedHorizontalPodAutoscalerParams) (*CreateAutoscalingV1NamespacedHorizontalPodAutoscalerOK, *CreateAutoscalingV1NamespacedHorizontalPodAutoscalerCreated, *CreateAutoscalingV1NamespacedHorizontalPodAutoscalerAccepted, error)

	DeleteAutoscalingV1CollectionNamespacedHorizontalPodAutoscaler(params *DeleteAutoscalingV1CollectionNamespacedHorizontalPodAutoscalerParams) (*DeleteAutoscalingV1CollectionNamespacedHorizontalPodAutoscalerOK, error)

	DeleteAutoscalingV1NamespacedHorizontalPodAutoscaler(params *DeleteAutoscalingV1NamespacedHorizontalPodAutoscalerParams) (*DeleteAutoscalingV1NamespacedHorizontalPodAutoscalerOK, *DeleteAutoscalingV1NamespacedHorizontalPodAutoscalerAccepted, error)

	GetAutoscalingV1APIResources(params *GetAutoscalingV1APIResourcesParams) (*GetAutoscalingV1APIResourcesOK, error)

	ListAutoscalingV1HorizontalPodAutoscalerForAllNamespaces(params *ListAutoscalingV1HorizontalPodAutoscalerForAllNamespacesParams) (*ListAutoscalingV1HorizontalPodAutoscalerForAllNamespacesOK, error)

	ListAutoscalingV1NamespacedHorizontalPodAutoscaler(params *ListAutoscalingV1NamespacedHorizontalPodAutoscalerParams) (*ListAutoscalingV1NamespacedHorizontalPodAutoscalerOK, error)

	PatchAutoscalingV1NamespacedHorizontalPodAutoscaler(params *PatchAutoscalingV1NamespacedHorizontalPodAutoscalerParams) (*PatchAutoscalingV1NamespacedHorizontalPodAutoscalerOK, error)

	PatchAutoscalingV1NamespacedHorizontalPodAutoscalerStatus(params *PatchAutoscalingV1NamespacedHorizontalPodAutoscalerStatusParams) (*PatchAutoscalingV1NamespacedHorizontalPodAutoscalerStatusOK, error)

	ReadAutoscalingV1NamespacedHorizontalPodAutoscaler(params *ReadAutoscalingV1NamespacedHorizontalPodAutoscalerParams) (*ReadAutoscalingV1NamespacedHorizontalPodAutoscalerOK, error)

	ReadAutoscalingV1NamespacedHorizontalPodAutoscalerStatus(params *ReadAutoscalingV1NamespacedHorizontalPodAutoscalerStatusParams) (*ReadAutoscalingV1NamespacedHorizontalPodAutoscalerStatusOK, error)

	ReplaceAutoscalingV1NamespacedHorizontalPodAutoscaler(params *ReplaceAutoscalingV1NamespacedHorizontalPodAutoscalerParams) (*ReplaceAutoscalingV1NamespacedHorizontalPodAutoscalerOK, *ReplaceAutoscalingV1NamespacedHorizontalPodAutoscalerCreated, error)

	ReplaceAutoscalingV1NamespacedHorizontalPodAutoscalerStatus(params *ReplaceAutoscalingV1NamespacedHorizontalPodAutoscalerStatusParams) (*ReplaceAutoscalingV1NamespacedHorizontalPodAutoscalerStatusOK, *ReplaceAutoscalingV1NamespacedHorizontalPodAutoscalerStatusCreated, error)

	WatchAutoscalingV1HorizontalPodAutoscalerListForAllNamespaces(params *WatchAutoscalingV1HorizontalPodAutoscalerListForAllNamespacesParams) (*WatchAutoscalingV1HorizontalPodAutoscalerListForAllNamespacesOK, error)

	WatchAutoscalingV1NamespacedHorizontalPodAutoscaler(params *WatchAutoscalingV1NamespacedHorizontalPodAutoscalerParams) (*WatchAutoscalingV1NamespacedHorizontalPodAutoscalerOK, error)

	WatchAutoscalingV1NamespacedHorizontalPodAutoscalerList(params *WatchAutoscalingV1NamespacedHorizontalPodAutoscalerListParams) (*WatchAutoscalingV1NamespacedHorizontalPodAutoscalerListOK, error)

	SetTransport(transport runtime.ClientTransport)
}

/*
  CreateAutoscalingV1NamespacedHorizontalPodAutoscaler create a HorizontalPodAutoscaler
*/
func (a *Client) CreateAutoscalingV1NamespacedHorizontalPodAutoscaler(params *CreateAutoscalingV1NamespacedHorizontalPodAutoscalerParams) (*CreateAutoscalingV1NamespacedHorizontalPodAutoscalerOK, *CreateAutoscalingV1NamespacedHorizontalPodAutoscalerCreated, *CreateAutoscalingV1NamespacedHorizontalPodAutoscalerAccepted, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewCreateAutoscalingV1NamespacedHorizontalPodAutoscalerParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "createAutoscalingV1NamespacedHorizontalPodAutoscaler",
		Method:             "POST",
		PathPattern:        "/apis/autoscaling/v1/namespaces/{namespace}/horizontalpodautoscalers",
		ProducesMediaTypes: []string{"application/json", "application/vnd.kubernetes.protobuf", "application/yaml"},
		ConsumesMediaTypes: []string{"*/*"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &CreateAutoscalingV1NamespacedHorizontalPodAutoscalerReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, nil, nil, err
	}
	switch value := result.(type) {
	case *CreateAutoscalingV1NamespacedHorizontalPodAutoscalerOK:
		return value, nil, nil, nil
	case *CreateAutoscalingV1NamespacedHorizontalPodAutoscalerCreated:
		return nil, value, nil, nil
	case *CreateAutoscalingV1NamespacedHorizontalPodAutoscalerAccepted:
		return nil, nil, value, nil
	}
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for autoscaling_v1: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  DeleteAutoscalingV1CollectionNamespacedHorizontalPodAutoscaler delete collection of HorizontalPodAutoscaler
*/
func (a *Client) DeleteAutoscalingV1CollectionNamespacedHorizontalPodAutoscaler(params *DeleteAutoscalingV1CollectionNamespacedHorizontalPodAutoscalerParams) (*DeleteAutoscalingV1CollectionNamespacedHorizontalPodAutoscalerOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewDeleteAutoscalingV1CollectionNamespacedHorizontalPodAutoscalerParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "deleteAutoscalingV1CollectionNamespacedHorizontalPodAutoscaler",
		Method:             "DELETE",
		PathPattern:        "/apis/autoscaling/v1/namespaces/{namespace}/horizontalpodautoscalers",
		ProducesMediaTypes: []string{"application/json", "application/vnd.kubernetes.protobuf", "application/yaml"},
		ConsumesMediaTypes: []string{"*/*"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &DeleteAutoscalingV1CollectionNamespacedHorizontalPodAutoscalerReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*DeleteAutoscalingV1CollectionNamespacedHorizontalPodAutoscalerOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for deleteAutoscalingV1CollectionNamespacedHorizontalPodAutoscaler: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  DeleteAutoscalingV1NamespacedHorizontalPodAutoscaler delete a HorizontalPodAutoscaler
*/
func (a *Client) DeleteAutoscalingV1NamespacedHorizontalPodAutoscaler(params *DeleteAutoscalingV1NamespacedHorizontalPodAutoscalerParams) (*DeleteAutoscalingV1NamespacedHorizontalPodAutoscalerOK, *DeleteAutoscalingV1NamespacedHorizontalPodAutoscalerAccepted, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewDeleteAutoscalingV1NamespacedHorizontalPodAutoscalerParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "deleteAutoscalingV1NamespacedHorizontalPodAutoscaler",
		Method:             "DELETE",
		PathPattern:        "/apis/autoscaling/v1/namespaces/{namespace}/horizontalpodautoscalers/{name}",
		ProducesMediaTypes: []string{"application/json", "application/vnd.kubernetes.protobuf", "application/yaml"},
		ConsumesMediaTypes: []string{"*/*"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &DeleteAutoscalingV1NamespacedHorizontalPodAutoscalerReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, nil, err
	}
	switch value := result.(type) {
	case *DeleteAutoscalingV1NamespacedHorizontalPodAutoscalerOK:
		return value, nil, nil
	case *DeleteAutoscalingV1NamespacedHorizontalPodAutoscalerAccepted:
		return nil, value, nil
	}
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for autoscaling_v1: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  GetAutoscalingV1APIResources get available resources
*/
func (a *Client) GetAutoscalingV1APIResources(params *GetAutoscalingV1APIResourcesParams) (*GetAutoscalingV1APIResourcesOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewGetAutoscalingV1APIResourcesParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "getAutoscalingV1APIResources",
		Method:             "GET",
		PathPattern:        "/apis/autoscaling/v1/",
		ProducesMediaTypes: []string{"application/json", "application/vnd.kubernetes.protobuf", "application/yaml"},
		ConsumesMediaTypes: []string{"application/json", "application/vnd.kubernetes.protobuf", "application/yaml"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &GetAutoscalingV1APIResourcesReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*GetAutoscalingV1APIResourcesOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for getAutoscalingV1APIResources: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  ListAutoscalingV1HorizontalPodAutoscalerForAllNamespaces list or watch objects of kind HorizontalPodAutoscaler
*/
func (a *Client) ListAutoscalingV1HorizontalPodAutoscalerForAllNamespaces(params *ListAutoscalingV1HorizontalPodAutoscalerForAllNamespacesParams) (*ListAutoscalingV1HorizontalPodAutoscalerForAllNamespacesOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewListAutoscalingV1HorizontalPodAutoscalerForAllNamespacesParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "listAutoscalingV1HorizontalPodAutoscalerForAllNamespaces",
		Method:             "GET",
		PathPattern:        "/apis/autoscaling/v1/horizontalpodautoscalers",
		ProducesMediaTypes: []string{"application/json", "application/json;stream=watch", "application/vnd.kubernetes.protobuf", "application/vnd.kubernetes.protobuf;stream=watch", "application/yaml"},
		ConsumesMediaTypes: []string{"*/*"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &ListAutoscalingV1HorizontalPodAutoscalerForAllNamespacesReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*ListAutoscalingV1HorizontalPodAutoscalerForAllNamespacesOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for listAutoscalingV1HorizontalPodAutoscalerForAllNamespaces: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  ListAutoscalingV1NamespacedHorizontalPodAutoscaler list or watch objects of kind HorizontalPodAutoscaler
*/
func (a *Client) ListAutoscalingV1NamespacedHorizontalPodAutoscaler(params *ListAutoscalingV1NamespacedHorizontalPodAutoscalerParams) (*ListAutoscalingV1NamespacedHorizontalPodAutoscalerOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewListAutoscalingV1NamespacedHorizontalPodAutoscalerParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "listAutoscalingV1NamespacedHorizontalPodAutoscaler",
		Method:             "GET",
		PathPattern:        "/apis/autoscaling/v1/namespaces/{namespace}/horizontalpodautoscalers",
		ProducesMediaTypes: []string{"application/json", "application/json;stream=watch", "application/vnd.kubernetes.protobuf", "application/vnd.kubernetes.protobuf;stream=watch", "application/yaml"},
		ConsumesMediaTypes: []string{"*/*"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &ListAutoscalingV1NamespacedHorizontalPodAutoscalerReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*ListAutoscalingV1NamespacedHorizontalPodAutoscalerOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for listAutoscalingV1NamespacedHorizontalPodAutoscaler: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  PatchAutoscalingV1NamespacedHorizontalPodAutoscaler partially update the specified HorizontalPodAutoscaler
*/
func (a *Client) PatchAutoscalingV1NamespacedHorizontalPodAutoscaler(params *PatchAutoscalingV1NamespacedHorizontalPodAutoscalerParams) (*PatchAutoscalingV1NamespacedHorizontalPodAutoscalerOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewPatchAutoscalingV1NamespacedHorizontalPodAutoscalerParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "patchAutoscalingV1NamespacedHorizontalPodAutoscaler",
		Method:             "PATCH",
		PathPattern:        "/apis/autoscaling/v1/namespaces/{namespace}/horizontalpodautoscalers/{name}",
		ProducesMediaTypes: []string{"application/json", "application/vnd.kubernetes.protobuf", "application/yaml"},
		ConsumesMediaTypes: []string{"application/apply-patch+yaml", "application/json-patch+json", "application/merge-patch+json", "application/strategic-merge-patch+json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &PatchAutoscalingV1NamespacedHorizontalPodAutoscalerReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*PatchAutoscalingV1NamespacedHorizontalPodAutoscalerOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for patchAutoscalingV1NamespacedHorizontalPodAutoscaler: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  PatchAutoscalingV1NamespacedHorizontalPodAutoscalerStatus partially update status of the specified HorizontalPodAutoscaler
*/
func (a *Client) PatchAutoscalingV1NamespacedHorizontalPodAutoscalerStatus(params *PatchAutoscalingV1NamespacedHorizontalPodAutoscalerStatusParams) (*PatchAutoscalingV1NamespacedHorizontalPodAutoscalerStatusOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewPatchAutoscalingV1NamespacedHorizontalPodAutoscalerStatusParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "patchAutoscalingV1NamespacedHorizontalPodAutoscalerStatus",
		Method:             "PATCH",
		PathPattern:        "/apis/autoscaling/v1/namespaces/{namespace}/horizontalpodautoscalers/{name}/status",
		ProducesMediaTypes: []string{"application/json", "application/vnd.kubernetes.protobuf", "application/yaml"},
		ConsumesMediaTypes: []string{"application/apply-patch+yaml", "application/json-patch+json", "application/merge-patch+json", "application/strategic-merge-patch+json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &PatchAutoscalingV1NamespacedHorizontalPodAutoscalerStatusReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*PatchAutoscalingV1NamespacedHorizontalPodAutoscalerStatusOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for patchAutoscalingV1NamespacedHorizontalPodAutoscalerStatus: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  ReadAutoscalingV1NamespacedHorizontalPodAutoscaler read the specified HorizontalPodAutoscaler
*/
func (a *Client) ReadAutoscalingV1NamespacedHorizontalPodAutoscaler(params *ReadAutoscalingV1NamespacedHorizontalPodAutoscalerParams) (*ReadAutoscalingV1NamespacedHorizontalPodAutoscalerOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewReadAutoscalingV1NamespacedHorizontalPodAutoscalerParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "readAutoscalingV1NamespacedHorizontalPodAutoscaler",
		Method:             "GET",
		PathPattern:        "/apis/autoscaling/v1/namespaces/{namespace}/horizontalpodautoscalers/{name}",
		ProducesMediaTypes: []string{"application/json", "application/vnd.kubernetes.protobuf", "application/yaml"},
		ConsumesMediaTypes: []string{"*/*"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &ReadAutoscalingV1NamespacedHorizontalPodAutoscalerReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*ReadAutoscalingV1NamespacedHorizontalPodAutoscalerOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for readAutoscalingV1NamespacedHorizontalPodAutoscaler: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  ReadAutoscalingV1NamespacedHorizontalPodAutoscalerStatus read status of the specified HorizontalPodAutoscaler
*/
func (a *Client) ReadAutoscalingV1NamespacedHorizontalPodAutoscalerStatus(params *ReadAutoscalingV1NamespacedHorizontalPodAutoscalerStatusParams) (*ReadAutoscalingV1NamespacedHorizontalPodAutoscalerStatusOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewReadAutoscalingV1NamespacedHorizontalPodAutoscalerStatusParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "readAutoscalingV1NamespacedHorizontalPodAutoscalerStatus",
		Method:             "GET",
		PathPattern:        "/apis/autoscaling/v1/namespaces/{namespace}/horizontalpodautoscalers/{name}/status",
		ProducesMediaTypes: []string{"application/json", "application/vnd.kubernetes.protobuf", "application/yaml"},
		ConsumesMediaTypes: []string{"*/*"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &ReadAutoscalingV1NamespacedHorizontalPodAutoscalerStatusReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*ReadAutoscalingV1NamespacedHorizontalPodAutoscalerStatusOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for readAutoscalingV1NamespacedHorizontalPodAutoscalerStatus: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  ReplaceAutoscalingV1NamespacedHorizontalPodAutoscaler replace the specified HorizontalPodAutoscaler
*/
func (a *Client) ReplaceAutoscalingV1NamespacedHorizontalPodAutoscaler(params *ReplaceAutoscalingV1NamespacedHorizontalPodAutoscalerParams) (*ReplaceAutoscalingV1NamespacedHorizontalPodAutoscalerOK, *ReplaceAutoscalingV1NamespacedHorizontalPodAutoscalerCreated, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewReplaceAutoscalingV1NamespacedHorizontalPodAutoscalerParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "replaceAutoscalingV1NamespacedHorizontalPodAutoscaler",
		Method:             "PUT",
		PathPattern:        "/apis/autoscaling/v1/namespaces/{namespace}/horizontalpodautoscalers/{name}",
		ProducesMediaTypes: []string{"application/json", "application/vnd.kubernetes.protobuf", "application/yaml"},
		ConsumesMediaTypes: []string{"*/*"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &ReplaceAutoscalingV1NamespacedHorizontalPodAutoscalerReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, nil, err
	}
	switch value := result.(type) {
	case *ReplaceAutoscalingV1NamespacedHorizontalPodAutoscalerOK:
		return value, nil, nil
	case *ReplaceAutoscalingV1NamespacedHorizontalPodAutoscalerCreated:
		return nil, value, nil
	}
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for autoscaling_v1: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  ReplaceAutoscalingV1NamespacedHorizontalPodAutoscalerStatus replace status of the specified HorizontalPodAutoscaler
*/
func (a *Client) ReplaceAutoscalingV1NamespacedHorizontalPodAutoscalerStatus(params *ReplaceAutoscalingV1NamespacedHorizontalPodAutoscalerStatusParams) (*ReplaceAutoscalingV1NamespacedHorizontalPodAutoscalerStatusOK, *ReplaceAutoscalingV1NamespacedHorizontalPodAutoscalerStatusCreated, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewReplaceAutoscalingV1NamespacedHorizontalPodAutoscalerStatusParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "replaceAutoscalingV1NamespacedHorizontalPodAutoscalerStatus",
		Method:             "PUT",
		PathPattern:        "/apis/autoscaling/v1/namespaces/{namespace}/horizontalpodautoscalers/{name}/status",
		ProducesMediaTypes: []string{"application/json", "application/vnd.kubernetes.protobuf", "application/yaml"},
		ConsumesMediaTypes: []string{"*/*"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &ReplaceAutoscalingV1NamespacedHorizontalPodAutoscalerStatusReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, nil, err
	}
	switch value := result.(type) {
	case *ReplaceAutoscalingV1NamespacedHorizontalPodAutoscalerStatusOK:
		return value, nil, nil
	case *ReplaceAutoscalingV1NamespacedHorizontalPodAutoscalerStatusCreated:
		return nil, value, nil
	}
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for autoscaling_v1: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  WatchAutoscalingV1HorizontalPodAutoscalerListForAllNamespaces watch individual changes to a list of HorizontalPodAutoscaler. deprecated: use the 'watch' parameter with a list operation instead.
*/
func (a *Client) WatchAutoscalingV1HorizontalPodAutoscalerListForAllNamespaces(params *WatchAutoscalingV1HorizontalPodAutoscalerListForAllNamespacesParams) (*WatchAutoscalingV1HorizontalPodAutoscalerListForAllNamespacesOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewWatchAutoscalingV1HorizontalPodAutoscalerListForAllNamespacesParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "watchAutoscalingV1HorizontalPodAutoscalerListForAllNamespaces",
		Method:             "GET",
		PathPattern:        "/apis/autoscaling/v1/watch/horizontalpodautoscalers",
		ProducesMediaTypes: []string{"application/json", "application/json;stream=watch", "application/vnd.kubernetes.protobuf", "application/vnd.kubernetes.protobuf;stream=watch", "application/yaml"},
		ConsumesMediaTypes: []string{"*/*"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &WatchAutoscalingV1HorizontalPodAutoscalerListForAllNamespacesReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*WatchAutoscalingV1HorizontalPodAutoscalerListForAllNamespacesOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for watchAutoscalingV1HorizontalPodAutoscalerListForAllNamespaces: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  WatchAutoscalingV1NamespacedHorizontalPodAutoscaler watch changes to an object of kind HorizontalPodAutoscaler. deprecated: use the 'watch' parameter with a list operation instead, filtered to a single item with the 'fieldSelector' parameter.
*/
func (a *Client) WatchAutoscalingV1NamespacedHorizontalPodAutoscaler(params *WatchAutoscalingV1NamespacedHorizontalPodAutoscalerParams) (*WatchAutoscalingV1NamespacedHorizontalPodAutoscalerOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewWatchAutoscalingV1NamespacedHorizontalPodAutoscalerParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "watchAutoscalingV1NamespacedHorizontalPodAutoscaler",
		Method:             "GET",
		PathPattern:        "/apis/autoscaling/v1/watch/namespaces/{namespace}/horizontalpodautoscalers/{name}",
		ProducesMediaTypes: []string{"application/json", "application/json;stream=watch", "application/vnd.kubernetes.protobuf", "application/vnd.kubernetes.protobuf;stream=watch", "application/yaml"},
		ConsumesMediaTypes: []string{"*/*"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &WatchAutoscalingV1NamespacedHorizontalPodAutoscalerReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*WatchAutoscalingV1NamespacedHorizontalPodAutoscalerOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for watchAutoscalingV1NamespacedHorizontalPodAutoscaler: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  WatchAutoscalingV1NamespacedHorizontalPodAutoscalerList watch individual changes to a list of HorizontalPodAutoscaler. deprecated: use the 'watch' parameter with a list operation instead.
*/
func (a *Client) WatchAutoscalingV1NamespacedHorizontalPodAutoscalerList(params *WatchAutoscalingV1NamespacedHorizontalPodAutoscalerListParams) (*WatchAutoscalingV1NamespacedHorizontalPodAutoscalerListOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewWatchAutoscalingV1NamespacedHorizontalPodAutoscalerListParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "watchAutoscalingV1NamespacedHorizontalPodAutoscalerList",
		Method:             "GET",
		PathPattern:        "/apis/autoscaling/v1/watch/namespaces/{namespace}/horizontalpodautoscalers",
		ProducesMediaTypes: []string{"application/json", "application/json;stream=watch", "application/vnd.kubernetes.protobuf", "application/vnd.kubernetes.protobuf;stream=watch", "application/yaml"},
		ConsumesMediaTypes: []string{"*/*"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &WatchAutoscalingV1NamespacedHorizontalPodAutoscalerListReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*WatchAutoscalingV1NamespacedHorizontalPodAutoscalerListOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for watchAutoscalingV1NamespacedHorizontalPodAutoscalerList: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

// SetTransport changes the transport on the client
func (a *Client) SetTransport(transport runtime.ClientTransport) {
	a.transport = transport
}
