// Code generated by go-swagger; DO NOT EDIT.

// Copyright 2017-2020 Authors of Cilium
// SPDX-License-Identifier: Apache-2.0

package core_v1

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// ReadCoreV1NamespacedPodLogReader is a Reader for the ReadCoreV1NamespacedPodLog structure.
type ReadCoreV1NamespacedPodLogReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ReadCoreV1NamespacedPodLogReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewReadCoreV1NamespacedPodLogOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewReadCoreV1NamespacedPodLogUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewReadCoreV1NamespacedPodLogOK creates a ReadCoreV1NamespacedPodLogOK with default headers values
func NewReadCoreV1NamespacedPodLogOK() *ReadCoreV1NamespacedPodLogOK {
	return &ReadCoreV1NamespacedPodLogOK{}
}

/*ReadCoreV1NamespacedPodLogOK handles this case with default header values.

OK
*/
type ReadCoreV1NamespacedPodLogOK struct {
	Payload string
}

func (o *ReadCoreV1NamespacedPodLogOK) Error() string {
	return fmt.Sprintf("[GET /api/v1/namespaces/{namespace}/pods/{name}/log][%d] readCoreV1NamespacedPodLogOK  %+v", 200, o.Payload)
}

func (o *ReadCoreV1NamespacedPodLogOK) GetPayload() string {
	return o.Payload
}

func (o *ReadCoreV1NamespacedPodLogOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewReadCoreV1NamespacedPodLogUnauthorized creates a ReadCoreV1NamespacedPodLogUnauthorized with default headers values
func NewReadCoreV1NamespacedPodLogUnauthorized() *ReadCoreV1NamespacedPodLogUnauthorized {
	return &ReadCoreV1NamespacedPodLogUnauthorized{}
}

/*ReadCoreV1NamespacedPodLogUnauthorized handles this case with default header values.

Unauthorized
*/
type ReadCoreV1NamespacedPodLogUnauthorized struct {
}

func (o *ReadCoreV1NamespacedPodLogUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/v1/namespaces/{namespace}/pods/{name}/log][%d] readCoreV1NamespacedPodLogUnauthorized ", 401)
}

func (o *ReadCoreV1NamespacedPodLogUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
