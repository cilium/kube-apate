// Code generated by go-swagger; DO NOT EDIT.

// Copyright 2017-2020 Authors of Cilium
// SPDX-License-Identifier: Apache-2.0

package core_v1

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/cilium/kube-apate/api/k8s/v1/models"
)

// CreateCoreV1NamespacedEventReader is a Reader for the CreateCoreV1NamespacedEvent structure.
type CreateCoreV1NamespacedEventReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CreateCoreV1NamespacedEventReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewCreateCoreV1NamespacedEventOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 201:
		result := NewCreateCoreV1NamespacedEventCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 202:
		result := NewCreateCoreV1NamespacedEventAccepted()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewCreateCoreV1NamespacedEventUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewCreateCoreV1NamespacedEventOK creates a CreateCoreV1NamespacedEventOK with default headers values
func NewCreateCoreV1NamespacedEventOK() *CreateCoreV1NamespacedEventOK {
	return &CreateCoreV1NamespacedEventOK{}
}

/*CreateCoreV1NamespacedEventOK handles this case with default header values.

OK
*/
type CreateCoreV1NamespacedEventOK struct {
	Payload *models.IoK8sAPICoreV1Event
}

func (o *CreateCoreV1NamespacedEventOK) Error() string {
	return fmt.Sprintf("[POST /api/v1/namespaces/{namespace}/events][%d] createCoreV1NamespacedEventOK  %+v", 200, o.Payload)
}

func (o *CreateCoreV1NamespacedEventOK) GetPayload() *models.IoK8sAPICoreV1Event {
	return o.Payload
}

func (o *CreateCoreV1NamespacedEventOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.IoK8sAPICoreV1Event)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateCoreV1NamespacedEventCreated creates a CreateCoreV1NamespacedEventCreated with default headers values
func NewCreateCoreV1NamespacedEventCreated() *CreateCoreV1NamespacedEventCreated {
	return &CreateCoreV1NamespacedEventCreated{}
}

/*CreateCoreV1NamespacedEventCreated handles this case with default header values.

Created
*/
type CreateCoreV1NamespacedEventCreated struct {
	Payload *models.IoK8sAPICoreV1Event
}

func (o *CreateCoreV1NamespacedEventCreated) Error() string {
	return fmt.Sprintf("[POST /api/v1/namespaces/{namespace}/events][%d] createCoreV1NamespacedEventCreated  %+v", 201, o.Payload)
}

func (o *CreateCoreV1NamespacedEventCreated) GetPayload() *models.IoK8sAPICoreV1Event {
	return o.Payload
}

func (o *CreateCoreV1NamespacedEventCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.IoK8sAPICoreV1Event)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateCoreV1NamespacedEventAccepted creates a CreateCoreV1NamespacedEventAccepted with default headers values
func NewCreateCoreV1NamespacedEventAccepted() *CreateCoreV1NamespacedEventAccepted {
	return &CreateCoreV1NamespacedEventAccepted{}
}

/*CreateCoreV1NamespacedEventAccepted handles this case with default header values.

Accepted
*/
type CreateCoreV1NamespacedEventAccepted struct {
	Payload *models.IoK8sAPICoreV1Event
}

func (o *CreateCoreV1NamespacedEventAccepted) Error() string {
	return fmt.Sprintf("[POST /api/v1/namespaces/{namespace}/events][%d] createCoreV1NamespacedEventAccepted  %+v", 202, o.Payload)
}

func (o *CreateCoreV1NamespacedEventAccepted) GetPayload() *models.IoK8sAPICoreV1Event {
	return o.Payload
}

func (o *CreateCoreV1NamespacedEventAccepted) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.IoK8sAPICoreV1Event)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateCoreV1NamespacedEventUnauthorized creates a CreateCoreV1NamespacedEventUnauthorized with default headers values
func NewCreateCoreV1NamespacedEventUnauthorized() *CreateCoreV1NamespacedEventUnauthorized {
	return &CreateCoreV1NamespacedEventUnauthorized{}
}

/*CreateCoreV1NamespacedEventUnauthorized handles this case with default header values.

Unauthorized
*/
type CreateCoreV1NamespacedEventUnauthorized struct {
}

func (o *CreateCoreV1NamespacedEventUnauthorized) Error() string {
	return fmt.Sprintf("[POST /api/v1/namespaces/{namespace}/events][%d] createCoreV1NamespacedEventUnauthorized ", 401)
}

func (o *CreateCoreV1NamespacedEventUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
