// Code generated by go-swagger; DO NOT EDIT.

// Copyright 2017-2020 Authors of Cilium
// SPDX-License-Identifier: Apache-2.0

package core_v1

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/cilium/kube-apate/api/k8s/v1/models"
)

// ReplaceCoreV1NamespaceStatusReader is a Reader for the ReplaceCoreV1NamespaceStatus structure.
type ReplaceCoreV1NamespaceStatusReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ReplaceCoreV1NamespaceStatusReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewReplaceCoreV1NamespaceStatusOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 201:
		result := NewReplaceCoreV1NamespaceStatusCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewReplaceCoreV1NamespaceStatusUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewReplaceCoreV1NamespaceStatusOK creates a ReplaceCoreV1NamespaceStatusOK with default headers values
func NewReplaceCoreV1NamespaceStatusOK() *ReplaceCoreV1NamespaceStatusOK {
	return &ReplaceCoreV1NamespaceStatusOK{}
}

/*ReplaceCoreV1NamespaceStatusOK handles this case with default header values.

OK
*/
type ReplaceCoreV1NamespaceStatusOK struct {
	Payload *models.IoK8sAPICoreV1Namespace
}

func (o *ReplaceCoreV1NamespaceStatusOK) Error() string {
	return fmt.Sprintf("[PUT /api/v1/namespaces/{name}/status][%d] replaceCoreV1NamespaceStatusOK  %+v", 200, o.Payload)
}

func (o *ReplaceCoreV1NamespaceStatusOK) GetPayload() *models.IoK8sAPICoreV1Namespace {
	return o.Payload
}

func (o *ReplaceCoreV1NamespaceStatusOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.IoK8sAPICoreV1Namespace)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewReplaceCoreV1NamespaceStatusCreated creates a ReplaceCoreV1NamespaceStatusCreated with default headers values
func NewReplaceCoreV1NamespaceStatusCreated() *ReplaceCoreV1NamespaceStatusCreated {
	return &ReplaceCoreV1NamespaceStatusCreated{}
}

/*ReplaceCoreV1NamespaceStatusCreated handles this case with default header values.

Created
*/
type ReplaceCoreV1NamespaceStatusCreated struct {
	Payload *models.IoK8sAPICoreV1Namespace
}

func (o *ReplaceCoreV1NamespaceStatusCreated) Error() string {
	return fmt.Sprintf("[PUT /api/v1/namespaces/{name}/status][%d] replaceCoreV1NamespaceStatusCreated  %+v", 201, o.Payload)
}

func (o *ReplaceCoreV1NamespaceStatusCreated) GetPayload() *models.IoK8sAPICoreV1Namespace {
	return o.Payload
}

func (o *ReplaceCoreV1NamespaceStatusCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.IoK8sAPICoreV1Namespace)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewReplaceCoreV1NamespaceStatusUnauthorized creates a ReplaceCoreV1NamespaceStatusUnauthorized with default headers values
func NewReplaceCoreV1NamespaceStatusUnauthorized() *ReplaceCoreV1NamespaceStatusUnauthorized {
	return &ReplaceCoreV1NamespaceStatusUnauthorized{}
}

/*ReplaceCoreV1NamespaceStatusUnauthorized handles this case with default header values.

Unauthorized
*/
type ReplaceCoreV1NamespaceStatusUnauthorized struct {
}

func (o *ReplaceCoreV1NamespaceStatusUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /api/v1/namespaces/{name}/status][%d] replaceCoreV1NamespaceStatusUnauthorized ", 401)
}

func (o *ReplaceCoreV1NamespaceStatusUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
