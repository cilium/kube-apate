// Code generated by go-swagger; DO NOT EDIT.

// Copyright 2017-2020 Authors of Cilium
// SPDX-License-Identifier: Apache-2.0

package core_v1

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/cilium/kube-apate/api/k8s/v1/models"
)

// CreateCoreV1NamespaceReader is a Reader for the CreateCoreV1Namespace structure.
type CreateCoreV1NamespaceReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CreateCoreV1NamespaceReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewCreateCoreV1NamespaceOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 201:
		result := NewCreateCoreV1NamespaceCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 202:
		result := NewCreateCoreV1NamespaceAccepted()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewCreateCoreV1NamespaceUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewCreateCoreV1NamespaceOK creates a CreateCoreV1NamespaceOK with default headers values
func NewCreateCoreV1NamespaceOK() *CreateCoreV1NamespaceOK {
	return &CreateCoreV1NamespaceOK{}
}

/*CreateCoreV1NamespaceOK handles this case with default header values.

OK
*/
type CreateCoreV1NamespaceOK struct {
	Payload *models.IoK8sAPICoreV1Namespace
}

func (o *CreateCoreV1NamespaceOK) Error() string {
	return fmt.Sprintf("[POST /api/v1/namespaces][%d] createCoreV1NamespaceOK  %+v", 200, o.Payload)
}

func (o *CreateCoreV1NamespaceOK) GetPayload() *models.IoK8sAPICoreV1Namespace {
	return o.Payload
}

func (o *CreateCoreV1NamespaceOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.IoK8sAPICoreV1Namespace)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateCoreV1NamespaceCreated creates a CreateCoreV1NamespaceCreated with default headers values
func NewCreateCoreV1NamespaceCreated() *CreateCoreV1NamespaceCreated {
	return &CreateCoreV1NamespaceCreated{}
}

/*CreateCoreV1NamespaceCreated handles this case with default header values.

Created
*/
type CreateCoreV1NamespaceCreated struct {
	Payload *models.IoK8sAPICoreV1Namespace
}

func (o *CreateCoreV1NamespaceCreated) Error() string {
	return fmt.Sprintf("[POST /api/v1/namespaces][%d] createCoreV1NamespaceCreated  %+v", 201, o.Payload)
}

func (o *CreateCoreV1NamespaceCreated) GetPayload() *models.IoK8sAPICoreV1Namespace {
	return o.Payload
}

func (o *CreateCoreV1NamespaceCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.IoK8sAPICoreV1Namespace)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateCoreV1NamespaceAccepted creates a CreateCoreV1NamespaceAccepted with default headers values
func NewCreateCoreV1NamespaceAccepted() *CreateCoreV1NamespaceAccepted {
	return &CreateCoreV1NamespaceAccepted{}
}

/*CreateCoreV1NamespaceAccepted handles this case with default header values.

Accepted
*/
type CreateCoreV1NamespaceAccepted struct {
	Payload *models.IoK8sAPICoreV1Namespace
}

func (o *CreateCoreV1NamespaceAccepted) Error() string {
	return fmt.Sprintf("[POST /api/v1/namespaces][%d] createCoreV1NamespaceAccepted  %+v", 202, o.Payload)
}

func (o *CreateCoreV1NamespaceAccepted) GetPayload() *models.IoK8sAPICoreV1Namespace {
	return o.Payload
}

func (o *CreateCoreV1NamespaceAccepted) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.IoK8sAPICoreV1Namespace)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateCoreV1NamespaceUnauthorized creates a CreateCoreV1NamespaceUnauthorized with default headers values
func NewCreateCoreV1NamespaceUnauthorized() *CreateCoreV1NamespaceUnauthorized {
	return &CreateCoreV1NamespaceUnauthorized{}
}

/*CreateCoreV1NamespaceUnauthorized handles this case with default header values.

Unauthorized
*/
type CreateCoreV1NamespaceUnauthorized struct {
}

func (o *CreateCoreV1NamespaceUnauthorized) Error() string {
	return fmt.Sprintf("[POST /api/v1/namespaces][%d] createCoreV1NamespaceUnauthorized ", 401)
}

func (o *CreateCoreV1NamespaceUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
