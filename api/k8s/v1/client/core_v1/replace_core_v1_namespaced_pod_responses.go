// Code generated by go-swagger; DO NOT EDIT.

// Copyright 2017-2020 Authors of Cilium
// SPDX-License-Identifier: Apache-2.0

package core_v1

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/cilium/kube-apate/api/k8s/v1/models"
)

// ReplaceCoreV1NamespacedPodReader is a Reader for the ReplaceCoreV1NamespacedPod structure.
type ReplaceCoreV1NamespacedPodReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ReplaceCoreV1NamespacedPodReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewReplaceCoreV1NamespacedPodOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 201:
		result := NewReplaceCoreV1NamespacedPodCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewReplaceCoreV1NamespacedPodUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewReplaceCoreV1NamespacedPodOK creates a ReplaceCoreV1NamespacedPodOK with default headers values
func NewReplaceCoreV1NamespacedPodOK() *ReplaceCoreV1NamespacedPodOK {
	return &ReplaceCoreV1NamespacedPodOK{}
}

/*ReplaceCoreV1NamespacedPodOK handles this case with default header values.

OK
*/
type ReplaceCoreV1NamespacedPodOK struct {
	Payload *models.IoK8sAPICoreV1Pod
}

func (o *ReplaceCoreV1NamespacedPodOK) Error() string {
	return fmt.Sprintf("[PUT /api/v1/namespaces/{namespace}/pods/{name}][%d] replaceCoreV1NamespacedPodOK  %+v", 200, o.Payload)
}

func (o *ReplaceCoreV1NamespacedPodOK) GetPayload() *models.IoK8sAPICoreV1Pod {
	return o.Payload
}

func (o *ReplaceCoreV1NamespacedPodOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.IoK8sAPICoreV1Pod)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewReplaceCoreV1NamespacedPodCreated creates a ReplaceCoreV1NamespacedPodCreated with default headers values
func NewReplaceCoreV1NamespacedPodCreated() *ReplaceCoreV1NamespacedPodCreated {
	return &ReplaceCoreV1NamespacedPodCreated{}
}

/*ReplaceCoreV1NamespacedPodCreated handles this case with default header values.

Created
*/
type ReplaceCoreV1NamespacedPodCreated struct {
	Payload *models.IoK8sAPICoreV1Pod
}

func (o *ReplaceCoreV1NamespacedPodCreated) Error() string {
	return fmt.Sprintf("[PUT /api/v1/namespaces/{namespace}/pods/{name}][%d] replaceCoreV1NamespacedPodCreated  %+v", 201, o.Payload)
}

func (o *ReplaceCoreV1NamespacedPodCreated) GetPayload() *models.IoK8sAPICoreV1Pod {
	return o.Payload
}

func (o *ReplaceCoreV1NamespacedPodCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.IoK8sAPICoreV1Pod)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewReplaceCoreV1NamespacedPodUnauthorized creates a ReplaceCoreV1NamespacedPodUnauthorized with default headers values
func NewReplaceCoreV1NamespacedPodUnauthorized() *ReplaceCoreV1NamespacedPodUnauthorized {
	return &ReplaceCoreV1NamespacedPodUnauthorized{}
}

/*ReplaceCoreV1NamespacedPodUnauthorized handles this case with default header values.

Unauthorized
*/
type ReplaceCoreV1NamespacedPodUnauthorized struct {
}

func (o *ReplaceCoreV1NamespacedPodUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /api/v1/namespaces/{namespace}/pods/{name}][%d] replaceCoreV1NamespacedPodUnauthorized ", 401)
}

func (o *ReplaceCoreV1NamespacedPodUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
