// Code generated by go-swagger; DO NOT EDIT.

// Copyright 2017-2020 Authors of Cilium
// SPDX-License-Identifier: Apache-2.0

package apiextensions_v1beta1

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// New creates a new apiextensions v1beta1 API client.
func New(transport runtime.ClientTransport, formats strfmt.Registry) ClientService {
	return &Client{transport: transport, formats: formats}
}

/*
Client for apiextensions v1beta1 API
*/
type Client struct {
	transport runtime.ClientTransport
	formats   strfmt.Registry
}

// ClientService is the interface for Client methods
type ClientService interface {
	CreateApiextensionsV1beta1CustomResourceDefinition(params *CreateApiextensionsV1beta1CustomResourceDefinitionParams) (*CreateApiextensionsV1beta1CustomResourceDefinitionOK, *CreateApiextensionsV1beta1CustomResourceDefinitionCreated, *CreateApiextensionsV1beta1CustomResourceDefinitionAccepted, error)

	DeleteApiextensionsV1beta1CollectionCustomResourceDefinition(params *DeleteApiextensionsV1beta1CollectionCustomResourceDefinitionParams) (*DeleteApiextensionsV1beta1CollectionCustomResourceDefinitionOK, error)

	DeleteApiextensionsV1beta1CustomResourceDefinition(params *DeleteApiextensionsV1beta1CustomResourceDefinitionParams) (*DeleteApiextensionsV1beta1CustomResourceDefinitionOK, *DeleteApiextensionsV1beta1CustomResourceDefinitionAccepted, error)

	GetApiextensionsV1beta1APIResources(params *GetApiextensionsV1beta1APIResourcesParams) (*GetApiextensionsV1beta1APIResourcesOK, error)

	ListApiextensionsV1beta1CustomResourceDefinition(params *ListApiextensionsV1beta1CustomResourceDefinitionParams) (*ListApiextensionsV1beta1CustomResourceDefinitionOK, error)

	PatchApiextensionsV1beta1CustomResourceDefinition(params *PatchApiextensionsV1beta1CustomResourceDefinitionParams) (*PatchApiextensionsV1beta1CustomResourceDefinitionOK, error)

	PatchApiextensionsV1beta1CustomResourceDefinitionStatus(params *PatchApiextensionsV1beta1CustomResourceDefinitionStatusParams) (*PatchApiextensionsV1beta1CustomResourceDefinitionStatusOK, error)

	ReadApiextensionsV1beta1CustomResourceDefinition(params *ReadApiextensionsV1beta1CustomResourceDefinitionParams) (*ReadApiextensionsV1beta1CustomResourceDefinitionOK, error)

	ReadApiextensionsV1beta1CustomResourceDefinitionStatus(params *ReadApiextensionsV1beta1CustomResourceDefinitionStatusParams) (*ReadApiextensionsV1beta1CustomResourceDefinitionStatusOK, error)

	ReplaceApiextensionsV1beta1CustomResourceDefinition(params *ReplaceApiextensionsV1beta1CustomResourceDefinitionParams) (*ReplaceApiextensionsV1beta1CustomResourceDefinitionOK, *ReplaceApiextensionsV1beta1CustomResourceDefinitionCreated, error)

	ReplaceApiextensionsV1beta1CustomResourceDefinitionStatus(params *ReplaceApiextensionsV1beta1CustomResourceDefinitionStatusParams) (*ReplaceApiextensionsV1beta1CustomResourceDefinitionStatusOK, *ReplaceApiextensionsV1beta1CustomResourceDefinitionStatusCreated, error)

	WatchApiextensionsV1beta1CustomResourceDefinition(params *WatchApiextensionsV1beta1CustomResourceDefinitionParams) (*WatchApiextensionsV1beta1CustomResourceDefinitionOK, error)

	WatchApiextensionsV1beta1CustomResourceDefinitionList(params *WatchApiextensionsV1beta1CustomResourceDefinitionListParams) (*WatchApiextensionsV1beta1CustomResourceDefinitionListOK, error)

	SetTransport(transport runtime.ClientTransport)
}

/*
  CreateApiextensionsV1beta1CustomResourceDefinition create a CustomResourceDefinition
*/
func (a *Client) CreateApiextensionsV1beta1CustomResourceDefinition(params *CreateApiextensionsV1beta1CustomResourceDefinitionParams) (*CreateApiextensionsV1beta1CustomResourceDefinitionOK, *CreateApiextensionsV1beta1CustomResourceDefinitionCreated, *CreateApiextensionsV1beta1CustomResourceDefinitionAccepted, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewCreateApiextensionsV1beta1CustomResourceDefinitionParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "createApiextensionsV1beta1CustomResourceDefinition",
		Method:             "POST",
		PathPattern:        "/apis/apiextensions.k8s.io/v1beta1/customresourcedefinitions",
		ProducesMediaTypes: []string{"application/json", "application/vnd.kubernetes.protobuf", "application/yaml"},
		ConsumesMediaTypes: []string{"*/*"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &CreateApiextensionsV1beta1CustomResourceDefinitionReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, nil, nil, err
	}
	switch value := result.(type) {
	case *CreateApiextensionsV1beta1CustomResourceDefinitionOK:
		return value, nil, nil, nil
	case *CreateApiextensionsV1beta1CustomResourceDefinitionCreated:
		return nil, value, nil, nil
	case *CreateApiextensionsV1beta1CustomResourceDefinitionAccepted:
		return nil, nil, value, nil
	}
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for apiextensions_v1beta1: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  DeleteApiextensionsV1beta1CollectionCustomResourceDefinition delete collection of CustomResourceDefinition
*/
func (a *Client) DeleteApiextensionsV1beta1CollectionCustomResourceDefinition(params *DeleteApiextensionsV1beta1CollectionCustomResourceDefinitionParams) (*DeleteApiextensionsV1beta1CollectionCustomResourceDefinitionOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewDeleteApiextensionsV1beta1CollectionCustomResourceDefinitionParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "deleteApiextensionsV1beta1CollectionCustomResourceDefinition",
		Method:             "DELETE",
		PathPattern:        "/apis/apiextensions.k8s.io/v1beta1/customresourcedefinitions",
		ProducesMediaTypes: []string{"application/json", "application/vnd.kubernetes.protobuf", "application/yaml"},
		ConsumesMediaTypes: []string{"*/*"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &DeleteApiextensionsV1beta1CollectionCustomResourceDefinitionReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*DeleteApiextensionsV1beta1CollectionCustomResourceDefinitionOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for deleteApiextensionsV1beta1CollectionCustomResourceDefinition: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  DeleteApiextensionsV1beta1CustomResourceDefinition delete a CustomResourceDefinition
*/
func (a *Client) DeleteApiextensionsV1beta1CustomResourceDefinition(params *DeleteApiextensionsV1beta1CustomResourceDefinitionParams) (*DeleteApiextensionsV1beta1CustomResourceDefinitionOK, *DeleteApiextensionsV1beta1CustomResourceDefinitionAccepted, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewDeleteApiextensionsV1beta1CustomResourceDefinitionParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "deleteApiextensionsV1beta1CustomResourceDefinition",
		Method:             "DELETE",
		PathPattern:        "/apis/apiextensions.k8s.io/v1beta1/customresourcedefinitions/{name}",
		ProducesMediaTypes: []string{"application/json", "application/vnd.kubernetes.protobuf", "application/yaml"},
		ConsumesMediaTypes: []string{"*/*"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &DeleteApiextensionsV1beta1CustomResourceDefinitionReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, nil, err
	}
	switch value := result.(type) {
	case *DeleteApiextensionsV1beta1CustomResourceDefinitionOK:
		return value, nil, nil
	case *DeleteApiextensionsV1beta1CustomResourceDefinitionAccepted:
		return nil, value, nil
	}
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for apiextensions_v1beta1: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  GetApiextensionsV1beta1APIResources get available resources
*/
func (a *Client) GetApiextensionsV1beta1APIResources(params *GetApiextensionsV1beta1APIResourcesParams) (*GetApiextensionsV1beta1APIResourcesOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewGetApiextensionsV1beta1APIResourcesParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "getApiextensionsV1beta1APIResources",
		Method:             "GET",
		PathPattern:        "/apis/apiextensions.k8s.io/v1beta1/",
		ProducesMediaTypes: []string{"application/json", "application/vnd.kubernetes.protobuf", "application/yaml"},
		ConsumesMediaTypes: []string{"application/json", "application/vnd.kubernetes.protobuf", "application/yaml"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &GetApiextensionsV1beta1APIResourcesReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*GetApiextensionsV1beta1APIResourcesOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for getApiextensionsV1beta1APIResources: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  ListApiextensionsV1beta1CustomResourceDefinition list or watch objects of kind CustomResourceDefinition
*/
func (a *Client) ListApiextensionsV1beta1CustomResourceDefinition(params *ListApiextensionsV1beta1CustomResourceDefinitionParams) (*ListApiextensionsV1beta1CustomResourceDefinitionOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewListApiextensionsV1beta1CustomResourceDefinitionParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "listApiextensionsV1beta1CustomResourceDefinition",
		Method:             "GET",
		PathPattern:        "/apis/apiextensions.k8s.io/v1beta1/customresourcedefinitions",
		ProducesMediaTypes: []string{"application/json", "application/json;stream=watch", "application/vnd.kubernetes.protobuf", "application/vnd.kubernetes.protobuf;stream=watch", "application/yaml"},
		ConsumesMediaTypes: []string{"*/*"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &ListApiextensionsV1beta1CustomResourceDefinitionReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*ListApiextensionsV1beta1CustomResourceDefinitionOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for listApiextensionsV1beta1CustomResourceDefinition: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  PatchApiextensionsV1beta1CustomResourceDefinition partially update the specified CustomResourceDefinition
*/
func (a *Client) PatchApiextensionsV1beta1CustomResourceDefinition(params *PatchApiextensionsV1beta1CustomResourceDefinitionParams) (*PatchApiextensionsV1beta1CustomResourceDefinitionOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewPatchApiextensionsV1beta1CustomResourceDefinitionParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "patchApiextensionsV1beta1CustomResourceDefinition",
		Method:             "PATCH",
		PathPattern:        "/apis/apiextensions.k8s.io/v1beta1/customresourcedefinitions/{name}",
		ProducesMediaTypes: []string{"application/json", "application/vnd.kubernetes.protobuf", "application/yaml"},
		ConsumesMediaTypes: []string{"application/apply-patch+yaml", "application/json-patch+json", "application/merge-patch+json", "application/strategic-merge-patch+json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &PatchApiextensionsV1beta1CustomResourceDefinitionReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*PatchApiextensionsV1beta1CustomResourceDefinitionOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for patchApiextensionsV1beta1CustomResourceDefinition: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  PatchApiextensionsV1beta1CustomResourceDefinitionStatus partially update status of the specified CustomResourceDefinition
*/
func (a *Client) PatchApiextensionsV1beta1CustomResourceDefinitionStatus(params *PatchApiextensionsV1beta1CustomResourceDefinitionStatusParams) (*PatchApiextensionsV1beta1CustomResourceDefinitionStatusOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewPatchApiextensionsV1beta1CustomResourceDefinitionStatusParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "patchApiextensionsV1beta1CustomResourceDefinitionStatus",
		Method:             "PATCH",
		PathPattern:        "/apis/apiextensions.k8s.io/v1beta1/customresourcedefinitions/{name}/status",
		ProducesMediaTypes: []string{"application/json", "application/vnd.kubernetes.protobuf", "application/yaml"},
		ConsumesMediaTypes: []string{"application/apply-patch+yaml", "application/json-patch+json", "application/merge-patch+json", "application/strategic-merge-patch+json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &PatchApiextensionsV1beta1CustomResourceDefinitionStatusReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*PatchApiextensionsV1beta1CustomResourceDefinitionStatusOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for patchApiextensionsV1beta1CustomResourceDefinitionStatus: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  ReadApiextensionsV1beta1CustomResourceDefinition read the specified CustomResourceDefinition
*/
func (a *Client) ReadApiextensionsV1beta1CustomResourceDefinition(params *ReadApiextensionsV1beta1CustomResourceDefinitionParams) (*ReadApiextensionsV1beta1CustomResourceDefinitionOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewReadApiextensionsV1beta1CustomResourceDefinitionParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "readApiextensionsV1beta1CustomResourceDefinition",
		Method:             "GET",
		PathPattern:        "/apis/apiextensions.k8s.io/v1beta1/customresourcedefinitions/{name}",
		ProducesMediaTypes: []string{"application/json", "application/vnd.kubernetes.protobuf", "application/yaml"},
		ConsumesMediaTypes: []string{"*/*"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &ReadApiextensionsV1beta1CustomResourceDefinitionReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*ReadApiextensionsV1beta1CustomResourceDefinitionOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for readApiextensionsV1beta1CustomResourceDefinition: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  ReadApiextensionsV1beta1CustomResourceDefinitionStatus read status of the specified CustomResourceDefinition
*/
func (a *Client) ReadApiextensionsV1beta1CustomResourceDefinitionStatus(params *ReadApiextensionsV1beta1CustomResourceDefinitionStatusParams) (*ReadApiextensionsV1beta1CustomResourceDefinitionStatusOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewReadApiextensionsV1beta1CustomResourceDefinitionStatusParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "readApiextensionsV1beta1CustomResourceDefinitionStatus",
		Method:             "GET",
		PathPattern:        "/apis/apiextensions.k8s.io/v1beta1/customresourcedefinitions/{name}/status",
		ProducesMediaTypes: []string{"application/json", "application/vnd.kubernetes.protobuf", "application/yaml"},
		ConsumesMediaTypes: []string{"*/*"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &ReadApiextensionsV1beta1CustomResourceDefinitionStatusReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*ReadApiextensionsV1beta1CustomResourceDefinitionStatusOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for readApiextensionsV1beta1CustomResourceDefinitionStatus: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  ReplaceApiextensionsV1beta1CustomResourceDefinition replace the specified CustomResourceDefinition
*/
func (a *Client) ReplaceApiextensionsV1beta1CustomResourceDefinition(params *ReplaceApiextensionsV1beta1CustomResourceDefinitionParams) (*ReplaceApiextensionsV1beta1CustomResourceDefinitionOK, *ReplaceApiextensionsV1beta1CustomResourceDefinitionCreated, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewReplaceApiextensionsV1beta1CustomResourceDefinitionParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "replaceApiextensionsV1beta1CustomResourceDefinition",
		Method:             "PUT",
		PathPattern:        "/apis/apiextensions.k8s.io/v1beta1/customresourcedefinitions/{name}",
		ProducesMediaTypes: []string{"application/json", "application/vnd.kubernetes.protobuf", "application/yaml"},
		ConsumesMediaTypes: []string{"*/*"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &ReplaceApiextensionsV1beta1CustomResourceDefinitionReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, nil, err
	}
	switch value := result.(type) {
	case *ReplaceApiextensionsV1beta1CustomResourceDefinitionOK:
		return value, nil, nil
	case *ReplaceApiextensionsV1beta1CustomResourceDefinitionCreated:
		return nil, value, nil
	}
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for apiextensions_v1beta1: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  ReplaceApiextensionsV1beta1CustomResourceDefinitionStatus replace status of the specified CustomResourceDefinition
*/
func (a *Client) ReplaceApiextensionsV1beta1CustomResourceDefinitionStatus(params *ReplaceApiextensionsV1beta1CustomResourceDefinitionStatusParams) (*ReplaceApiextensionsV1beta1CustomResourceDefinitionStatusOK, *ReplaceApiextensionsV1beta1CustomResourceDefinitionStatusCreated, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewReplaceApiextensionsV1beta1CustomResourceDefinitionStatusParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "replaceApiextensionsV1beta1CustomResourceDefinitionStatus",
		Method:             "PUT",
		PathPattern:        "/apis/apiextensions.k8s.io/v1beta1/customresourcedefinitions/{name}/status",
		ProducesMediaTypes: []string{"application/json", "application/vnd.kubernetes.protobuf", "application/yaml"},
		ConsumesMediaTypes: []string{"*/*"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &ReplaceApiextensionsV1beta1CustomResourceDefinitionStatusReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, nil, err
	}
	switch value := result.(type) {
	case *ReplaceApiextensionsV1beta1CustomResourceDefinitionStatusOK:
		return value, nil, nil
	case *ReplaceApiextensionsV1beta1CustomResourceDefinitionStatusCreated:
		return nil, value, nil
	}
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for apiextensions_v1beta1: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  WatchApiextensionsV1beta1CustomResourceDefinition watch changes to an object of kind CustomResourceDefinition. deprecated: use the 'watch' parameter with a list operation instead, filtered to a single item with the 'fieldSelector' parameter.
*/
func (a *Client) WatchApiextensionsV1beta1CustomResourceDefinition(params *WatchApiextensionsV1beta1CustomResourceDefinitionParams) (*WatchApiextensionsV1beta1CustomResourceDefinitionOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewWatchApiextensionsV1beta1CustomResourceDefinitionParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "watchApiextensionsV1beta1CustomResourceDefinition",
		Method:             "GET",
		PathPattern:        "/apis/apiextensions.k8s.io/v1beta1/watch/customresourcedefinitions/{name}",
		ProducesMediaTypes: []string{"application/json", "application/json;stream=watch", "application/vnd.kubernetes.protobuf", "application/vnd.kubernetes.protobuf;stream=watch", "application/yaml"},
		ConsumesMediaTypes: []string{"*/*"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &WatchApiextensionsV1beta1CustomResourceDefinitionReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*WatchApiextensionsV1beta1CustomResourceDefinitionOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for watchApiextensionsV1beta1CustomResourceDefinition: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  WatchApiextensionsV1beta1CustomResourceDefinitionList watch individual changes to a list of CustomResourceDefinition. deprecated: use the 'watch' parameter with a list operation instead.
*/
func (a *Client) WatchApiextensionsV1beta1CustomResourceDefinitionList(params *WatchApiextensionsV1beta1CustomResourceDefinitionListParams) (*WatchApiextensionsV1beta1CustomResourceDefinitionListOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewWatchApiextensionsV1beta1CustomResourceDefinitionListParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "watchApiextensionsV1beta1CustomResourceDefinitionList",
		Method:             "GET",
		PathPattern:        "/apis/apiextensions.k8s.io/v1beta1/watch/customresourcedefinitions",
		ProducesMediaTypes: []string{"application/json", "application/json;stream=watch", "application/vnd.kubernetes.protobuf", "application/vnd.kubernetes.protobuf;stream=watch", "application/yaml"},
		ConsumesMediaTypes: []string{"*/*"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &WatchApiextensionsV1beta1CustomResourceDefinitionListReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*WatchApiextensionsV1beta1CustomResourceDefinitionListOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for watchApiextensionsV1beta1CustomResourceDefinitionList: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

// SetTransport changes the transport on the client
func (a *Client) SetTransport(transport runtime.ClientTransport) {
	a.transport = transport
}
