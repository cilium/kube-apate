// Code generated by go-swagger; DO NOT EDIT.

// Copyright 2017-2020 Authors of Cilium
// SPDX-License-Identifier: Apache-2.0

package logs

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// LogFileListHandlerReader is a Reader for the LogFileListHandler structure.
type LogFileListHandlerReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *LogFileListHandlerReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 401:
		result := NewLogFileListHandlerUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewLogFileListHandlerUnauthorized creates a LogFileListHandlerUnauthorized with default headers values
func NewLogFileListHandlerUnauthorized() *LogFileListHandlerUnauthorized {
	return &LogFileListHandlerUnauthorized{}
}

/*LogFileListHandlerUnauthorized handles this case with default header values.

Unauthorized
*/
type LogFileListHandlerUnauthorized struct {
}

func (o *LogFileListHandlerUnauthorized) Error() string {
	return fmt.Sprintf("[GET /logs/][%d] logFileListHandlerUnauthorized ", 401)
}

func (o *LogFileListHandlerUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
