// Code generated by go-swagger; DO NOT EDIT.

// Copyright 2017-2020 Authors of Cilium
// SPDX-License-Identifier: Apache-2.0

package admissionregistration_v1

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// New creates a new admissionregistration v1 API client.
func New(transport runtime.ClientTransport, formats strfmt.Registry) ClientService {
	return &Client{transport: transport, formats: formats}
}

/*
Client for admissionregistration v1 API
*/
type Client struct {
	transport runtime.ClientTransport
	formats   strfmt.Registry
}

// ClientService is the interface for Client methods
type ClientService interface {
	CreateAdmissionregistrationV1MutatingWebhookConfiguration(params *CreateAdmissionregistrationV1MutatingWebhookConfigurationParams) (*CreateAdmissionregistrationV1MutatingWebhookConfigurationOK, *CreateAdmissionregistrationV1MutatingWebhookConfigurationCreated, *CreateAdmissionregistrationV1MutatingWebhookConfigurationAccepted, error)

	CreateAdmissionregistrationV1ValidatingWebhookConfiguration(params *CreateAdmissionregistrationV1ValidatingWebhookConfigurationParams) (*CreateAdmissionregistrationV1ValidatingWebhookConfigurationOK, *CreateAdmissionregistrationV1ValidatingWebhookConfigurationCreated, *CreateAdmissionregistrationV1ValidatingWebhookConfigurationAccepted, error)

	DeleteAdmissionregistrationV1CollectionMutatingWebhookConfiguration(params *DeleteAdmissionregistrationV1CollectionMutatingWebhookConfigurationParams) (*DeleteAdmissionregistrationV1CollectionMutatingWebhookConfigurationOK, error)

	DeleteAdmissionregistrationV1CollectionValidatingWebhookConfiguration(params *DeleteAdmissionregistrationV1CollectionValidatingWebhookConfigurationParams) (*DeleteAdmissionregistrationV1CollectionValidatingWebhookConfigurationOK, error)

	DeleteAdmissionregistrationV1MutatingWebhookConfiguration(params *DeleteAdmissionregistrationV1MutatingWebhookConfigurationParams) (*DeleteAdmissionregistrationV1MutatingWebhookConfigurationOK, *DeleteAdmissionregistrationV1MutatingWebhookConfigurationAccepted, error)

	DeleteAdmissionregistrationV1ValidatingWebhookConfiguration(params *DeleteAdmissionregistrationV1ValidatingWebhookConfigurationParams) (*DeleteAdmissionregistrationV1ValidatingWebhookConfigurationOK, *DeleteAdmissionregistrationV1ValidatingWebhookConfigurationAccepted, error)

	GetAdmissionregistrationV1APIResources(params *GetAdmissionregistrationV1APIResourcesParams) (*GetAdmissionregistrationV1APIResourcesOK, error)

	ListAdmissionregistrationV1MutatingWebhookConfiguration(params *ListAdmissionregistrationV1MutatingWebhookConfigurationParams) (*ListAdmissionregistrationV1MutatingWebhookConfigurationOK, error)

	ListAdmissionregistrationV1ValidatingWebhookConfiguration(params *ListAdmissionregistrationV1ValidatingWebhookConfigurationParams) (*ListAdmissionregistrationV1ValidatingWebhookConfigurationOK, error)

	PatchAdmissionregistrationV1MutatingWebhookConfiguration(params *PatchAdmissionregistrationV1MutatingWebhookConfigurationParams) (*PatchAdmissionregistrationV1MutatingWebhookConfigurationOK, error)

	PatchAdmissionregistrationV1ValidatingWebhookConfiguration(params *PatchAdmissionregistrationV1ValidatingWebhookConfigurationParams) (*PatchAdmissionregistrationV1ValidatingWebhookConfigurationOK, error)

	ReadAdmissionregistrationV1MutatingWebhookConfiguration(params *ReadAdmissionregistrationV1MutatingWebhookConfigurationParams) (*ReadAdmissionregistrationV1MutatingWebhookConfigurationOK, error)

	ReadAdmissionregistrationV1ValidatingWebhookConfiguration(params *ReadAdmissionregistrationV1ValidatingWebhookConfigurationParams) (*ReadAdmissionregistrationV1ValidatingWebhookConfigurationOK, error)

	ReplaceAdmissionregistrationV1MutatingWebhookConfiguration(params *ReplaceAdmissionregistrationV1MutatingWebhookConfigurationParams) (*ReplaceAdmissionregistrationV1MutatingWebhookConfigurationOK, *ReplaceAdmissionregistrationV1MutatingWebhookConfigurationCreated, error)

	ReplaceAdmissionregistrationV1ValidatingWebhookConfiguration(params *ReplaceAdmissionregistrationV1ValidatingWebhookConfigurationParams) (*ReplaceAdmissionregistrationV1ValidatingWebhookConfigurationOK, *ReplaceAdmissionregistrationV1ValidatingWebhookConfigurationCreated, error)

	WatchAdmissionregistrationV1MutatingWebhookConfiguration(params *WatchAdmissionregistrationV1MutatingWebhookConfigurationParams) (*WatchAdmissionregistrationV1MutatingWebhookConfigurationOK, error)

	WatchAdmissionregistrationV1MutatingWebhookConfigurationList(params *WatchAdmissionregistrationV1MutatingWebhookConfigurationListParams) (*WatchAdmissionregistrationV1MutatingWebhookConfigurationListOK, error)

	WatchAdmissionregistrationV1ValidatingWebhookConfiguration(params *WatchAdmissionregistrationV1ValidatingWebhookConfigurationParams) (*WatchAdmissionregistrationV1ValidatingWebhookConfigurationOK, error)

	WatchAdmissionregistrationV1ValidatingWebhookConfigurationList(params *WatchAdmissionregistrationV1ValidatingWebhookConfigurationListParams) (*WatchAdmissionregistrationV1ValidatingWebhookConfigurationListOK, error)

	SetTransport(transport runtime.ClientTransport)
}

/*
  CreateAdmissionregistrationV1MutatingWebhookConfiguration create a MutatingWebhookConfiguration
*/
func (a *Client) CreateAdmissionregistrationV1MutatingWebhookConfiguration(params *CreateAdmissionregistrationV1MutatingWebhookConfigurationParams) (*CreateAdmissionregistrationV1MutatingWebhookConfigurationOK, *CreateAdmissionregistrationV1MutatingWebhookConfigurationCreated, *CreateAdmissionregistrationV1MutatingWebhookConfigurationAccepted, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewCreateAdmissionregistrationV1MutatingWebhookConfigurationParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "createAdmissionregistrationV1MutatingWebhookConfiguration",
		Method:             "POST",
		PathPattern:        "/apis/admissionregistration.k8s.io/v1/mutatingwebhookconfigurations",
		ProducesMediaTypes: []string{"application/json", "application/vnd.kubernetes.protobuf", "application/yaml"},
		ConsumesMediaTypes: []string{"*/*"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &CreateAdmissionregistrationV1MutatingWebhookConfigurationReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, nil, nil, err
	}
	switch value := result.(type) {
	case *CreateAdmissionregistrationV1MutatingWebhookConfigurationOK:
		return value, nil, nil, nil
	case *CreateAdmissionregistrationV1MutatingWebhookConfigurationCreated:
		return nil, value, nil, nil
	case *CreateAdmissionregistrationV1MutatingWebhookConfigurationAccepted:
		return nil, nil, value, nil
	}
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for admissionregistration_v1: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  CreateAdmissionregistrationV1ValidatingWebhookConfiguration create a ValidatingWebhookConfiguration
*/
func (a *Client) CreateAdmissionregistrationV1ValidatingWebhookConfiguration(params *CreateAdmissionregistrationV1ValidatingWebhookConfigurationParams) (*CreateAdmissionregistrationV1ValidatingWebhookConfigurationOK, *CreateAdmissionregistrationV1ValidatingWebhookConfigurationCreated, *CreateAdmissionregistrationV1ValidatingWebhookConfigurationAccepted, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewCreateAdmissionregistrationV1ValidatingWebhookConfigurationParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "createAdmissionregistrationV1ValidatingWebhookConfiguration",
		Method:             "POST",
		PathPattern:        "/apis/admissionregistration.k8s.io/v1/validatingwebhookconfigurations",
		ProducesMediaTypes: []string{"application/json", "application/vnd.kubernetes.protobuf", "application/yaml"},
		ConsumesMediaTypes: []string{"*/*"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &CreateAdmissionregistrationV1ValidatingWebhookConfigurationReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, nil, nil, err
	}
	switch value := result.(type) {
	case *CreateAdmissionregistrationV1ValidatingWebhookConfigurationOK:
		return value, nil, nil, nil
	case *CreateAdmissionregistrationV1ValidatingWebhookConfigurationCreated:
		return nil, value, nil, nil
	case *CreateAdmissionregistrationV1ValidatingWebhookConfigurationAccepted:
		return nil, nil, value, nil
	}
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for admissionregistration_v1: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  DeleteAdmissionregistrationV1CollectionMutatingWebhookConfiguration delete collection of MutatingWebhookConfiguration
*/
func (a *Client) DeleteAdmissionregistrationV1CollectionMutatingWebhookConfiguration(params *DeleteAdmissionregistrationV1CollectionMutatingWebhookConfigurationParams) (*DeleteAdmissionregistrationV1CollectionMutatingWebhookConfigurationOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewDeleteAdmissionregistrationV1CollectionMutatingWebhookConfigurationParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "deleteAdmissionregistrationV1CollectionMutatingWebhookConfiguration",
		Method:             "DELETE",
		PathPattern:        "/apis/admissionregistration.k8s.io/v1/mutatingwebhookconfigurations",
		ProducesMediaTypes: []string{"application/json", "application/vnd.kubernetes.protobuf", "application/yaml"},
		ConsumesMediaTypes: []string{"*/*"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &DeleteAdmissionregistrationV1CollectionMutatingWebhookConfigurationReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*DeleteAdmissionregistrationV1CollectionMutatingWebhookConfigurationOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for deleteAdmissionregistrationV1CollectionMutatingWebhookConfiguration: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  DeleteAdmissionregistrationV1CollectionValidatingWebhookConfiguration delete collection of ValidatingWebhookConfiguration
*/
func (a *Client) DeleteAdmissionregistrationV1CollectionValidatingWebhookConfiguration(params *DeleteAdmissionregistrationV1CollectionValidatingWebhookConfigurationParams) (*DeleteAdmissionregistrationV1CollectionValidatingWebhookConfigurationOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewDeleteAdmissionregistrationV1CollectionValidatingWebhookConfigurationParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "deleteAdmissionregistrationV1CollectionValidatingWebhookConfiguration",
		Method:             "DELETE",
		PathPattern:        "/apis/admissionregistration.k8s.io/v1/validatingwebhookconfigurations",
		ProducesMediaTypes: []string{"application/json", "application/vnd.kubernetes.protobuf", "application/yaml"},
		ConsumesMediaTypes: []string{"*/*"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &DeleteAdmissionregistrationV1CollectionValidatingWebhookConfigurationReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*DeleteAdmissionregistrationV1CollectionValidatingWebhookConfigurationOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for deleteAdmissionregistrationV1CollectionValidatingWebhookConfiguration: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  DeleteAdmissionregistrationV1MutatingWebhookConfiguration delete a MutatingWebhookConfiguration
*/
func (a *Client) DeleteAdmissionregistrationV1MutatingWebhookConfiguration(params *DeleteAdmissionregistrationV1MutatingWebhookConfigurationParams) (*DeleteAdmissionregistrationV1MutatingWebhookConfigurationOK, *DeleteAdmissionregistrationV1MutatingWebhookConfigurationAccepted, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewDeleteAdmissionregistrationV1MutatingWebhookConfigurationParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "deleteAdmissionregistrationV1MutatingWebhookConfiguration",
		Method:             "DELETE",
		PathPattern:        "/apis/admissionregistration.k8s.io/v1/mutatingwebhookconfigurations/{name}",
		ProducesMediaTypes: []string{"application/json", "application/vnd.kubernetes.protobuf", "application/yaml"},
		ConsumesMediaTypes: []string{"*/*"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &DeleteAdmissionregistrationV1MutatingWebhookConfigurationReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, nil, err
	}
	switch value := result.(type) {
	case *DeleteAdmissionregistrationV1MutatingWebhookConfigurationOK:
		return value, nil, nil
	case *DeleteAdmissionregistrationV1MutatingWebhookConfigurationAccepted:
		return nil, value, nil
	}
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for admissionregistration_v1: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  DeleteAdmissionregistrationV1ValidatingWebhookConfiguration delete a ValidatingWebhookConfiguration
*/
func (a *Client) DeleteAdmissionregistrationV1ValidatingWebhookConfiguration(params *DeleteAdmissionregistrationV1ValidatingWebhookConfigurationParams) (*DeleteAdmissionregistrationV1ValidatingWebhookConfigurationOK, *DeleteAdmissionregistrationV1ValidatingWebhookConfigurationAccepted, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewDeleteAdmissionregistrationV1ValidatingWebhookConfigurationParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "deleteAdmissionregistrationV1ValidatingWebhookConfiguration",
		Method:             "DELETE",
		PathPattern:        "/apis/admissionregistration.k8s.io/v1/validatingwebhookconfigurations/{name}",
		ProducesMediaTypes: []string{"application/json", "application/vnd.kubernetes.protobuf", "application/yaml"},
		ConsumesMediaTypes: []string{"*/*"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &DeleteAdmissionregistrationV1ValidatingWebhookConfigurationReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, nil, err
	}
	switch value := result.(type) {
	case *DeleteAdmissionregistrationV1ValidatingWebhookConfigurationOK:
		return value, nil, nil
	case *DeleteAdmissionregistrationV1ValidatingWebhookConfigurationAccepted:
		return nil, value, nil
	}
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for admissionregistration_v1: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  GetAdmissionregistrationV1APIResources get available resources
*/
func (a *Client) GetAdmissionregistrationV1APIResources(params *GetAdmissionregistrationV1APIResourcesParams) (*GetAdmissionregistrationV1APIResourcesOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewGetAdmissionregistrationV1APIResourcesParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "getAdmissionregistrationV1APIResources",
		Method:             "GET",
		PathPattern:        "/apis/admissionregistration.k8s.io/v1/",
		ProducesMediaTypes: []string{"application/json", "application/vnd.kubernetes.protobuf", "application/yaml"},
		ConsumesMediaTypes: []string{"application/json", "application/vnd.kubernetes.protobuf", "application/yaml"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &GetAdmissionregistrationV1APIResourcesReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*GetAdmissionregistrationV1APIResourcesOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for getAdmissionregistrationV1APIResources: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  ListAdmissionregistrationV1MutatingWebhookConfiguration list or watch objects of kind MutatingWebhookConfiguration
*/
func (a *Client) ListAdmissionregistrationV1MutatingWebhookConfiguration(params *ListAdmissionregistrationV1MutatingWebhookConfigurationParams) (*ListAdmissionregistrationV1MutatingWebhookConfigurationOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewListAdmissionregistrationV1MutatingWebhookConfigurationParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "listAdmissionregistrationV1MutatingWebhookConfiguration",
		Method:             "GET",
		PathPattern:        "/apis/admissionregistration.k8s.io/v1/mutatingwebhookconfigurations",
		ProducesMediaTypes: []string{"application/json", "application/json;stream=watch", "application/vnd.kubernetes.protobuf", "application/vnd.kubernetes.protobuf;stream=watch", "application/yaml"},
		ConsumesMediaTypes: []string{"*/*"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &ListAdmissionregistrationV1MutatingWebhookConfigurationReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*ListAdmissionregistrationV1MutatingWebhookConfigurationOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for listAdmissionregistrationV1MutatingWebhookConfiguration: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  ListAdmissionregistrationV1ValidatingWebhookConfiguration list or watch objects of kind ValidatingWebhookConfiguration
*/
func (a *Client) ListAdmissionregistrationV1ValidatingWebhookConfiguration(params *ListAdmissionregistrationV1ValidatingWebhookConfigurationParams) (*ListAdmissionregistrationV1ValidatingWebhookConfigurationOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewListAdmissionregistrationV1ValidatingWebhookConfigurationParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "listAdmissionregistrationV1ValidatingWebhookConfiguration",
		Method:             "GET",
		PathPattern:        "/apis/admissionregistration.k8s.io/v1/validatingwebhookconfigurations",
		ProducesMediaTypes: []string{"application/json", "application/json;stream=watch", "application/vnd.kubernetes.protobuf", "application/vnd.kubernetes.protobuf;stream=watch", "application/yaml"},
		ConsumesMediaTypes: []string{"*/*"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &ListAdmissionregistrationV1ValidatingWebhookConfigurationReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*ListAdmissionregistrationV1ValidatingWebhookConfigurationOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for listAdmissionregistrationV1ValidatingWebhookConfiguration: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  PatchAdmissionregistrationV1MutatingWebhookConfiguration partially update the specified MutatingWebhookConfiguration
*/
func (a *Client) PatchAdmissionregistrationV1MutatingWebhookConfiguration(params *PatchAdmissionregistrationV1MutatingWebhookConfigurationParams) (*PatchAdmissionregistrationV1MutatingWebhookConfigurationOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewPatchAdmissionregistrationV1MutatingWebhookConfigurationParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "patchAdmissionregistrationV1MutatingWebhookConfiguration",
		Method:             "PATCH",
		PathPattern:        "/apis/admissionregistration.k8s.io/v1/mutatingwebhookconfigurations/{name}",
		ProducesMediaTypes: []string{"application/json", "application/vnd.kubernetes.protobuf", "application/yaml"},
		ConsumesMediaTypes: []string{"application/apply-patch+yaml", "application/json-patch+json", "application/merge-patch+json", "application/strategic-merge-patch+json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &PatchAdmissionregistrationV1MutatingWebhookConfigurationReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*PatchAdmissionregistrationV1MutatingWebhookConfigurationOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for patchAdmissionregistrationV1MutatingWebhookConfiguration: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  PatchAdmissionregistrationV1ValidatingWebhookConfiguration partially update the specified ValidatingWebhookConfiguration
*/
func (a *Client) PatchAdmissionregistrationV1ValidatingWebhookConfiguration(params *PatchAdmissionregistrationV1ValidatingWebhookConfigurationParams) (*PatchAdmissionregistrationV1ValidatingWebhookConfigurationOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewPatchAdmissionregistrationV1ValidatingWebhookConfigurationParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "patchAdmissionregistrationV1ValidatingWebhookConfiguration",
		Method:             "PATCH",
		PathPattern:        "/apis/admissionregistration.k8s.io/v1/validatingwebhookconfigurations/{name}",
		ProducesMediaTypes: []string{"application/json", "application/vnd.kubernetes.protobuf", "application/yaml"},
		ConsumesMediaTypes: []string{"application/apply-patch+yaml", "application/json-patch+json", "application/merge-patch+json", "application/strategic-merge-patch+json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &PatchAdmissionregistrationV1ValidatingWebhookConfigurationReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*PatchAdmissionregistrationV1ValidatingWebhookConfigurationOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for patchAdmissionregistrationV1ValidatingWebhookConfiguration: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  ReadAdmissionregistrationV1MutatingWebhookConfiguration read the specified MutatingWebhookConfiguration
*/
func (a *Client) ReadAdmissionregistrationV1MutatingWebhookConfiguration(params *ReadAdmissionregistrationV1MutatingWebhookConfigurationParams) (*ReadAdmissionregistrationV1MutatingWebhookConfigurationOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewReadAdmissionregistrationV1MutatingWebhookConfigurationParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "readAdmissionregistrationV1MutatingWebhookConfiguration",
		Method:             "GET",
		PathPattern:        "/apis/admissionregistration.k8s.io/v1/mutatingwebhookconfigurations/{name}",
		ProducesMediaTypes: []string{"application/json", "application/vnd.kubernetes.protobuf", "application/yaml"},
		ConsumesMediaTypes: []string{"*/*"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &ReadAdmissionregistrationV1MutatingWebhookConfigurationReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*ReadAdmissionregistrationV1MutatingWebhookConfigurationOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for readAdmissionregistrationV1MutatingWebhookConfiguration: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  ReadAdmissionregistrationV1ValidatingWebhookConfiguration read the specified ValidatingWebhookConfiguration
*/
func (a *Client) ReadAdmissionregistrationV1ValidatingWebhookConfiguration(params *ReadAdmissionregistrationV1ValidatingWebhookConfigurationParams) (*ReadAdmissionregistrationV1ValidatingWebhookConfigurationOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewReadAdmissionregistrationV1ValidatingWebhookConfigurationParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "readAdmissionregistrationV1ValidatingWebhookConfiguration",
		Method:             "GET",
		PathPattern:        "/apis/admissionregistration.k8s.io/v1/validatingwebhookconfigurations/{name}",
		ProducesMediaTypes: []string{"application/json", "application/vnd.kubernetes.protobuf", "application/yaml"},
		ConsumesMediaTypes: []string{"*/*"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &ReadAdmissionregistrationV1ValidatingWebhookConfigurationReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*ReadAdmissionregistrationV1ValidatingWebhookConfigurationOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for readAdmissionregistrationV1ValidatingWebhookConfiguration: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  ReplaceAdmissionregistrationV1MutatingWebhookConfiguration replace the specified MutatingWebhookConfiguration
*/
func (a *Client) ReplaceAdmissionregistrationV1MutatingWebhookConfiguration(params *ReplaceAdmissionregistrationV1MutatingWebhookConfigurationParams) (*ReplaceAdmissionregistrationV1MutatingWebhookConfigurationOK, *ReplaceAdmissionregistrationV1MutatingWebhookConfigurationCreated, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewReplaceAdmissionregistrationV1MutatingWebhookConfigurationParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "replaceAdmissionregistrationV1MutatingWebhookConfiguration",
		Method:             "PUT",
		PathPattern:        "/apis/admissionregistration.k8s.io/v1/mutatingwebhookconfigurations/{name}",
		ProducesMediaTypes: []string{"application/json", "application/vnd.kubernetes.protobuf", "application/yaml"},
		ConsumesMediaTypes: []string{"*/*"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &ReplaceAdmissionregistrationV1MutatingWebhookConfigurationReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, nil, err
	}
	switch value := result.(type) {
	case *ReplaceAdmissionregistrationV1MutatingWebhookConfigurationOK:
		return value, nil, nil
	case *ReplaceAdmissionregistrationV1MutatingWebhookConfigurationCreated:
		return nil, value, nil
	}
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for admissionregistration_v1: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  ReplaceAdmissionregistrationV1ValidatingWebhookConfiguration replace the specified ValidatingWebhookConfiguration
*/
func (a *Client) ReplaceAdmissionregistrationV1ValidatingWebhookConfiguration(params *ReplaceAdmissionregistrationV1ValidatingWebhookConfigurationParams) (*ReplaceAdmissionregistrationV1ValidatingWebhookConfigurationOK, *ReplaceAdmissionregistrationV1ValidatingWebhookConfigurationCreated, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewReplaceAdmissionregistrationV1ValidatingWebhookConfigurationParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "replaceAdmissionregistrationV1ValidatingWebhookConfiguration",
		Method:             "PUT",
		PathPattern:        "/apis/admissionregistration.k8s.io/v1/validatingwebhookconfigurations/{name}",
		ProducesMediaTypes: []string{"application/json", "application/vnd.kubernetes.protobuf", "application/yaml"},
		ConsumesMediaTypes: []string{"*/*"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &ReplaceAdmissionregistrationV1ValidatingWebhookConfigurationReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, nil, err
	}
	switch value := result.(type) {
	case *ReplaceAdmissionregistrationV1ValidatingWebhookConfigurationOK:
		return value, nil, nil
	case *ReplaceAdmissionregistrationV1ValidatingWebhookConfigurationCreated:
		return nil, value, nil
	}
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for admissionregistration_v1: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  WatchAdmissionregistrationV1MutatingWebhookConfiguration watch changes to an object of kind MutatingWebhookConfiguration. deprecated: use the 'watch' parameter with a list operation instead, filtered to a single item with the 'fieldSelector' parameter.
*/
func (a *Client) WatchAdmissionregistrationV1MutatingWebhookConfiguration(params *WatchAdmissionregistrationV1MutatingWebhookConfigurationParams) (*WatchAdmissionregistrationV1MutatingWebhookConfigurationOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewWatchAdmissionregistrationV1MutatingWebhookConfigurationParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "watchAdmissionregistrationV1MutatingWebhookConfiguration",
		Method:             "GET",
		PathPattern:        "/apis/admissionregistration.k8s.io/v1/watch/mutatingwebhookconfigurations/{name}",
		ProducesMediaTypes: []string{"application/json", "application/json;stream=watch", "application/vnd.kubernetes.protobuf", "application/vnd.kubernetes.protobuf;stream=watch", "application/yaml"},
		ConsumesMediaTypes: []string{"*/*"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &WatchAdmissionregistrationV1MutatingWebhookConfigurationReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*WatchAdmissionregistrationV1MutatingWebhookConfigurationOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for watchAdmissionregistrationV1MutatingWebhookConfiguration: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  WatchAdmissionregistrationV1MutatingWebhookConfigurationList watch individual changes to a list of MutatingWebhookConfiguration. deprecated: use the 'watch' parameter with a list operation instead.
*/
func (a *Client) WatchAdmissionregistrationV1MutatingWebhookConfigurationList(params *WatchAdmissionregistrationV1MutatingWebhookConfigurationListParams) (*WatchAdmissionregistrationV1MutatingWebhookConfigurationListOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewWatchAdmissionregistrationV1MutatingWebhookConfigurationListParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "watchAdmissionregistrationV1MutatingWebhookConfigurationList",
		Method:             "GET",
		PathPattern:        "/apis/admissionregistration.k8s.io/v1/watch/mutatingwebhookconfigurations",
		ProducesMediaTypes: []string{"application/json", "application/json;stream=watch", "application/vnd.kubernetes.protobuf", "application/vnd.kubernetes.protobuf;stream=watch", "application/yaml"},
		ConsumesMediaTypes: []string{"*/*"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &WatchAdmissionregistrationV1MutatingWebhookConfigurationListReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*WatchAdmissionregistrationV1MutatingWebhookConfigurationListOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for watchAdmissionregistrationV1MutatingWebhookConfigurationList: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  WatchAdmissionregistrationV1ValidatingWebhookConfiguration watch changes to an object of kind ValidatingWebhookConfiguration. deprecated: use the 'watch' parameter with a list operation instead, filtered to a single item with the 'fieldSelector' parameter.
*/
func (a *Client) WatchAdmissionregistrationV1ValidatingWebhookConfiguration(params *WatchAdmissionregistrationV1ValidatingWebhookConfigurationParams) (*WatchAdmissionregistrationV1ValidatingWebhookConfigurationOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewWatchAdmissionregistrationV1ValidatingWebhookConfigurationParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "watchAdmissionregistrationV1ValidatingWebhookConfiguration",
		Method:             "GET",
		PathPattern:        "/apis/admissionregistration.k8s.io/v1/watch/validatingwebhookconfigurations/{name}",
		ProducesMediaTypes: []string{"application/json", "application/json;stream=watch", "application/vnd.kubernetes.protobuf", "application/vnd.kubernetes.protobuf;stream=watch", "application/yaml"},
		ConsumesMediaTypes: []string{"*/*"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &WatchAdmissionregistrationV1ValidatingWebhookConfigurationReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*WatchAdmissionregistrationV1ValidatingWebhookConfigurationOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for watchAdmissionregistrationV1ValidatingWebhookConfiguration: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  WatchAdmissionregistrationV1ValidatingWebhookConfigurationList watch individual changes to a list of ValidatingWebhookConfiguration. deprecated: use the 'watch' parameter with a list operation instead.
*/
func (a *Client) WatchAdmissionregistrationV1ValidatingWebhookConfigurationList(params *WatchAdmissionregistrationV1ValidatingWebhookConfigurationListParams) (*WatchAdmissionregistrationV1ValidatingWebhookConfigurationListOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewWatchAdmissionregistrationV1ValidatingWebhookConfigurationListParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "watchAdmissionregistrationV1ValidatingWebhookConfigurationList",
		Method:             "GET",
		PathPattern:        "/apis/admissionregistration.k8s.io/v1/watch/validatingwebhookconfigurations",
		ProducesMediaTypes: []string{"application/json", "application/json;stream=watch", "application/vnd.kubernetes.protobuf", "application/vnd.kubernetes.protobuf;stream=watch", "application/yaml"},
		ConsumesMediaTypes: []string{"*/*"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &WatchAdmissionregistrationV1ValidatingWebhookConfigurationListReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*WatchAdmissionregistrationV1ValidatingWebhookConfigurationListOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for watchAdmissionregistrationV1ValidatingWebhookConfigurationList: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

// SetTransport changes the transport on the client
func (a *Client) SetTransport(transport runtime.ClientTransport) {
	a.transport = transport
}
