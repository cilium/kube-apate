// Code generated by go-swagger; DO NOT EDIT.

// Copyright 2017-2020 Authors of Cilium
// SPDX-License-Identifier: Apache-2.0

package networking_v1

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/cilium/kube-apate/api/k8s/v1/models"
)

// CreateNetworkingV1NamespacedIngressReader is a Reader for the CreateNetworkingV1NamespacedIngress structure.
type CreateNetworkingV1NamespacedIngressReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CreateNetworkingV1NamespacedIngressReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewCreateNetworkingV1NamespacedIngressOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 201:
		result := NewCreateNetworkingV1NamespacedIngressCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 202:
		result := NewCreateNetworkingV1NamespacedIngressAccepted()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewCreateNetworkingV1NamespacedIngressUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewCreateNetworkingV1NamespacedIngressOK creates a CreateNetworkingV1NamespacedIngressOK with default headers values
func NewCreateNetworkingV1NamespacedIngressOK() *CreateNetworkingV1NamespacedIngressOK {
	return &CreateNetworkingV1NamespacedIngressOK{}
}

/*CreateNetworkingV1NamespacedIngressOK handles this case with default header values.

OK
*/
type CreateNetworkingV1NamespacedIngressOK struct {
	Payload *models.IoK8sAPINetworkingV1Ingress
}

func (o *CreateNetworkingV1NamespacedIngressOK) Error() string {
	return fmt.Sprintf("[POST /apis/networking.k8s.io/v1/namespaces/{namespace}/ingresses][%d] createNetworkingV1NamespacedIngressOK  %+v", 200, o.Payload)
}

func (o *CreateNetworkingV1NamespacedIngressOK) GetPayload() *models.IoK8sAPINetworkingV1Ingress {
	return o.Payload
}

func (o *CreateNetworkingV1NamespacedIngressOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.IoK8sAPINetworkingV1Ingress)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateNetworkingV1NamespacedIngressCreated creates a CreateNetworkingV1NamespacedIngressCreated with default headers values
func NewCreateNetworkingV1NamespacedIngressCreated() *CreateNetworkingV1NamespacedIngressCreated {
	return &CreateNetworkingV1NamespacedIngressCreated{}
}

/*CreateNetworkingV1NamespacedIngressCreated handles this case with default header values.

Created
*/
type CreateNetworkingV1NamespacedIngressCreated struct {
	Payload *models.IoK8sAPINetworkingV1Ingress
}

func (o *CreateNetworkingV1NamespacedIngressCreated) Error() string {
	return fmt.Sprintf("[POST /apis/networking.k8s.io/v1/namespaces/{namespace}/ingresses][%d] createNetworkingV1NamespacedIngressCreated  %+v", 201, o.Payload)
}

func (o *CreateNetworkingV1NamespacedIngressCreated) GetPayload() *models.IoK8sAPINetworkingV1Ingress {
	return o.Payload
}

func (o *CreateNetworkingV1NamespacedIngressCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.IoK8sAPINetworkingV1Ingress)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateNetworkingV1NamespacedIngressAccepted creates a CreateNetworkingV1NamespacedIngressAccepted with default headers values
func NewCreateNetworkingV1NamespacedIngressAccepted() *CreateNetworkingV1NamespacedIngressAccepted {
	return &CreateNetworkingV1NamespacedIngressAccepted{}
}

/*CreateNetworkingV1NamespacedIngressAccepted handles this case with default header values.

Accepted
*/
type CreateNetworkingV1NamespacedIngressAccepted struct {
	Payload *models.IoK8sAPINetworkingV1Ingress
}

func (o *CreateNetworkingV1NamespacedIngressAccepted) Error() string {
	return fmt.Sprintf("[POST /apis/networking.k8s.io/v1/namespaces/{namespace}/ingresses][%d] createNetworkingV1NamespacedIngressAccepted  %+v", 202, o.Payload)
}

func (o *CreateNetworkingV1NamespacedIngressAccepted) GetPayload() *models.IoK8sAPINetworkingV1Ingress {
	return o.Payload
}

func (o *CreateNetworkingV1NamespacedIngressAccepted) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.IoK8sAPINetworkingV1Ingress)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateNetworkingV1NamespacedIngressUnauthorized creates a CreateNetworkingV1NamespacedIngressUnauthorized with default headers values
func NewCreateNetworkingV1NamespacedIngressUnauthorized() *CreateNetworkingV1NamespacedIngressUnauthorized {
	return &CreateNetworkingV1NamespacedIngressUnauthorized{}
}

/*CreateNetworkingV1NamespacedIngressUnauthorized handles this case with default header values.

Unauthorized
*/
type CreateNetworkingV1NamespacedIngressUnauthorized struct {
}

func (o *CreateNetworkingV1NamespacedIngressUnauthorized) Error() string {
	return fmt.Sprintf("[POST /apis/networking.k8s.io/v1/namespaces/{namespace}/ingresses][%d] createNetworkingV1NamespacedIngressUnauthorized ", 401)
}

func (o *CreateNetworkingV1NamespacedIngressUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
