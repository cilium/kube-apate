// Code generated by go-swagger; DO NOT EDIT.

// Copyright 2017-2020 Authors of Cilium
// SPDX-License-Identifier: Apache-2.0

package authorization_v1

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/cilium/kube-apate/api/k8s/v1/models"
)

// CreateAuthorizationV1NamespacedLocalSubjectAccessReviewReader is a Reader for the CreateAuthorizationV1NamespacedLocalSubjectAccessReview structure.
type CreateAuthorizationV1NamespacedLocalSubjectAccessReviewReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CreateAuthorizationV1NamespacedLocalSubjectAccessReviewReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewCreateAuthorizationV1NamespacedLocalSubjectAccessReviewOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 201:
		result := NewCreateAuthorizationV1NamespacedLocalSubjectAccessReviewCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 202:
		result := NewCreateAuthorizationV1NamespacedLocalSubjectAccessReviewAccepted()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewCreateAuthorizationV1NamespacedLocalSubjectAccessReviewUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewCreateAuthorizationV1NamespacedLocalSubjectAccessReviewOK creates a CreateAuthorizationV1NamespacedLocalSubjectAccessReviewOK with default headers values
func NewCreateAuthorizationV1NamespacedLocalSubjectAccessReviewOK() *CreateAuthorizationV1NamespacedLocalSubjectAccessReviewOK {
	return &CreateAuthorizationV1NamespacedLocalSubjectAccessReviewOK{}
}

/*CreateAuthorizationV1NamespacedLocalSubjectAccessReviewOK handles this case with default header values.

OK
*/
type CreateAuthorizationV1NamespacedLocalSubjectAccessReviewOK struct {
	Payload *models.IoK8sAPIAuthorizationV1LocalSubjectAccessReview
}

func (o *CreateAuthorizationV1NamespacedLocalSubjectAccessReviewOK) Error() string {
	return fmt.Sprintf("[POST /apis/authorization.k8s.io/v1/namespaces/{namespace}/localsubjectaccessreviews][%d] createAuthorizationV1NamespacedLocalSubjectAccessReviewOK  %+v", 200, o.Payload)
}

func (o *CreateAuthorizationV1NamespacedLocalSubjectAccessReviewOK) GetPayload() *models.IoK8sAPIAuthorizationV1LocalSubjectAccessReview {
	return o.Payload
}

func (o *CreateAuthorizationV1NamespacedLocalSubjectAccessReviewOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.IoK8sAPIAuthorizationV1LocalSubjectAccessReview)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateAuthorizationV1NamespacedLocalSubjectAccessReviewCreated creates a CreateAuthorizationV1NamespacedLocalSubjectAccessReviewCreated with default headers values
func NewCreateAuthorizationV1NamespacedLocalSubjectAccessReviewCreated() *CreateAuthorizationV1NamespacedLocalSubjectAccessReviewCreated {
	return &CreateAuthorizationV1NamespacedLocalSubjectAccessReviewCreated{}
}

/*CreateAuthorizationV1NamespacedLocalSubjectAccessReviewCreated handles this case with default header values.

Created
*/
type CreateAuthorizationV1NamespacedLocalSubjectAccessReviewCreated struct {
	Payload *models.IoK8sAPIAuthorizationV1LocalSubjectAccessReview
}

func (o *CreateAuthorizationV1NamespacedLocalSubjectAccessReviewCreated) Error() string {
	return fmt.Sprintf("[POST /apis/authorization.k8s.io/v1/namespaces/{namespace}/localsubjectaccessreviews][%d] createAuthorizationV1NamespacedLocalSubjectAccessReviewCreated  %+v", 201, o.Payload)
}

func (o *CreateAuthorizationV1NamespacedLocalSubjectAccessReviewCreated) GetPayload() *models.IoK8sAPIAuthorizationV1LocalSubjectAccessReview {
	return o.Payload
}

func (o *CreateAuthorizationV1NamespacedLocalSubjectAccessReviewCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.IoK8sAPIAuthorizationV1LocalSubjectAccessReview)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateAuthorizationV1NamespacedLocalSubjectAccessReviewAccepted creates a CreateAuthorizationV1NamespacedLocalSubjectAccessReviewAccepted with default headers values
func NewCreateAuthorizationV1NamespacedLocalSubjectAccessReviewAccepted() *CreateAuthorizationV1NamespacedLocalSubjectAccessReviewAccepted {
	return &CreateAuthorizationV1NamespacedLocalSubjectAccessReviewAccepted{}
}

/*CreateAuthorizationV1NamespacedLocalSubjectAccessReviewAccepted handles this case with default header values.

Accepted
*/
type CreateAuthorizationV1NamespacedLocalSubjectAccessReviewAccepted struct {
	Payload *models.IoK8sAPIAuthorizationV1LocalSubjectAccessReview
}

func (o *CreateAuthorizationV1NamespacedLocalSubjectAccessReviewAccepted) Error() string {
	return fmt.Sprintf("[POST /apis/authorization.k8s.io/v1/namespaces/{namespace}/localsubjectaccessreviews][%d] createAuthorizationV1NamespacedLocalSubjectAccessReviewAccepted  %+v", 202, o.Payload)
}

func (o *CreateAuthorizationV1NamespacedLocalSubjectAccessReviewAccepted) GetPayload() *models.IoK8sAPIAuthorizationV1LocalSubjectAccessReview {
	return o.Payload
}

func (o *CreateAuthorizationV1NamespacedLocalSubjectAccessReviewAccepted) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.IoK8sAPIAuthorizationV1LocalSubjectAccessReview)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateAuthorizationV1NamespacedLocalSubjectAccessReviewUnauthorized creates a CreateAuthorizationV1NamespacedLocalSubjectAccessReviewUnauthorized with default headers values
func NewCreateAuthorizationV1NamespacedLocalSubjectAccessReviewUnauthorized() *CreateAuthorizationV1NamespacedLocalSubjectAccessReviewUnauthorized {
	return &CreateAuthorizationV1NamespacedLocalSubjectAccessReviewUnauthorized{}
}

/*CreateAuthorizationV1NamespacedLocalSubjectAccessReviewUnauthorized handles this case with default header values.

Unauthorized
*/
type CreateAuthorizationV1NamespacedLocalSubjectAccessReviewUnauthorized struct {
}

func (o *CreateAuthorizationV1NamespacedLocalSubjectAccessReviewUnauthorized) Error() string {
	return fmt.Sprintf("[POST /apis/authorization.k8s.io/v1/namespaces/{namespace}/localsubjectaccessreviews][%d] createAuthorizationV1NamespacedLocalSubjectAccessReviewUnauthorized ", 401)
}

func (o *CreateAuthorizationV1NamespacedLocalSubjectAccessReviewUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
