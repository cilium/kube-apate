// Code generated by go-swagger; DO NOT EDIT.

// Copyright 2017-2020 Authors of Cilium
// SPDX-License-Identifier: Apache-2.0

package cilium

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// New creates a new cilium API client.
func New(transport runtime.ClientTransport, formats strfmt.Registry) ClientService {
	return &Client{transport: transport, formats: formats}
}

/*
Client for cilium API
*/
type Client struct {
	transport runtime.ClientTransport
	formats   strfmt.Registry
}

// ClientService is the interface for Client methods
type ClientService interface {
	DeleteApisCiliumIoV2CiliumEndpoint(params *DeleteApisCiliumIoV2CiliumEndpointParams) (*DeleteApisCiliumIoV2CiliumEndpointOK, error)

	ListApisCiliumIoV2CiliumClusterwideLocalRedirectPolicy(params *ListApisCiliumIoV2CiliumClusterwideLocalRedirectPolicyParams) (*ListApisCiliumIoV2CiliumClusterwideLocalRedirectPolicyOK, error)

	ListApisCiliumIoV2CiliumClusterwideNetworkPolicy(params *ListApisCiliumIoV2CiliumClusterwideNetworkPolicyParams) (*ListApisCiliumIoV2CiliumClusterwideNetworkPolicyOK, error)

	ListApisCiliumIoV2CiliumEndpoint(params *ListApisCiliumIoV2CiliumEndpointParams) (*ListApisCiliumIoV2CiliumEndpointOK, error)

	ListApisCiliumIoV2CiliumIdentity(params *ListApisCiliumIoV2CiliumIdentityParams) (*ListApisCiliumIoV2CiliumIdentityOK, error)

	ListApisCiliumIoV2CiliumLocalRedirectPolicy(params *ListApisCiliumIoV2CiliumLocalRedirectPolicyParams) (*ListApisCiliumIoV2CiliumLocalRedirectPolicyOK, error)

	ListApisCiliumIoV2CiliumNetworkPolicy(params *ListApisCiliumIoV2CiliumNetworkPolicyParams) (*ListApisCiliumIoV2CiliumNetworkPolicyOK, error)

	ListApisCiliumIoV2CiliumNodes(params *ListApisCiliumIoV2CiliumNodesParams) (*ListApisCiliumIoV2CiliumNodesOK, error)

	PatchApisCiliumIoV2CiliumEndpointStatus(params *PatchApisCiliumIoV2CiliumEndpointStatusParams) (*PatchApisCiliumIoV2CiliumEndpointStatusOK, *PatchApisCiliumIoV2CiliumEndpointStatusCreated, *PatchApisCiliumIoV2CiliumEndpointStatusAccepted, error)

	PatchApisCiliumIoV2CiliumIdentityStatus(params *PatchApisCiliumIoV2CiliumIdentityStatusParams) (*PatchApisCiliumIoV2CiliumIdentityStatusOK, *PatchApisCiliumIoV2CiliumIdentityStatusCreated, *PatchApisCiliumIoV2CiliumIdentityStatusAccepted, error)

	PostApisCiliumIoV2CiliumEndpoint(params *PostApisCiliumIoV2CiliumEndpointParams) (*PostApisCiliumIoV2CiliumEndpointOK, *PostApisCiliumIoV2CiliumEndpointCreated, *PostApisCiliumIoV2CiliumEndpointAccepted, error)

	PostApisCiliumIoV2CiliumNodes(params *PostApisCiliumIoV2CiliumNodesParams) (*PostApisCiliumIoV2CiliumNodesOK, *PostApisCiliumIoV2CiliumNodesCreated, *PostApisCiliumIoV2CiliumNodesAccepted, error)

	PutApisCiliumIoV2CiliumNodes(params *PutApisCiliumIoV2CiliumNodesParams) (*PutApisCiliumIoV2CiliumNodesOK, *PutApisCiliumIoV2CiliumNodesCreated, *PutApisCiliumIoV2CiliumNodesAccepted, error)

	ReadApisCiliumIoV2CiliumNode(params *ReadApisCiliumIoV2CiliumNodeParams) (*ReadApisCiliumIoV2CiliumNodeOK, error)

	SetTransport(transport runtime.ClientTransport)
}

/*
  DeleteApisCiliumIoV2CiliumEndpoint delete apis cilium io v2 cilium endpoint API
*/
func (a *Client) DeleteApisCiliumIoV2CiliumEndpoint(params *DeleteApisCiliumIoV2CiliumEndpointParams) (*DeleteApisCiliumIoV2CiliumEndpointOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewDeleteApisCiliumIoV2CiliumEndpointParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "DeleteApisCiliumIoV2CiliumEndpoint",
		Method:             "DELETE",
		PathPattern:        "/apis/cilium.io/v2/namespaces/{namespace}/ciliumendpoints/{name}",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &DeleteApisCiliumIoV2CiliumEndpointReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*DeleteApisCiliumIoV2CiliumEndpointOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for DeleteApisCiliumIoV2CiliumEndpoint: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  ListApisCiliumIoV2CiliumClusterwideLocalRedirectPolicy list apis cilium io v2 cilium clusterwide local redirect policy API
*/
func (a *Client) ListApisCiliumIoV2CiliumClusterwideLocalRedirectPolicy(params *ListApisCiliumIoV2CiliumClusterwideLocalRedirectPolicyParams) (*ListApisCiliumIoV2CiliumClusterwideLocalRedirectPolicyOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewListApisCiliumIoV2CiliumClusterwideLocalRedirectPolicyParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "ListApisCiliumIoV2CiliumClusterwideLocalRedirectPolicy",
		Method:             "GET",
		PathPattern:        "/apis/cilium.io/v2/ciliumclusterwidelocalredirectpolicy",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &ListApisCiliumIoV2CiliumClusterwideLocalRedirectPolicyReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*ListApisCiliumIoV2CiliumClusterwideLocalRedirectPolicyOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for ListApisCiliumIoV2CiliumClusterwideLocalRedirectPolicy: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  ListApisCiliumIoV2CiliumClusterwideNetworkPolicy list apis cilium io v2 cilium clusterwide network policy API
*/
func (a *Client) ListApisCiliumIoV2CiliumClusterwideNetworkPolicy(params *ListApisCiliumIoV2CiliumClusterwideNetworkPolicyParams) (*ListApisCiliumIoV2CiliumClusterwideNetworkPolicyOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewListApisCiliumIoV2CiliumClusterwideNetworkPolicyParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "ListApisCiliumIoV2CiliumClusterwideNetworkPolicy",
		Method:             "GET",
		PathPattern:        "/apis/cilium.io/v2/ciliumclusterwidenetworkpolicies",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &ListApisCiliumIoV2CiliumClusterwideNetworkPolicyReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*ListApisCiliumIoV2CiliumClusterwideNetworkPolicyOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for ListApisCiliumIoV2CiliumClusterwideNetworkPolicy: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  ListApisCiliumIoV2CiliumEndpoint list apis cilium io v2 cilium endpoint API
*/
func (a *Client) ListApisCiliumIoV2CiliumEndpoint(params *ListApisCiliumIoV2CiliumEndpointParams) (*ListApisCiliumIoV2CiliumEndpointOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewListApisCiliumIoV2CiliumEndpointParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "ListApisCiliumIoV2CiliumEndpoint",
		Method:             "GET",
		PathPattern:        "/apis/cilium.io/v2/ciliumendpoints",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &ListApisCiliumIoV2CiliumEndpointReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*ListApisCiliumIoV2CiliumEndpointOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for ListApisCiliumIoV2CiliumEndpoint: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  ListApisCiliumIoV2CiliumIdentity list apis cilium io v2 cilium identity API
*/
func (a *Client) ListApisCiliumIoV2CiliumIdentity(params *ListApisCiliumIoV2CiliumIdentityParams) (*ListApisCiliumIoV2CiliumIdentityOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewListApisCiliumIoV2CiliumIdentityParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "ListApisCiliumIoV2CiliumIdentity",
		Method:             "GET",
		PathPattern:        "/apis/cilium.io/v2/ciliumidentities",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &ListApisCiliumIoV2CiliumIdentityReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*ListApisCiliumIoV2CiliumIdentityOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for ListApisCiliumIoV2CiliumIdentity: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  ListApisCiliumIoV2CiliumLocalRedirectPolicy list apis cilium io v2 cilium local redirect policy API
*/
func (a *Client) ListApisCiliumIoV2CiliumLocalRedirectPolicy(params *ListApisCiliumIoV2CiliumLocalRedirectPolicyParams) (*ListApisCiliumIoV2CiliumLocalRedirectPolicyOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewListApisCiliumIoV2CiliumLocalRedirectPolicyParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "ListApisCiliumIoV2CiliumLocalRedirectPolicy",
		Method:             "GET",
		PathPattern:        "/apis/cilium.io/v2/ciliumlocalredirectpolicy",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &ListApisCiliumIoV2CiliumLocalRedirectPolicyReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*ListApisCiliumIoV2CiliumLocalRedirectPolicyOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for ListApisCiliumIoV2CiliumLocalRedirectPolicy: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  ListApisCiliumIoV2CiliumNetworkPolicy list apis cilium io v2 cilium network policy API
*/
func (a *Client) ListApisCiliumIoV2CiliumNetworkPolicy(params *ListApisCiliumIoV2CiliumNetworkPolicyParams) (*ListApisCiliumIoV2CiliumNetworkPolicyOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewListApisCiliumIoV2CiliumNetworkPolicyParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "ListApisCiliumIoV2CiliumNetworkPolicy",
		Method:             "GET",
		PathPattern:        "/apis/cilium.io/v2/ciliumnetworkpolicies",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &ListApisCiliumIoV2CiliumNetworkPolicyReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*ListApisCiliumIoV2CiliumNetworkPolicyOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for ListApisCiliumIoV2CiliumNetworkPolicy: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  ListApisCiliumIoV2CiliumNodes list apis cilium io v2 cilium nodes API
*/
func (a *Client) ListApisCiliumIoV2CiliumNodes(params *ListApisCiliumIoV2CiliumNodesParams) (*ListApisCiliumIoV2CiliumNodesOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewListApisCiliumIoV2CiliumNodesParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "ListApisCiliumIoV2CiliumNodes",
		Method:             "GET",
		PathPattern:        "/apis/cilium.io/v2/ciliumnodes",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &ListApisCiliumIoV2CiliumNodesReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*ListApisCiliumIoV2CiliumNodesOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for ListApisCiliumIoV2CiliumNodes: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  PatchApisCiliumIoV2CiliumEndpointStatus patch apis cilium io v2 cilium endpoint status API
*/
func (a *Client) PatchApisCiliumIoV2CiliumEndpointStatus(params *PatchApisCiliumIoV2CiliumEndpointStatusParams) (*PatchApisCiliumIoV2CiliumEndpointStatusOK, *PatchApisCiliumIoV2CiliumEndpointStatusCreated, *PatchApisCiliumIoV2CiliumEndpointStatusAccepted, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewPatchApisCiliumIoV2CiliumEndpointStatusParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "PatchApisCiliumIoV2CiliumEndpointStatus",
		Method:             "PATCH",
		PathPattern:        "/apis/cilium.io/v2/namespaces/{namespace}/ciliumendpoints/{name}/status",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &PatchApisCiliumIoV2CiliumEndpointStatusReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, nil, nil, err
	}
	switch value := result.(type) {
	case *PatchApisCiliumIoV2CiliumEndpointStatusOK:
		return value, nil, nil, nil
	case *PatchApisCiliumIoV2CiliumEndpointStatusCreated:
		return nil, value, nil, nil
	case *PatchApisCiliumIoV2CiliumEndpointStatusAccepted:
		return nil, nil, value, nil
	}
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for cilium: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  PatchApisCiliumIoV2CiliumIdentityStatus patch apis cilium io v2 cilium identity status API
*/
func (a *Client) PatchApisCiliumIoV2CiliumIdentityStatus(params *PatchApisCiliumIoV2CiliumIdentityStatusParams) (*PatchApisCiliumIoV2CiliumIdentityStatusOK, *PatchApisCiliumIoV2CiliumIdentityStatusCreated, *PatchApisCiliumIoV2CiliumIdentityStatusAccepted, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewPatchApisCiliumIoV2CiliumIdentityStatusParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "PatchApisCiliumIoV2CiliumIdentityStatus",
		Method:             "PATCH",
		PathPattern:        "/apis/cilium.io/v2/ciliumidentities/{name}/status",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &PatchApisCiliumIoV2CiliumIdentityStatusReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, nil, nil, err
	}
	switch value := result.(type) {
	case *PatchApisCiliumIoV2CiliumIdentityStatusOK:
		return value, nil, nil, nil
	case *PatchApisCiliumIoV2CiliumIdentityStatusCreated:
		return nil, value, nil, nil
	case *PatchApisCiliumIoV2CiliumIdentityStatusAccepted:
		return nil, nil, value, nil
	}
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for cilium: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  PostApisCiliumIoV2CiliumEndpoint post apis cilium io v2 cilium endpoint API
*/
func (a *Client) PostApisCiliumIoV2CiliumEndpoint(params *PostApisCiliumIoV2CiliumEndpointParams) (*PostApisCiliumIoV2CiliumEndpointOK, *PostApisCiliumIoV2CiliumEndpointCreated, *PostApisCiliumIoV2CiliumEndpointAccepted, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewPostApisCiliumIoV2CiliumEndpointParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "PostApisCiliumIoV2CiliumEndpoint",
		Method:             "POST",
		PathPattern:        "/apis/cilium.io/v2/namespaces/{namespace}/ciliumendpoints",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &PostApisCiliumIoV2CiliumEndpointReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, nil, nil, err
	}
	switch value := result.(type) {
	case *PostApisCiliumIoV2CiliumEndpointOK:
		return value, nil, nil, nil
	case *PostApisCiliumIoV2CiliumEndpointCreated:
		return nil, value, nil, nil
	case *PostApisCiliumIoV2CiliumEndpointAccepted:
		return nil, nil, value, nil
	}
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for cilium: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  PostApisCiliumIoV2CiliumNodes post apis cilium io v2 cilium nodes API
*/
func (a *Client) PostApisCiliumIoV2CiliumNodes(params *PostApisCiliumIoV2CiliumNodesParams) (*PostApisCiliumIoV2CiliumNodesOK, *PostApisCiliumIoV2CiliumNodesCreated, *PostApisCiliumIoV2CiliumNodesAccepted, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewPostApisCiliumIoV2CiliumNodesParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "PostApisCiliumIoV2CiliumNodes",
		Method:             "POST",
		PathPattern:        "/apis/cilium.io/v2/ciliumnodes",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &PostApisCiliumIoV2CiliumNodesReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, nil, nil, err
	}
	switch value := result.(type) {
	case *PostApisCiliumIoV2CiliumNodesOK:
		return value, nil, nil, nil
	case *PostApisCiliumIoV2CiliumNodesCreated:
		return nil, value, nil, nil
	case *PostApisCiliumIoV2CiliumNodesAccepted:
		return nil, nil, value, nil
	}
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for cilium: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  PutApisCiliumIoV2CiliumNodes put apis cilium io v2 cilium nodes API
*/
func (a *Client) PutApisCiliumIoV2CiliumNodes(params *PutApisCiliumIoV2CiliumNodesParams) (*PutApisCiliumIoV2CiliumNodesOK, *PutApisCiliumIoV2CiliumNodesCreated, *PutApisCiliumIoV2CiliumNodesAccepted, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewPutApisCiliumIoV2CiliumNodesParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "PutApisCiliumIoV2CiliumNodes",
		Method:             "PUT",
		PathPattern:        "/apis/cilium.io/v2/ciliumnodes/{name}",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &PutApisCiliumIoV2CiliumNodesReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, nil, nil, err
	}
	switch value := result.(type) {
	case *PutApisCiliumIoV2CiliumNodesOK:
		return value, nil, nil, nil
	case *PutApisCiliumIoV2CiliumNodesCreated:
		return nil, value, nil, nil
	case *PutApisCiliumIoV2CiliumNodesAccepted:
		return nil, nil, value, nil
	}
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for cilium: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  ReadApisCiliumIoV2CiliumNode read apis cilium io v2 cilium node API
*/
func (a *Client) ReadApisCiliumIoV2CiliumNode(params *ReadApisCiliumIoV2CiliumNodeParams) (*ReadApisCiliumIoV2CiliumNodeOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewReadApisCiliumIoV2CiliumNodeParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "ReadApisCiliumIoV2CiliumNode",
		Method:             "GET",
		PathPattern:        "/apis/cilium.io/v2/ciliumnodes/{name}",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &ReadApisCiliumIoV2CiliumNodeReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*ReadApisCiliumIoV2CiliumNodeOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for ReadApisCiliumIoV2CiliumNode: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

// SetTransport changes the transport on the client
func (a *Client) SetTransport(transport runtime.ClientTransport) {
	a.transport = transport
}
