// Code generated by go-swagger; DO NOT EDIT.

// Copyright 2017-2020 Authors of Cilium
// SPDX-License-Identifier: Apache-2.0

package autoscaling_v2beta1

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// New creates a new autoscaling v2beta1 API client.
func New(transport runtime.ClientTransport, formats strfmt.Registry) ClientService {
	return &Client{transport: transport, formats: formats}
}

/*
Client for autoscaling v2beta1 API
*/
type Client struct {
	transport runtime.ClientTransport
	formats   strfmt.Registry
}

// ClientService is the interface for Client methods
type ClientService interface {
	CreateAutoscalingV2beta1NamespacedHorizontalPodAutoscaler(params *CreateAutoscalingV2beta1NamespacedHorizontalPodAutoscalerParams) (*CreateAutoscalingV2beta1NamespacedHorizontalPodAutoscalerOK, *CreateAutoscalingV2beta1NamespacedHorizontalPodAutoscalerCreated, *CreateAutoscalingV2beta1NamespacedHorizontalPodAutoscalerAccepted, error)

	DeleteAutoscalingV2beta1CollectionNamespacedHorizontalPodAutoscaler(params *DeleteAutoscalingV2beta1CollectionNamespacedHorizontalPodAutoscalerParams) (*DeleteAutoscalingV2beta1CollectionNamespacedHorizontalPodAutoscalerOK, error)

	DeleteAutoscalingV2beta1NamespacedHorizontalPodAutoscaler(params *DeleteAutoscalingV2beta1NamespacedHorizontalPodAutoscalerParams) (*DeleteAutoscalingV2beta1NamespacedHorizontalPodAutoscalerOK, *DeleteAutoscalingV2beta1NamespacedHorizontalPodAutoscalerAccepted, error)

	GetAutoscalingV2beta1APIResources(params *GetAutoscalingV2beta1APIResourcesParams) (*GetAutoscalingV2beta1APIResourcesOK, error)

	ListAutoscalingV2beta1HorizontalPodAutoscalerForAllNamespaces(params *ListAutoscalingV2beta1HorizontalPodAutoscalerForAllNamespacesParams) (*ListAutoscalingV2beta1HorizontalPodAutoscalerForAllNamespacesOK, error)

	ListAutoscalingV2beta1NamespacedHorizontalPodAutoscaler(params *ListAutoscalingV2beta1NamespacedHorizontalPodAutoscalerParams) (*ListAutoscalingV2beta1NamespacedHorizontalPodAutoscalerOK, error)

	PatchAutoscalingV2beta1NamespacedHorizontalPodAutoscaler(params *PatchAutoscalingV2beta1NamespacedHorizontalPodAutoscalerParams) (*PatchAutoscalingV2beta1NamespacedHorizontalPodAutoscalerOK, error)

	PatchAutoscalingV2beta1NamespacedHorizontalPodAutoscalerStatus(params *PatchAutoscalingV2beta1NamespacedHorizontalPodAutoscalerStatusParams) (*PatchAutoscalingV2beta1NamespacedHorizontalPodAutoscalerStatusOK, error)

	ReadAutoscalingV2beta1NamespacedHorizontalPodAutoscaler(params *ReadAutoscalingV2beta1NamespacedHorizontalPodAutoscalerParams) (*ReadAutoscalingV2beta1NamespacedHorizontalPodAutoscalerOK, error)

	ReadAutoscalingV2beta1NamespacedHorizontalPodAutoscalerStatus(params *ReadAutoscalingV2beta1NamespacedHorizontalPodAutoscalerStatusParams) (*ReadAutoscalingV2beta1NamespacedHorizontalPodAutoscalerStatusOK, error)

	ReplaceAutoscalingV2beta1NamespacedHorizontalPodAutoscaler(params *ReplaceAutoscalingV2beta1NamespacedHorizontalPodAutoscalerParams) (*ReplaceAutoscalingV2beta1NamespacedHorizontalPodAutoscalerOK, *ReplaceAutoscalingV2beta1NamespacedHorizontalPodAutoscalerCreated, error)

	ReplaceAutoscalingV2beta1NamespacedHorizontalPodAutoscalerStatus(params *ReplaceAutoscalingV2beta1NamespacedHorizontalPodAutoscalerStatusParams) (*ReplaceAutoscalingV2beta1NamespacedHorizontalPodAutoscalerStatusOK, *ReplaceAutoscalingV2beta1NamespacedHorizontalPodAutoscalerStatusCreated, error)

	WatchAutoscalingV2beta1HorizontalPodAutoscalerListForAllNamespaces(params *WatchAutoscalingV2beta1HorizontalPodAutoscalerListForAllNamespacesParams) (*WatchAutoscalingV2beta1HorizontalPodAutoscalerListForAllNamespacesOK, error)

	WatchAutoscalingV2beta1NamespacedHorizontalPodAutoscaler(params *WatchAutoscalingV2beta1NamespacedHorizontalPodAutoscalerParams) (*WatchAutoscalingV2beta1NamespacedHorizontalPodAutoscalerOK, error)

	WatchAutoscalingV2beta1NamespacedHorizontalPodAutoscalerList(params *WatchAutoscalingV2beta1NamespacedHorizontalPodAutoscalerListParams) (*WatchAutoscalingV2beta1NamespacedHorizontalPodAutoscalerListOK, error)

	SetTransport(transport runtime.ClientTransport)
}

/*
  CreateAutoscalingV2beta1NamespacedHorizontalPodAutoscaler create a HorizontalPodAutoscaler
*/
func (a *Client) CreateAutoscalingV2beta1NamespacedHorizontalPodAutoscaler(params *CreateAutoscalingV2beta1NamespacedHorizontalPodAutoscalerParams) (*CreateAutoscalingV2beta1NamespacedHorizontalPodAutoscalerOK, *CreateAutoscalingV2beta1NamespacedHorizontalPodAutoscalerCreated, *CreateAutoscalingV2beta1NamespacedHorizontalPodAutoscalerAccepted, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewCreateAutoscalingV2beta1NamespacedHorizontalPodAutoscalerParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "createAutoscalingV2beta1NamespacedHorizontalPodAutoscaler",
		Method:             "POST",
		PathPattern:        "/apis/autoscaling/v2beta1/namespaces/{namespace}/horizontalpodautoscalers",
		ProducesMediaTypes: []string{"application/json", "application/vnd.kubernetes.protobuf", "application/yaml"},
		ConsumesMediaTypes: []string{"*/*"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &CreateAutoscalingV2beta1NamespacedHorizontalPodAutoscalerReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, nil, nil, err
	}
	switch value := result.(type) {
	case *CreateAutoscalingV2beta1NamespacedHorizontalPodAutoscalerOK:
		return value, nil, nil, nil
	case *CreateAutoscalingV2beta1NamespacedHorizontalPodAutoscalerCreated:
		return nil, value, nil, nil
	case *CreateAutoscalingV2beta1NamespacedHorizontalPodAutoscalerAccepted:
		return nil, nil, value, nil
	}
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for autoscaling_v2beta1: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  DeleteAutoscalingV2beta1CollectionNamespacedHorizontalPodAutoscaler delete collection of HorizontalPodAutoscaler
*/
func (a *Client) DeleteAutoscalingV2beta1CollectionNamespacedHorizontalPodAutoscaler(params *DeleteAutoscalingV2beta1CollectionNamespacedHorizontalPodAutoscalerParams) (*DeleteAutoscalingV2beta1CollectionNamespacedHorizontalPodAutoscalerOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewDeleteAutoscalingV2beta1CollectionNamespacedHorizontalPodAutoscalerParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "deleteAutoscalingV2beta1CollectionNamespacedHorizontalPodAutoscaler",
		Method:             "DELETE",
		PathPattern:        "/apis/autoscaling/v2beta1/namespaces/{namespace}/horizontalpodautoscalers",
		ProducesMediaTypes: []string{"application/json", "application/vnd.kubernetes.protobuf", "application/yaml"},
		ConsumesMediaTypes: []string{"*/*"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &DeleteAutoscalingV2beta1CollectionNamespacedHorizontalPodAutoscalerReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*DeleteAutoscalingV2beta1CollectionNamespacedHorizontalPodAutoscalerOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for deleteAutoscalingV2beta1CollectionNamespacedHorizontalPodAutoscaler: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  DeleteAutoscalingV2beta1NamespacedHorizontalPodAutoscaler delete a HorizontalPodAutoscaler
*/
func (a *Client) DeleteAutoscalingV2beta1NamespacedHorizontalPodAutoscaler(params *DeleteAutoscalingV2beta1NamespacedHorizontalPodAutoscalerParams) (*DeleteAutoscalingV2beta1NamespacedHorizontalPodAutoscalerOK, *DeleteAutoscalingV2beta1NamespacedHorizontalPodAutoscalerAccepted, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewDeleteAutoscalingV2beta1NamespacedHorizontalPodAutoscalerParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "deleteAutoscalingV2beta1NamespacedHorizontalPodAutoscaler",
		Method:             "DELETE",
		PathPattern:        "/apis/autoscaling/v2beta1/namespaces/{namespace}/horizontalpodautoscalers/{name}",
		ProducesMediaTypes: []string{"application/json", "application/vnd.kubernetes.protobuf", "application/yaml"},
		ConsumesMediaTypes: []string{"*/*"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &DeleteAutoscalingV2beta1NamespacedHorizontalPodAutoscalerReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, nil, err
	}
	switch value := result.(type) {
	case *DeleteAutoscalingV2beta1NamespacedHorizontalPodAutoscalerOK:
		return value, nil, nil
	case *DeleteAutoscalingV2beta1NamespacedHorizontalPodAutoscalerAccepted:
		return nil, value, nil
	}
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for autoscaling_v2beta1: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  GetAutoscalingV2beta1APIResources get available resources
*/
func (a *Client) GetAutoscalingV2beta1APIResources(params *GetAutoscalingV2beta1APIResourcesParams) (*GetAutoscalingV2beta1APIResourcesOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewGetAutoscalingV2beta1APIResourcesParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "getAutoscalingV2beta1APIResources",
		Method:             "GET",
		PathPattern:        "/apis/autoscaling/v2beta1/",
		ProducesMediaTypes: []string{"application/json", "application/vnd.kubernetes.protobuf", "application/yaml"},
		ConsumesMediaTypes: []string{"application/json", "application/vnd.kubernetes.protobuf", "application/yaml"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &GetAutoscalingV2beta1APIResourcesReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*GetAutoscalingV2beta1APIResourcesOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for getAutoscalingV2beta1APIResources: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  ListAutoscalingV2beta1HorizontalPodAutoscalerForAllNamespaces list or watch objects of kind HorizontalPodAutoscaler
*/
func (a *Client) ListAutoscalingV2beta1HorizontalPodAutoscalerForAllNamespaces(params *ListAutoscalingV2beta1HorizontalPodAutoscalerForAllNamespacesParams) (*ListAutoscalingV2beta1HorizontalPodAutoscalerForAllNamespacesOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewListAutoscalingV2beta1HorizontalPodAutoscalerForAllNamespacesParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "listAutoscalingV2beta1HorizontalPodAutoscalerForAllNamespaces",
		Method:             "GET",
		PathPattern:        "/apis/autoscaling/v2beta1/horizontalpodautoscalers",
		ProducesMediaTypes: []string{"application/json", "application/json;stream=watch", "application/vnd.kubernetes.protobuf", "application/vnd.kubernetes.protobuf;stream=watch", "application/yaml"},
		ConsumesMediaTypes: []string{"*/*"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &ListAutoscalingV2beta1HorizontalPodAutoscalerForAllNamespacesReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*ListAutoscalingV2beta1HorizontalPodAutoscalerForAllNamespacesOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for listAutoscalingV2beta1HorizontalPodAutoscalerForAllNamespaces: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  ListAutoscalingV2beta1NamespacedHorizontalPodAutoscaler list or watch objects of kind HorizontalPodAutoscaler
*/
func (a *Client) ListAutoscalingV2beta1NamespacedHorizontalPodAutoscaler(params *ListAutoscalingV2beta1NamespacedHorizontalPodAutoscalerParams) (*ListAutoscalingV2beta1NamespacedHorizontalPodAutoscalerOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewListAutoscalingV2beta1NamespacedHorizontalPodAutoscalerParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "listAutoscalingV2beta1NamespacedHorizontalPodAutoscaler",
		Method:             "GET",
		PathPattern:        "/apis/autoscaling/v2beta1/namespaces/{namespace}/horizontalpodautoscalers",
		ProducesMediaTypes: []string{"application/json", "application/json;stream=watch", "application/vnd.kubernetes.protobuf", "application/vnd.kubernetes.protobuf;stream=watch", "application/yaml"},
		ConsumesMediaTypes: []string{"*/*"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &ListAutoscalingV2beta1NamespacedHorizontalPodAutoscalerReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*ListAutoscalingV2beta1NamespacedHorizontalPodAutoscalerOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for listAutoscalingV2beta1NamespacedHorizontalPodAutoscaler: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  PatchAutoscalingV2beta1NamespacedHorizontalPodAutoscaler partially update the specified HorizontalPodAutoscaler
*/
func (a *Client) PatchAutoscalingV2beta1NamespacedHorizontalPodAutoscaler(params *PatchAutoscalingV2beta1NamespacedHorizontalPodAutoscalerParams) (*PatchAutoscalingV2beta1NamespacedHorizontalPodAutoscalerOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewPatchAutoscalingV2beta1NamespacedHorizontalPodAutoscalerParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "patchAutoscalingV2beta1NamespacedHorizontalPodAutoscaler",
		Method:             "PATCH",
		PathPattern:        "/apis/autoscaling/v2beta1/namespaces/{namespace}/horizontalpodautoscalers/{name}",
		ProducesMediaTypes: []string{"application/json", "application/vnd.kubernetes.protobuf", "application/yaml"},
		ConsumesMediaTypes: []string{"application/apply-patch+yaml", "application/json-patch+json", "application/merge-patch+json", "application/strategic-merge-patch+json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &PatchAutoscalingV2beta1NamespacedHorizontalPodAutoscalerReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*PatchAutoscalingV2beta1NamespacedHorizontalPodAutoscalerOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for patchAutoscalingV2beta1NamespacedHorizontalPodAutoscaler: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  PatchAutoscalingV2beta1NamespacedHorizontalPodAutoscalerStatus partially update status of the specified HorizontalPodAutoscaler
*/
func (a *Client) PatchAutoscalingV2beta1NamespacedHorizontalPodAutoscalerStatus(params *PatchAutoscalingV2beta1NamespacedHorizontalPodAutoscalerStatusParams) (*PatchAutoscalingV2beta1NamespacedHorizontalPodAutoscalerStatusOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewPatchAutoscalingV2beta1NamespacedHorizontalPodAutoscalerStatusParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "patchAutoscalingV2beta1NamespacedHorizontalPodAutoscalerStatus",
		Method:             "PATCH",
		PathPattern:        "/apis/autoscaling/v2beta1/namespaces/{namespace}/horizontalpodautoscalers/{name}/status",
		ProducesMediaTypes: []string{"application/json", "application/vnd.kubernetes.protobuf", "application/yaml"},
		ConsumesMediaTypes: []string{"application/apply-patch+yaml", "application/json-patch+json", "application/merge-patch+json", "application/strategic-merge-patch+json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &PatchAutoscalingV2beta1NamespacedHorizontalPodAutoscalerStatusReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*PatchAutoscalingV2beta1NamespacedHorizontalPodAutoscalerStatusOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for patchAutoscalingV2beta1NamespacedHorizontalPodAutoscalerStatus: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  ReadAutoscalingV2beta1NamespacedHorizontalPodAutoscaler read the specified HorizontalPodAutoscaler
*/
func (a *Client) ReadAutoscalingV2beta1NamespacedHorizontalPodAutoscaler(params *ReadAutoscalingV2beta1NamespacedHorizontalPodAutoscalerParams) (*ReadAutoscalingV2beta1NamespacedHorizontalPodAutoscalerOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewReadAutoscalingV2beta1NamespacedHorizontalPodAutoscalerParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "readAutoscalingV2beta1NamespacedHorizontalPodAutoscaler",
		Method:             "GET",
		PathPattern:        "/apis/autoscaling/v2beta1/namespaces/{namespace}/horizontalpodautoscalers/{name}",
		ProducesMediaTypes: []string{"application/json", "application/vnd.kubernetes.protobuf", "application/yaml"},
		ConsumesMediaTypes: []string{"*/*"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &ReadAutoscalingV2beta1NamespacedHorizontalPodAutoscalerReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*ReadAutoscalingV2beta1NamespacedHorizontalPodAutoscalerOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for readAutoscalingV2beta1NamespacedHorizontalPodAutoscaler: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  ReadAutoscalingV2beta1NamespacedHorizontalPodAutoscalerStatus read status of the specified HorizontalPodAutoscaler
*/
func (a *Client) ReadAutoscalingV2beta1NamespacedHorizontalPodAutoscalerStatus(params *ReadAutoscalingV2beta1NamespacedHorizontalPodAutoscalerStatusParams) (*ReadAutoscalingV2beta1NamespacedHorizontalPodAutoscalerStatusOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewReadAutoscalingV2beta1NamespacedHorizontalPodAutoscalerStatusParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "readAutoscalingV2beta1NamespacedHorizontalPodAutoscalerStatus",
		Method:             "GET",
		PathPattern:        "/apis/autoscaling/v2beta1/namespaces/{namespace}/horizontalpodautoscalers/{name}/status",
		ProducesMediaTypes: []string{"application/json", "application/vnd.kubernetes.protobuf", "application/yaml"},
		ConsumesMediaTypes: []string{"*/*"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &ReadAutoscalingV2beta1NamespacedHorizontalPodAutoscalerStatusReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*ReadAutoscalingV2beta1NamespacedHorizontalPodAutoscalerStatusOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for readAutoscalingV2beta1NamespacedHorizontalPodAutoscalerStatus: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  ReplaceAutoscalingV2beta1NamespacedHorizontalPodAutoscaler replace the specified HorizontalPodAutoscaler
*/
func (a *Client) ReplaceAutoscalingV2beta1NamespacedHorizontalPodAutoscaler(params *ReplaceAutoscalingV2beta1NamespacedHorizontalPodAutoscalerParams) (*ReplaceAutoscalingV2beta1NamespacedHorizontalPodAutoscalerOK, *ReplaceAutoscalingV2beta1NamespacedHorizontalPodAutoscalerCreated, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewReplaceAutoscalingV2beta1NamespacedHorizontalPodAutoscalerParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "replaceAutoscalingV2beta1NamespacedHorizontalPodAutoscaler",
		Method:             "PUT",
		PathPattern:        "/apis/autoscaling/v2beta1/namespaces/{namespace}/horizontalpodautoscalers/{name}",
		ProducesMediaTypes: []string{"application/json", "application/vnd.kubernetes.protobuf", "application/yaml"},
		ConsumesMediaTypes: []string{"*/*"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &ReplaceAutoscalingV2beta1NamespacedHorizontalPodAutoscalerReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, nil, err
	}
	switch value := result.(type) {
	case *ReplaceAutoscalingV2beta1NamespacedHorizontalPodAutoscalerOK:
		return value, nil, nil
	case *ReplaceAutoscalingV2beta1NamespacedHorizontalPodAutoscalerCreated:
		return nil, value, nil
	}
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for autoscaling_v2beta1: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  ReplaceAutoscalingV2beta1NamespacedHorizontalPodAutoscalerStatus replace status of the specified HorizontalPodAutoscaler
*/
func (a *Client) ReplaceAutoscalingV2beta1NamespacedHorizontalPodAutoscalerStatus(params *ReplaceAutoscalingV2beta1NamespacedHorizontalPodAutoscalerStatusParams) (*ReplaceAutoscalingV2beta1NamespacedHorizontalPodAutoscalerStatusOK, *ReplaceAutoscalingV2beta1NamespacedHorizontalPodAutoscalerStatusCreated, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewReplaceAutoscalingV2beta1NamespacedHorizontalPodAutoscalerStatusParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "replaceAutoscalingV2beta1NamespacedHorizontalPodAutoscalerStatus",
		Method:             "PUT",
		PathPattern:        "/apis/autoscaling/v2beta1/namespaces/{namespace}/horizontalpodautoscalers/{name}/status",
		ProducesMediaTypes: []string{"application/json", "application/vnd.kubernetes.protobuf", "application/yaml"},
		ConsumesMediaTypes: []string{"*/*"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &ReplaceAutoscalingV2beta1NamespacedHorizontalPodAutoscalerStatusReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, nil, err
	}
	switch value := result.(type) {
	case *ReplaceAutoscalingV2beta1NamespacedHorizontalPodAutoscalerStatusOK:
		return value, nil, nil
	case *ReplaceAutoscalingV2beta1NamespacedHorizontalPodAutoscalerStatusCreated:
		return nil, value, nil
	}
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for autoscaling_v2beta1: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  WatchAutoscalingV2beta1HorizontalPodAutoscalerListForAllNamespaces watch individual changes to a list of HorizontalPodAutoscaler. deprecated: use the 'watch' parameter with a list operation instead.
*/
func (a *Client) WatchAutoscalingV2beta1HorizontalPodAutoscalerListForAllNamespaces(params *WatchAutoscalingV2beta1HorizontalPodAutoscalerListForAllNamespacesParams) (*WatchAutoscalingV2beta1HorizontalPodAutoscalerListForAllNamespacesOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewWatchAutoscalingV2beta1HorizontalPodAutoscalerListForAllNamespacesParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "watchAutoscalingV2beta1HorizontalPodAutoscalerListForAllNamespaces",
		Method:             "GET",
		PathPattern:        "/apis/autoscaling/v2beta1/watch/horizontalpodautoscalers",
		ProducesMediaTypes: []string{"application/json", "application/json;stream=watch", "application/vnd.kubernetes.protobuf", "application/vnd.kubernetes.protobuf;stream=watch", "application/yaml"},
		ConsumesMediaTypes: []string{"*/*"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &WatchAutoscalingV2beta1HorizontalPodAutoscalerListForAllNamespacesReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*WatchAutoscalingV2beta1HorizontalPodAutoscalerListForAllNamespacesOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for watchAutoscalingV2beta1HorizontalPodAutoscalerListForAllNamespaces: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  WatchAutoscalingV2beta1NamespacedHorizontalPodAutoscaler watch changes to an object of kind HorizontalPodAutoscaler. deprecated: use the 'watch' parameter with a list operation instead, filtered to a single item with the 'fieldSelector' parameter.
*/
func (a *Client) WatchAutoscalingV2beta1NamespacedHorizontalPodAutoscaler(params *WatchAutoscalingV2beta1NamespacedHorizontalPodAutoscalerParams) (*WatchAutoscalingV2beta1NamespacedHorizontalPodAutoscalerOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewWatchAutoscalingV2beta1NamespacedHorizontalPodAutoscalerParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "watchAutoscalingV2beta1NamespacedHorizontalPodAutoscaler",
		Method:             "GET",
		PathPattern:        "/apis/autoscaling/v2beta1/watch/namespaces/{namespace}/horizontalpodautoscalers/{name}",
		ProducesMediaTypes: []string{"application/json", "application/json;stream=watch", "application/vnd.kubernetes.protobuf", "application/vnd.kubernetes.protobuf;stream=watch", "application/yaml"},
		ConsumesMediaTypes: []string{"*/*"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &WatchAutoscalingV2beta1NamespacedHorizontalPodAutoscalerReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*WatchAutoscalingV2beta1NamespacedHorizontalPodAutoscalerOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for watchAutoscalingV2beta1NamespacedHorizontalPodAutoscaler: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  WatchAutoscalingV2beta1NamespacedHorizontalPodAutoscalerList watch individual changes to a list of HorizontalPodAutoscaler. deprecated: use the 'watch' parameter with a list operation instead.
*/
func (a *Client) WatchAutoscalingV2beta1NamespacedHorizontalPodAutoscalerList(params *WatchAutoscalingV2beta1NamespacedHorizontalPodAutoscalerListParams) (*WatchAutoscalingV2beta1NamespacedHorizontalPodAutoscalerListOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewWatchAutoscalingV2beta1NamespacedHorizontalPodAutoscalerListParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "watchAutoscalingV2beta1NamespacedHorizontalPodAutoscalerList",
		Method:             "GET",
		PathPattern:        "/apis/autoscaling/v2beta1/watch/namespaces/{namespace}/horizontalpodautoscalers",
		ProducesMediaTypes: []string{"application/json", "application/json;stream=watch", "application/vnd.kubernetes.protobuf", "application/vnd.kubernetes.protobuf;stream=watch", "application/yaml"},
		ConsumesMediaTypes: []string{"*/*"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &WatchAutoscalingV2beta1NamespacedHorizontalPodAutoscalerListReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*WatchAutoscalingV2beta1NamespacedHorizontalPodAutoscalerListOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for watchAutoscalingV2beta1NamespacedHorizontalPodAutoscalerList: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

// SetTransport changes the transport on the client
func (a *Client) SetTransport(transport runtime.ClientTransport) {
	a.transport = transport
}
