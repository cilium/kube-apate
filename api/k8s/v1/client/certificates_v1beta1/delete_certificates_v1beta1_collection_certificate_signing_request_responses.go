// Code generated by go-swagger; DO NOT EDIT.

// Copyright 2017-2020 Authors of Cilium
// SPDX-License-Identifier: Apache-2.0

package certificates_v1beta1

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/cilium/kube-apate/api/k8s/v1/models"
)

// DeleteCertificatesV1beta1CollectionCertificateSigningRequestReader is a Reader for the DeleteCertificatesV1beta1CollectionCertificateSigningRequest structure.
type DeleteCertificatesV1beta1CollectionCertificateSigningRequestReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteCertificatesV1beta1CollectionCertificateSigningRequestReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewDeleteCertificatesV1beta1CollectionCertificateSigningRequestOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewDeleteCertificatesV1beta1CollectionCertificateSigningRequestUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewDeleteCertificatesV1beta1CollectionCertificateSigningRequestOK creates a DeleteCertificatesV1beta1CollectionCertificateSigningRequestOK with default headers values
func NewDeleteCertificatesV1beta1CollectionCertificateSigningRequestOK() *DeleteCertificatesV1beta1CollectionCertificateSigningRequestOK {
	return &DeleteCertificatesV1beta1CollectionCertificateSigningRequestOK{}
}

/*DeleteCertificatesV1beta1CollectionCertificateSigningRequestOK handles this case with default header values.

OK
*/
type DeleteCertificatesV1beta1CollectionCertificateSigningRequestOK struct {
	Payload *models.IoK8sApimachineryPkgApisMetaV1Status
}

func (o *DeleteCertificatesV1beta1CollectionCertificateSigningRequestOK) Error() string {
	return fmt.Sprintf("[DELETE /apis/certificates.k8s.io/v1beta1/certificatesigningrequests][%d] deleteCertificatesV1beta1CollectionCertificateSigningRequestOK  %+v", 200, o.Payload)
}

func (o *DeleteCertificatesV1beta1CollectionCertificateSigningRequestOK) GetPayload() *models.IoK8sApimachineryPkgApisMetaV1Status {
	return o.Payload
}

func (o *DeleteCertificatesV1beta1CollectionCertificateSigningRequestOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.IoK8sApimachineryPkgApisMetaV1Status)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteCertificatesV1beta1CollectionCertificateSigningRequestUnauthorized creates a DeleteCertificatesV1beta1CollectionCertificateSigningRequestUnauthorized with default headers values
func NewDeleteCertificatesV1beta1CollectionCertificateSigningRequestUnauthorized() *DeleteCertificatesV1beta1CollectionCertificateSigningRequestUnauthorized {
	return &DeleteCertificatesV1beta1CollectionCertificateSigningRequestUnauthorized{}
}

/*DeleteCertificatesV1beta1CollectionCertificateSigningRequestUnauthorized handles this case with default header values.

Unauthorized
*/
type DeleteCertificatesV1beta1CollectionCertificateSigningRequestUnauthorized struct {
}

func (o *DeleteCertificatesV1beta1CollectionCertificateSigningRequestUnauthorized) Error() string {
	return fmt.Sprintf("[DELETE /apis/certificates.k8s.io/v1beta1/certificatesigningrequests][%d] deleteCertificatesV1beta1CollectionCertificateSigningRequestUnauthorized ", 401)
}

func (o *DeleteCertificatesV1beta1CollectionCertificateSigningRequestUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
