// Code generated by go-swagger; DO NOT EDIT.

// Copyright 2017-2020 Authors of Cilium
// SPDX-License-Identifier: Apache-2.0

package certificates_v1

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/cilium/kube-apate/api/k8s/v1/models"
)

// ReplaceCertificatesV1CertificateSigningRequestApprovalReader is a Reader for the ReplaceCertificatesV1CertificateSigningRequestApproval structure.
type ReplaceCertificatesV1CertificateSigningRequestApprovalReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ReplaceCertificatesV1CertificateSigningRequestApprovalReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewReplaceCertificatesV1CertificateSigningRequestApprovalOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 201:
		result := NewReplaceCertificatesV1CertificateSigningRequestApprovalCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewReplaceCertificatesV1CertificateSigningRequestApprovalUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewReplaceCertificatesV1CertificateSigningRequestApprovalOK creates a ReplaceCertificatesV1CertificateSigningRequestApprovalOK with default headers values
func NewReplaceCertificatesV1CertificateSigningRequestApprovalOK() *ReplaceCertificatesV1CertificateSigningRequestApprovalOK {
	return &ReplaceCertificatesV1CertificateSigningRequestApprovalOK{}
}

/*ReplaceCertificatesV1CertificateSigningRequestApprovalOK handles this case with default header values.

OK
*/
type ReplaceCertificatesV1CertificateSigningRequestApprovalOK struct {
	Payload *models.IoK8sAPICertificatesV1CertificateSigningRequest
}

func (o *ReplaceCertificatesV1CertificateSigningRequestApprovalOK) Error() string {
	return fmt.Sprintf("[PUT /apis/certificates.k8s.io/v1/certificatesigningrequests/{name}/approval][%d] replaceCertificatesV1CertificateSigningRequestApprovalOK  %+v", 200, o.Payload)
}

func (o *ReplaceCertificatesV1CertificateSigningRequestApprovalOK) GetPayload() *models.IoK8sAPICertificatesV1CertificateSigningRequest {
	return o.Payload
}

func (o *ReplaceCertificatesV1CertificateSigningRequestApprovalOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.IoK8sAPICertificatesV1CertificateSigningRequest)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewReplaceCertificatesV1CertificateSigningRequestApprovalCreated creates a ReplaceCertificatesV1CertificateSigningRequestApprovalCreated with default headers values
func NewReplaceCertificatesV1CertificateSigningRequestApprovalCreated() *ReplaceCertificatesV1CertificateSigningRequestApprovalCreated {
	return &ReplaceCertificatesV1CertificateSigningRequestApprovalCreated{}
}

/*ReplaceCertificatesV1CertificateSigningRequestApprovalCreated handles this case with default header values.

Created
*/
type ReplaceCertificatesV1CertificateSigningRequestApprovalCreated struct {
	Payload *models.IoK8sAPICertificatesV1CertificateSigningRequest
}

func (o *ReplaceCertificatesV1CertificateSigningRequestApprovalCreated) Error() string {
	return fmt.Sprintf("[PUT /apis/certificates.k8s.io/v1/certificatesigningrequests/{name}/approval][%d] replaceCertificatesV1CertificateSigningRequestApprovalCreated  %+v", 201, o.Payload)
}

func (o *ReplaceCertificatesV1CertificateSigningRequestApprovalCreated) GetPayload() *models.IoK8sAPICertificatesV1CertificateSigningRequest {
	return o.Payload
}

func (o *ReplaceCertificatesV1CertificateSigningRequestApprovalCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.IoK8sAPICertificatesV1CertificateSigningRequest)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewReplaceCertificatesV1CertificateSigningRequestApprovalUnauthorized creates a ReplaceCertificatesV1CertificateSigningRequestApprovalUnauthorized with default headers values
func NewReplaceCertificatesV1CertificateSigningRequestApprovalUnauthorized() *ReplaceCertificatesV1CertificateSigningRequestApprovalUnauthorized {
	return &ReplaceCertificatesV1CertificateSigningRequestApprovalUnauthorized{}
}

/*ReplaceCertificatesV1CertificateSigningRequestApprovalUnauthorized handles this case with default header values.

Unauthorized
*/
type ReplaceCertificatesV1CertificateSigningRequestApprovalUnauthorized struct {
}

func (o *ReplaceCertificatesV1CertificateSigningRequestApprovalUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /apis/certificates.k8s.io/v1/certificatesigningrequests/{name}/approval][%d] replaceCertificatesV1CertificateSigningRequestApprovalUnauthorized ", 401)
}

func (o *ReplaceCertificatesV1CertificateSigningRequestApprovalUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
