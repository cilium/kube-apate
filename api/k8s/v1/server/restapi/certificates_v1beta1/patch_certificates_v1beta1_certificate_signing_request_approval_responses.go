// Code generated by go-swagger; DO NOT EDIT.

// Copyright 2017-2020 Authors of Cilium
// SPDX-License-Identifier: Apache-2.0

package certificates_v1beta1

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/cilium/kube-apate/api/k8s/v1/models"
)

// PatchCertificatesV1beta1CertificateSigningRequestApprovalOKCode is the HTTP code returned for type PatchCertificatesV1beta1CertificateSigningRequestApprovalOK
const PatchCertificatesV1beta1CertificateSigningRequestApprovalOKCode int = 200

/*PatchCertificatesV1beta1CertificateSigningRequestApprovalOK OK

swagger:response patchCertificatesV1beta1CertificateSigningRequestApprovalOK
*/
type PatchCertificatesV1beta1CertificateSigningRequestApprovalOK struct {

	/*
	  In: Body
	*/
	Payload *models.IoK8sAPICertificatesV1beta1CertificateSigningRequest `json:"body,omitempty"`
}

// NewPatchCertificatesV1beta1CertificateSigningRequestApprovalOK creates PatchCertificatesV1beta1CertificateSigningRequestApprovalOK with default headers values
func NewPatchCertificatesV1beta1CertificateSigningRequestApprovalOK() *PatchCertificatesV1beta1CertificateSigningRequestApprovalOK {

	return &PatchCertificatesV1beta1CertificateSigningRequestApprovalOK{}
}

// WithPayload adds the payload to the patch certificates v1beta1 certificate signing request approval o k response
func (o *PatchCertificatesV1beta1CertificateSigningRequestApprovalOK) WithPayload(payload *models.IoK8sAPICertificatesV1beta1CertificateSigningRequest) *PatchCertificatesV1beta1CertificateSigningRequestApprovalOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the patch certificates v1beta1 certificate signing request approval o k response
func (o *PatchCertificatesV1beta1CertificateSigningRequestApprovalOK) SetPayload(payload *models.IoK8sAPICertificatesV1beta1CertificateSigningRequest) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PatchCertificatesV1beta1CertificateSigningRequestApprovalOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PatchCertificatesV1beta1CertificateSigningRequestApprovalUnauthorizedCode is the HTTP code returned for type PatchCertificatesV1beta1CertificateSigningRequestApprovalUnauthorized
const PatchCertificatesV1beta1CertificateSigningRequestApprovalUnauthorizedCode int = 401

/*PatchCertificatesV1beta1CertificateSigningRequestApprovalUnauthorized Unauthorized

swagger:response patchCertificatesV1beta1CertificateSigningRequestApprovalUnauthorized
*/
type PatchCertificatesV1beta1CertificateSigningRequestApprovalUnauthorized struct {
}

// NewPatchCertificatesV1beta1CertificateSigningRequestApprovalUnauthorized creates PatchCertificatesV1beta1CertificateSigningRequestApprovalUnauthorized with default headers values
func NewPatchCertificatesV1beta1CertificateSigningRequestApprovalUnauthorized() *PatchCertificatesV1beta1CertificateSigningRequestApprovalUnauthorized {

	return &PatchCertificatesV1beta1CertificateSigningRequestApprovalUnauthorized{}
}

// WriteResponse to the client
func (o *PatchCertificatesV1beta1CertificateSigningRequestApprovalUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(401)
}
