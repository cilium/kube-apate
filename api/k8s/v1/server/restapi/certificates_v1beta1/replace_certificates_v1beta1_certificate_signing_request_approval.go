// Code generated by go-swagger; DO NOT EDIT.

// Copyright 2017-2020 Authors of Cilium
// SPDX-License-Identifier: Apache-2.0

package certificates_v1beta1

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	"github.com/go-openapi/runtime/middleware"
)

// ReplaceCertificatesV1beta1CertificateSigningRequestApprovalHandlerFunc turns a function with the right signature into a replace certificates v1beta1 certificate signing request approval handler
type ReplaceCertificatesV1beta1CertificateSigningRequestApprovalHandlerFunc func(ReplaceCertificatesV1beta1CertificateSigningRequestApprovalParams) middleware.Responder

// Handle executing the request and returning a response
func (fn ReplaceCertificatesV1beta1CertificateSigningRequestApprovalHandlerFunc) Handle(params ReplaceCertificatesV1beta1CertificateSigningRequestApprovalParams) middleware.Responder {
	return fn(params)
}

// ReplaceCertificatesV1beta1CertificateSigningRequestApprovalHandler interface for that can handle valid replace certificates v1beta1 certificate signing request approval params
type ReplaceCertificatesV1beta1CertificateSigningRequestApprovalHandler interface {
	Handle(ReplaceCertificatesV1beta1CertificateSigningRequestApprovalParams) middleware.Responder
}

// NewReplaceCertificatesV1beta1CertificateSigningRequestApproval creates a new http.Handler for the replace certificates v1beta1 certificate signing request approval operation
func NewReplaceCertificatesV1beta1CertificateSigningRequestApproval(ctx *middleware.Context, handler ReplaceCertificatesV1beta1CertificateSigningRequestApprovalHandler) *ReplaceCertificatesV1beta1CertificateSigningRequestApproval {
	return &ReplaceCertificatesV1beta1CertificateSigningRequestApproval{Context: ctx, Handler: handler}
}

/*ReplaceCertificatesV1beta1CertificateSigningRequestApproval swagger:route PUT /apis/certificates.k8s.io/v1beta1/certificatesigningrequests/{name}/approval certificates_v1beta1 replaceCertificatesV1beta1CertificateSigningRequestApproval

replace approval of the specified CertificateSigningRequest

*/
type ReplaceCertificatesV1beta1CertificateSigningRequestApproval struct {
	Context *middleware.Context
	Handler ReplaceCertificatesV1beta1CertificateSigningRequestApprovalHandler
}

func (o *ReplaceCertificatesV1beta1CertificateSigningRequestApproval) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewReplaceCertificatesV1beta1CertificateSigningRequestApprovalParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}
