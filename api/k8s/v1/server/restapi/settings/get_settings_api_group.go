// Code generated by go-swagger; DO NOT EDIT.

// Copyright 2017-2020 Authors of Cilium
// SPDX-License-Identifier: Apache-2.0

package settings

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	"github.com/go-openapi/runtime/middleware"
)

// GetSettingsAPIGroupHandlerFunc turns a function with the right signature into a get settings API group handler
type GetSettingsAPIGroupHandlerFunc func(GetSettingsAPIGroupParams) middleware.Responder

// Handle executing the request and returning a response
func (fn GetSettingsAPIGroupHandlerFunc) Handle(params GetSettingsAPIGroupParams) middleware.Responder {
	return fn(params)
}

// GetSettingsAPIGroupHandler interface for that can handle valid get settings API group params
type GetSettingsAPIGroupHandler interface {
	Handle(GetSettingsAPIGroupParams) middleware.Responder
}

// NewGetSettingsAPIGroup creates a new http.Handler for the get settings API group operation
func NewGetSettingsAPIGroup(ctx *middleware.Context, handler GetSettingsAPIGroupHandler) *GetSettingsAPIGroup {
	return &GetSettingsAPIGroup{Context: ctx, Handler: handler}
}

/*GetSettingsAPIGroup swagger:route GET /apis/settings.k8s.io/ settings getSettingsApiGroup

get information of a group

*/
type GetSettingsAPIGroup struct {
	Context *middleware.Context
	Handler GetSettingsAPIGroupHandler
}

func (o *GetSettingsAPIGroup) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewGetSettingsAPIGroupParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}
