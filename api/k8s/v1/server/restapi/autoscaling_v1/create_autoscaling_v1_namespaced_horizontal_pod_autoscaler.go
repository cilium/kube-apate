// Code generated by go-swagger; DO NOT EDIT.

// Copyright 2017-2020 Authors of Cilium
// SPDX-License-Identifier: Apache-2.0

package autoscaling_v1

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	"github.com/go-openapi/runtime/middleware"
)

// CreateAutoscalingV1NamespacedHorizontalPodAutoscalerHandlerFunc turns a function with the right signature into a create autoscaling v1 namespaced horizontal pod autoscaler handler
type CreateAutoscalingV1NamespacedHorizontalPodAutoscalerHandlerFunc func(CreateAutoscalingV1NamespacedHorizontalPodAutoscalerParams) middleware.Responder

// Handle executing the request and returning a response
func (fn CreateAutoscalingV1NamespacedHorizontalPodAutoscalerHandlerFunc) Handle(params CreateAutoscalingV1NamespacedHorizontalPodAutoscalerParams) middleware.Responder {
	return fn(params)
}

// CreateAutoscalingV1NamespacedHorizontalPodAutoscalerHandler interface for that can handle valid create autoscaling v1 namespaced horizontal pod autoscaler params
type CreateAutoscalingV1NamespacedHorizontalPodAutoscalerHandler interface {
	Handle(CreateAutoscalingV1NamespacedHorizontalPodAutoscalerParams) middleware.Responder
}

// NewCreateAutoscalingV1NamespacedHorizontalPodAutoscaler creates a new http.Handler for the create autoscaling v1 namespaced horizontal pod autoscaler operation
func NewCreateAutoscalingV1NamespacedHorizontalPodAutoscaler(ctx *middleware.Context, handler CreateAutoscalingV1NamespacedHorizontalPodAutoscalerHandler) *CreateAutoscalingV1NamespacedHorizontalPodAutoscaler {
	return &CreateAutoscalingV1NamespacedHorizontalPodAutoscaler{Context: ctx, Handler: handler}
}

/*CreateAutoscalingV1NamespacedHorizontalPodAutoscaler swagger:route POST /apis/autoscaling/v1/namespaces/{namespace}/horizontalpodautoscalers autoscaling_v1 createAutoscalingV1NamespacedHorizontalPodAutoscaler

create a HorizontalPodAutoscaler

*/
type CreateAutoscalingV1NamespacedHorizontalPodAutoscaler struct {
	Context *middleware.Context
	Handler CreateAutoscalingV1NamespacedHorizontalPodAutoscalerHandler
}

func (o *CreateAutoscalingV1NamespacedHorizontalPodAutoscaler) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewCreateAutoscalingV1NamespacedHorizontalPodAutoscalerParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}
