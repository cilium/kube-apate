// Code generated by go-swagger; DO NOT EDIT.

// Copyright 2017-2020 Authors of Cilium
// SPDX-License-Identifier: Apache-2.0

package settings_v1alpha1

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	"github.com/go-openapi/runtime/middleware"
)

// WatchSettingsV1alpha1PodPresetListForAllNamespacesHandlerFunc turns a function with the right signature into a watch settings v1alpha1 pod preset list for all namespaces handler
type WatchSettingsV1alpha1PodPresetListForAllNamespacesHandlerFunc func(WatchSettingsV1alpha1PodPresetListForAllNamespacesParams) middleware.Responder

// Handle executing the request and returning a response
func (fn WatchSettingsV1alpha1PodPresetListForAllNamespacesHandlerFunc) Handle(params WatchSettingsV1alpha1PodPresetListForAllNamespacesParams) middleware.Responder {
	return fn(params)
}

// WatchSettingsV1alpha1PodPresetListForAllNamespacesHandler interface for that can handle valid watch settings v1alpha1 pod preset list for all namespaces params
type WatchSettingsV1alpha1PodPresetListForAllNamespacesHandler interface {
	Handle(WatchSettingsV1alpha1PodPresetListForAllNamespacesParams) middleware.Responder
}

// NewWatchSettingsV1alpha1PodPresetListForAllNamespaces creates a new http.Handler for the watch settings v1alpha1 pod preset list for all namespaces operation
func NewWatchSettingsV1alpha1PodPresetListForAllNamespaces(ctx *middleware.Context, handler WatchSettingsV1alpha1PodPresetListForAllNamespacesHandler) *WatchSettingsV1alpha1PodPresetListForAllNamespaces {
	return &WatchSettingsV1alpha1PodPresetListForAllNamespaces{Context: ctx, Handler: handler}
}

/*WatchSettingsV1alpha1PodPresetListForAllNamespaces swagger:route GET /apis/settings.k8s.io/v1alpha1/watch/podpresets settings_v1alpha1 watchSettingsV1alpha1PodPresetListForAllNamespaces

watch individual changes to a list of PodPreset. deprecated: use the 'watch' parameter with a list operation instead.

*/
type WatchSettingsV1alpha1PodPresetListForAllNamespaces struct {
	Context *middleware.Context
	Handler WatchSettingsV1alpha1PodPresetListForAllNamespacesHandler
}

func (o *WatchSettingsV1alpha1PodPresetListForAllNamespaces) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewWatchSettingsV1alpha1PodPresetListForAllNamespacesParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}
