// Code generated by go-swagger; DO NOT EDIT.

// Copyright 2017-2020 Authors of Cilium
// SPDX-License-Identifier: Apache-2.0

package cilium

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	"github.com/go-openapi/runtime/middleware"
)

// PatchApisCiliumIoV2CiliumIdentityStatusHandlerFunc turns a function with the right signature into a patch apis cilium io v2 cilium identity status handler
type PatchApisCiliumIoV2CiliumIdentityStatusHandlerFunc func(PatchApisCiliumIoV2CiliumIdentityStatusParams) middleware.Responder

// Handle executing the request and returning a response
func (fn PatchApisCiliumIoV2CiliumIdentityStatusHandlerFunc) Handle(params PatchApisCiliumIoV2CiliumIdentityStatusParams) middleware.Responder {
	return fn(params)
}

// PatchApisCiliumIoV2CiliumIdentityStatusHandler interface for that can handle valid patch apis cilium io v2 cilium identity status params
type PatchApisCiliumIoV2CiliumIdentityStatusHandler interface {
	Handle(PatchApisCiliumIoV2CiliumIdentityStatusParams) middleware.Responder
}

// NewPatchApisCiliumIoV2CiliumIdentityStatus creates a new http.Handler for the patch apis cilium io v2 cilium identity status operation
func NewPatchApisCiliumIoV2CiliumIdentityStatus(ctx *middleware.Context, handler PatchApisCiliumIoV2CiliumIdentityStatusHandler) *PatchApisCiliumIoV2CiliumIdentityStatus {
	return &PatchApisCiliumIoV2CiliumIdentityStatus{Context: ctx, Handler: handler}
}

/*PatchApisCiliumIoV2CiliumIdentityStatus swagger:route PATCH /apis/cilium.io/v2/ciliumidentities/{name}/status cilium patchApisCiliumIoV2CiliumIdentityStatus

PatchApisCiliumIoV2CiliumIdentityStatus patch apis cilium io v2 cilium identity status API

*/
type PatchApisCiliumIoV2CiliumIdentityStatus struct {
	Context *middleware.Context
	Handler PatchApisCiliumIoV2CiliumIdentityStatusHandler
}

func (o *PatchApisCiliumIoV2CiliumIdentityStatus) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewPatchApisCiliumIoV2CiliumIdentityStatusParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}
