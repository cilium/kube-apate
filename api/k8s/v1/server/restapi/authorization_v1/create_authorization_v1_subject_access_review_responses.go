// Code generated by go-swagger; DO NOT EDIT.

// Copyright 2017-2020 Authors of Cilium
// SPDX-License-Identifier: Apache-2.0

package authorization_v1

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/cilium/kube-apate/api/k8s/v1/models"
)

// CreateAuthorizationV1SubjectAccessReviewOKCode is the HTTP code returned for type CreateAuthorizationV1SubjectAccessReviewOK
const CreateAuthorizationV1SubjectAccessReviewOKCode int = 200

/*CreateAuthorizationV1SubjectAccessReviewOK OK

swagger:response createAuthorizationV1SubjectAccessReviewOK
*/
type CreateAuthorizationV1SubjectAccessReviewOK struct {

	/*
	  In: Body
	*/
	Payload *models.IoK8sAPIAuthorizationV1SubjectAccessReview `json:"body,omitempty"`
}

// NewCreateAuthorizationV1SubjectAccessReviewOK creates CreateAuthorizationV1SubjectAccessReviewOK with default headers values
func NewCreateAuthorizationV1SubjectAccessReviewOK() *CreateAuthorizationV1SubjectAccessReviewOK {

	return &CreateAuthorizationV1SubjectAccessReviewOK{}
}

// WithPayload adds the payload to the create authorization v1 subject access review o k response
func (o *CreateAuthorizationV1SubjectAccessReviewOK) WithPayload(payload *models.IoK8sAPIAuthorizationV1SubjectAccessReview) *CreateAuthorizationV1SubjectAccessReviewOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the create authorization v1 subject access review o k response
func (o *CreateAuthorizationV1SubjectAccessReviewOK) SetPayload(payload *models.IoK8sAPIAuthorizationV1SubjectAccessReview) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CreateAuthorizationV1SubjectAccessReviewOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// CreateAuthorizationV1SubjectAccessReviewCreatedCode is the HTTP code returned for type CreateAuthorizationV1SubjectAccessReviewCreated
const CreateAuthorizationV1SubjectAccessReviewCreatedCode int = 201

/*CreateAuthorizationV1SubjectAccessReviewCreated Created

swagger:response createAuthorizationV1SubjectAccessReviewCreated
*/
type CreateAuthorizationV1SubjectAccessReviewCreated struct {

	/*
	  In: Body
	*/
	Payload *models.IoK8sAPIAuthorizationV1SubjectAccessReview `json:"body,omitempty"`
}

// NewCreateAuthorizationV1SubjectAccessReviewCreated creates CreateAuthorizationV1SubjectAccessReviewCreated with default headers values
func NewCreateAuthorizationV1SubjectAccessReviewCreated() *CreateAuthorizationV1SubjectAccessReviewCreated {

	return &CreateAuthorizationV1SubjectAccessReviewCreated{}
}

// WithPayload adds the payload to the create authorization v1 subject access review created response
func (o *CreateAuthorizationV1SubjectAccessReviewCreated) WithPayload(payload *models.IoK8sAPIAuthorizationV1SubjectAccessReview) *CreateAuthorizationV1SubjectAccessReviewCreated {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the create authorization v1 subject access review created response
func (o *CreateAuthorizationV1SubjectAccessReviewCreated) SetPayload(payload *models.IoK8sAPIAuthorizationV1SubjectAccessReview) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CreateAuthorizationV1SubjectAccessReviewCreated) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(201)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// CreateAuthorizationV1SubjectAccessReviewAcceptedCode is the HTTP code returned for type CreateAuthorizationV1SubjectAccessReviewAccepted
const CreateAuthorizationV1SubjectAccessReviewAcceptedCode int = 202

/*CreateAuthorizationV1SubjectAccessReviewAccepted Accepted

swagger:response createAuthorizationV1SubjectAccessReviewAccepted
*/
type CreateAuthorizationV1SubjectAccessReviewAccepted struct {

	/*
	  In: Body
	*/
	Payload *models.IoK8sAPIAuthorizationV1SubjectAccessReview `json:"body,omitempty"`
}

// NewCreateAuthorizationV1SubjectAccessReviewAccepted creates CreateAuthorizationV1SubjectAccessReviewAccepted with default headers values
func NewCreateAuthorizationV1SubjectAccessReviewAccepted() *CreateAuthorizationV1SubjectAccessReviewAccepted {

	return &CreateAuthorizationV1SubjectAccessReviewAccepted{}
}

// WithPayload adds the payload to the create authorization v1 subject access review accepted response
func (o *CreateAuthorizationV1SubjectAccessReviewAccepted) WithPayload(payload *models.IoK8sAPIAuthorizationV1SubjectAccessReview) *CreateAuthorizationV1SubjectAccessReviewAccepted {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the create authorization v1 subject access review accepted response
func (o *CreateAuthorizationV1SubjectAccessReviewAccepted) SetPayload(payload *models.IoK8sAPIAuthorizationV1SubjectAccessReview) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CreateAuthorizationV1SubjectAccessReviewAccepted) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(202)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// CreateAuthorizationV1SubjectAccessReviewUnauthorizedCode is the HTTP code returned for type CreateAuthorizationV1SubjectAccessReviewUnauthorized
const CreateAuthorizationV1SubjectAccessReviewUnauthorizedCode int = 401

/*CreateAuthorizationV1SubjectAccessReviewUnauthorized Unauthorized

swagger:response createAuthorizationV1SubjectAccessReviewUnauthorized
*/
type CreateAuthorizationV1SubjectAccessReviewUnauthorized struct {
}

// NewCreateAuthorizationV1SubjectAccessReviewUnauthorized creates CreateAuthorizationV1SubjectAccessReviewUnauthorized with default headers values
func NewCreateAuthorizationV1SubjectAccessReviewUnauthorized() *CreateAuthorizationV1SubjectAccessReviewUnauthorized {

	return &CreateAuthorizationV1SubjectAccessReviewUnauthorized{}
}

// WriteResponse to the client
func (o *CreateAuthorizationV1SubjectAccessReviewUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(401)
}
