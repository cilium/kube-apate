// Code generated by go-swagger; DO NOT EDIT.

// Copyright 2017-2020 Authors of Cilium
// SPDX-License-Identifier: Apache-2.0

package authorization_v1

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/cilium/kube-apate/api/k8s/v1/models"
)

// CreateAuthorizationV1NamespacedLocalSubjectAccessReviewOKCode is the HTTP code returned for type CreateAuthorizationV1NamespacedLocalSubjectAccessReviewOK
const CreateAuthorizationV1NamespacedLocalSubjectAccessReviewOKCode int = 200

/*CreateAuthorizationV1NamespacedLocalSubjectAccessReviewOK OK

swagger:response createAuthorizationV1NamespacedLocalSubjectAccessReviewOK
*/
type CreateAuthorizationV1NamespacedLocalSubjectAccessReviewOK struct {

	/*
	  In: Body
	*/
	Payload *models.IoK8sAPIAuthorizationV1LocalSubjectAccessReview `json:"body,omitempty"`
}

// NewCreateAuthorizationV1NamespacedLocalSubjectAccessReviewOK creates CreateAuthorizationV1NamespacedLocalSubjectAccessReviewOK with default headers values
func NewCreateAuthorizationV1NamespacedLocalSubjectAccessReviewOK() *CreateAuthorizationV1NamespacedLocalSubjectAccessReviewOK {

	return &CreateAuthorizationV1NamespacedLocalSubjectAccessReviewOK{}
}

// WithPayload adds the payload to the create authorization v1 namespaced local subject access review o k response
func (o *CreateAuthorizationV1NamespacedLocalSubjectAccessReviewOK) WithPayload(payload *models.IoK8sAPIAuthorizationV1LocalSubjectAccessReview) *CreateAuthorizationV1NamespacedLocalSubjectAccessReviewOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the create authorization v1 namespaced local subject access review o k response
func (o *CreateAuthorizationV1NamespacedLocalSubjectAccessReviewOK) SetPayload(payload *models.IoK8sAPIAuthorizationV1LocalSubjectAccessReview) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CreateAuthorizationV1NamespacedLocalSubjectAccessReviewOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// CreateAuthorizationV1NamespacedLocalSubjectAccessReviewCreatedCode is the HTTP code returned for type CreateAuthorizationV1NamespacedLocalSubjectAccessReviewCreated
const CreateAuthorizationV1NamespacedLocalSubjectAccessReviewCreatedCode int = 201

/*CreateAuthorizationV1NamespacedLocalSubjectAccessReviewCreated Created

swagger:response createAuthorizationV1NamespacedLocalSubjectAccessReviewCreated
*/
type CreateAuthorizationV1NamespacedLocalSubjectAccessReviewCreated struct {

	/*
	  In: Body
	*/
	Payload *models.IoK8sAPIAuthorizationV1LocalSubjectAccessReview `json:"body,omitempty"`
}

// NewCreateAuthorizationV1NamespacedLocalSubjectAccessReviewCreated creates CreateAuthorizationV1NamespacedLocalSubjectAccessReviewCreated with default headers values
func NewCreateAuthorizationV1NamespacedLocalSubjectAccessReviewCreated() *CreateAuthorizationV1NamespacedLocalSubjectAccessReviewCreated {

	return &CreateAuthorizationV1NamespacedLocalSubjectAccessReviewCreated{}
}

// WithPayload adds the payload to the create authorization v1 namespaced local subject access review created response
func (o *CreateAuthorizationV1NamespacedLocalSubjectAccessReviewCreated) WithPayload(payload *models.IoK8sAPIAuthorizationV1LocalSubjectAccessReview) *CreateAuthorizationV1NamespacedLocalSubjectAccessReviewCreated {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the create authorization v1 namespaced local subject access review created response
func (o *CreateAuthorizationV1NamespacedLocalSubjectAccessReviewCreated) SetPayload(payload *models.IoK8sAPIAuthorizationV1LocalSubjectAccessReview) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CreateAuthorizationV1NamespacedLocalSubjectAccessReviewCreated) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(201)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// CreateAuthorizationV1NamespacedLocalSubjectAccessReviewAcceptedCode is the HTTP code returned for type CreateAuthorizationV1NamespacedLocalSubjectAccessReviewAccepted
const CreateAuthorizationV1NamespacedLocalSubjectAccessReviewAcceptedCode int = 202

/*CreateAuthorizationV1NamespacedLocalSubjectAccessReviewAccepted Accepted

swagger:response createAuthorizationV1NamespacedLocalSubjectAccessReviewAccepted
*/
type CreateAuthorizationV1NamespacedLocalSubjectAccessReviewAccepted struct {

	/*
	  In: Body
	*/
	Payload *models.IoK8sAPIAuthorizationV1LocalSubjectAccessReview `json:"body,omitempty"`
}

// NewCreateAuthorizationV1NamespacedLocalSubjectAccessReviewAccepted creates CreateAuthorizationV1NamespacedLocalSubjectAccessReviewAccepted with default headers values
func NewCreateAuthorizationV1NamespacedLocalSubjectAccessReviewAccepted() *CreateAuthorizationV1NamespacedLocalSubjectAccessReviewAccepted {

	return &CreateAuthorizationV1NamespacedLocalSubjectAccessReviewAccepted{}
}

// WithPayload adds the payload to the create authorization v1 namespaced local subject access review accepted response
func (o *CreateAuthorizationV1NamespacedLocalSubjectAccessReviewAccepted) WithPayload(payload *models.IoK8sAPIAuthorizationV1LocalSubjectAccessReview) *CreateAuthorizationV1NamespacedLocalSubjectAccessReviewAccepted {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the create authorization v1 namespaced local subject access review accepted response
func (o *CreateAuthorizationV1NamespacedLocalSubjectAccessReviewAccepted) SetPayload(payload *models.IoK8sAPIAuthorizationV1LocalSubjectAccessReview) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CreateAuthorizationV1NamespacedLocalSubjectAccessReviewAccepted) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(202)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// CreateAuthorizationV1NamespacedLocalSubjectAccessReviewUnauthorizedCode is the HTTP code returned for type CreateAuthorizationV1NamespacedLocalSubjectAccessReviewUnauthorized
const CreateAuthorizationV1NamespacedLocalSubjectAccessReviewUnauthorizedCode int = 401

/*CreateAuthorizationV1NamespacedLocalSubjectAccessReviewUnauthorized Unauthorized

swagger:response createAuthorizationV1NamespacedLocalSubjectAccessReviewUnauthorized
*/
type CreateAuthorizationV1NamespacedLocalSubjectAccessReviewUnauthorized struct {
}

// NewCreateAuthorizationV1NamespacedLocalSubjectAccessReviewUnauthorized creates CreateAuthorizationV1NamespacedLocalSubjectAccessReviewUnauthorized with default headers values
func NewCreateAuthorizationV1NamespacedLocalSubjectAccessReviewUnauthorized() *CreateAuthorizationV1NamespacedLocalSubjectAccessReviewUnauthorized {

	return &CreateAuthorizationV1NamespacedLocalSubjectAccessReviewUnauthorized{}
}

// WriteResponse to the client
func (o *CreateAuthorizationV1NamespacedLocalSubjectAccessReviewUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(401)
}
