// Code generated by go-swagger; DO NOT EDIT.

// Copyright 2017-2020 Authors of Cilium
// SPDX-License-Identifier: Apache-2.0

package rbac_authorization_v1

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/cilium/kube-apate/api/k8s/v1/models"
)

// CreateRbacAuthorizationV1NamespacedRoleBindingOKCode is the HTTP code returned for type CreateRbacAuthorizationV1NamespacedRoleBindingOK
const CreateRbacAuthorizationV1NamespacedRoleBindingOKCode int = 200

/*CreateRbacAuthorizationV1NamespacedRoleBindingOK OK

swagger:response createRbacAuthorizationV1NamespacedRoleBindingOK
*/
type CreateRbacAuthorizationV1NamespacedRoleBindingOK struct {

	/*
	  In: Body
	*/
	Payload *models.IoK8sAPIRbacV1RoleBinding `json:"body,omitempty"`
}

// NewCreateRbacAuthorizationV1NamespacedRoleBindingOK creates CreateRbacAuthorizationV1NamespacedRoleBindingOK with default headers values
func NewCreateRbacAuthorizationV1NamespacedRoleBindingOK() *CreateRbacAuthorizationV1NamespacedRoleBindingOK {

	return &CreateRbacAuthorizationV1NamespacedRoleBindingOK{}
}

// WithPayload adds the payload to the create rbac authorization v1 namespaced role binding o k response
func (o *CreateRbacAuthorizationV1NamespacedRoleBindingOK) WithPayload(payload *models.IoK8sAPIRbacV1RoleBinding) *CreateRbacAuthorizationV1NamespacedRoleBindingOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the create rbac authorization v1 namespaced role binding o k response
func (o *CreateRbacAuthorizationV1NamespacedRoleBindingOK) SetPayload(payload *models.IoK8sAPIRbacV1RoleBinding) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CreateRbacAuthorizationV1NamespacedRoleBindingOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// CreateRbacAuthorizationV1NamespacedRoleBindingCreatedCode is the HTTP code returned for type CreateRbacAuthorizationV1NamespacedRoleBindingCreated
const CreateRbacAuthorizationV1NamespacedRoleBindingCreatedCode int = 201

/*CreateRbacAuthorizationV1NamespacedRoleBindingCreated Created

swagger:response createRbacAuthorizationV1NamespacedRoleBindingCreated
*/
type CreateRbacAuthorizationV1NamespacedRoleBindingCreated struct {

	/*
	  In: Body
	*/
	Payload *models.IoK8sAPIRbacV1RoleBinding `json:"body,omitempty"`
}

// NewCreateRbacAuthorizationV1NamespacedRoleBindingCreated creates CreateRbacAuthorizationV1NamespacedRoleBindingCreated with default headers values
func NewCreateRbacAuthorizationV1NamespacedRoleBindingCreated() *CreateRbacAuthorizationV1NamespacedRoleBindingCreated {

	return &CreateRbacAuthorizationV1NamespacedRoleBindingCreated{}
}

// WithPayload adds the payload to the create rbac authorization v1 namespaced role binding created response
func (o *CreateRbacAuthorizationV1NamespacedRoleBindingCreated) WithPayload(payload *models.IoK8sAPIRbacV1RoleBinding) *CreateRbacAuthorizationV1NamespacedRoleBindingCreated {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the create rbac authorization v1 namespaced role binding created response
func (o *CreateRbacAuthorizationV1NamespacedRoleBindingCreated) SetPayload(payload *models.IoK8sAPIRbacV1RoleBinding) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CreateRbacAuthorizationV1NamespacedRoleBindingCreated) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(201)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// CreateRbacAuthorizationV1NamespacedRoleBindingAcceptedCode is the HTTP code returned for type CreateRbacAuthorizationV1NamespacedRoleBindingAccepted
const CreateRbacAuthorizationV1NamespacedRoleBindingAcceptedCode int = 202

/*CreateRbacAuthorizationV1NamespacedRoleBindingAccepted Accepted

swagger:response createRbacAuthorizationV1NamespacedRoleBindingAccepted
*/
type CreateRbacAuthorizationV1NamespacedRoleBindingAccepted struct {

	/*
	  In: Body
	*/
	Payload *models.IoK8sAPIRbacV1RoleBinding `json:"body,omitempty"`
}

// NewCreateRbacAuthorizationV1NamespacedRoleBindingAccepted creates CreateRbacAuthorizationV1NamespacedRoleBindingAccepted with default headers values
func NewCreateRbacAuthorizationV1NamespacedRoleBindingAccepted() *CreateRbacAuthorizationV1NamespacedRoleBindingAccepted {

	return &CreateRbacAuthorizationV1NamespacedRoleBindingAccepted{}
}

// WithPayload adds the payload to the create rbac authorization v1 namespaced role binding accepted response
func (o *CreateRbacAuthorizationV1NamespacedRoleBindingAccepted) WithPayload(payload *models.IoK8sAPIRbacV1RoleBinding) *CreateRbacAuthorizationV1NamespacedRoleBindingAccepted {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the create rbac authorization v1 namespaced role binding accepted response
func (o *CreateRbacAuthorizationV1NamespacedRoleBindingAccepted) SetPayload(payload *models.IoK8sAPIRbacV1RoleBinding) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CreateRbacAuthorizationV1NamespacedRoleBindingAccepted) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(202)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// CreateRbacAuthorizationV1NamespacedRoleBindingUnauthorizedCode is the HTTP code returned for type CreateRbacAuthorizationV1NamespacedRoleBindingUnauthorized
const CreateRbacAuthorizationV1NamespacedRoleBindingUnauthorizedCode int = 401

/*CreateRbacAuthorizationV1NamespacedRoleBindingUnauthorized Unauthorized

swagger:response createRbacAuthorizationV1NamespacedRoleBindingUnauthorized
*/
type CreateRbacAuthorizationV1NamespacedRoleBindingUnauthorized struct {
}

// NewCreateRbacAuthorizationV1NamespacedRoleBindingUnauthorized creates CreateRbacAuthorizationV1NamespacedRoleBindingUnauthorized with default headers values
func NewCreateRbacAuthorizationV1NamespacedRoleBindingUnauthorized() *CreateRbacAuthorizationV1NamespacedRoleBindingUnauthorized {

	return &CreateRbacAuthorizationV1NamespacedRoleBindingUnauthorized{}
}

// WriteResponse to the client
func (o *CreateRbacAuthorizationV1NamespacedRoleBindingUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(401)
}
