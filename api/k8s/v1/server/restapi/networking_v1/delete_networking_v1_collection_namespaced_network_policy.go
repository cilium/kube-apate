// Code generated by go-swagger; DO NOT EDIT.

// Copyright 2017-2020 Authors of Cilium
// SPDX-License-Identifier: Apache-2.0

package networking_v1

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	"github.com/go-openapi/runtime/middleware"
)

// DeleteNetworkingV1CollectionNamespacedNetworkPolicyHandlerFunc turns a function with the right signature into a delete networking v1 collection namespaced network policy handler
type DeleteNetworkingV1CollectionNamespacedNetworkPolicyHandlerFunc func(DeleteNetworkingV1CollectionNamespacedNetworkPolicyParams) middleware.Responder

// Handle executing the request and returning a response
func (fn DeleteNetworkingV1CollectionNamespacedNetworkPolicyHandlerFunc) Handle(params DeleteNetworkingV1CollectionNamespacedNetworkPolicyParams) middleware.Responder {
	return fn(params)
}

// DeleteNetworkingV1CollectionNamespacedNetworkPolicyHandler interface for that can handle valid delete networking v1 collection namespaced network policy params
type DeleteNetworkingV1CollectionNamespacedNetworkPolicyHandler interface {
	Handle(DeleteNetworkingV1CollectionNamespacedNetworkPolicyParams) middleware.Responder
}

// NewDeleteNetworkingV1CollectionNamespacedNetworkPolicy creates a new http.Handler for the delete networking v1 collection namespaced network policy operation
func NewDeleteNetworkingV1CollectionNamespacedNetworkPolicy(ctx *middleware.Context, handler DeleteNetworkingV1CollectionNamespacedNetworkPolicyHandler) *DeleteNetworkingV1CollectionNamespacedNetworkPolicy {
	return &DeleteNetworkingV1CollectionNamespacedNetworkPolicy{Context: ctx, Handler: handler}
}

/*DeleteNetworkingV1CollectionNamespacedNetworkPolicy swagger:route DELETE /apis/networking.k8s.io/v1/namespaces/{namespace}/networkpolicies networking_v1 deleteNetworkingV1CollectionNamespacedNetworkPolicy

delete collection of NetworkPolicy

*/
type DeleteNetworkingV1CollectionNamespacedNetworkPolicy struct {
	Context *middleware.Context
	Handler DeleteNetworkingV1CollectionNamespacedNetworkPolicyHandler
}

func (o *DeleteNetworkingV1CollectionNamespacedNetworkPolicy) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewDeleteNetworkingV1CollectionNamespacedNetworkPolicyParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}
