// Code generated by go-swagger; DO NOT EDIT.

// Copyright 2017-2020 Authors of Cilium
// SPDX-License-Identifier: Apache-2.0

package networking_v1

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/cilium/kube-apate/api/k8s/v1/models"
)

// CreateNetworkingV1NamespacedNetworkPolicyOKCode is the HTTP code returned for type CreateNetworkingV1NamespacedNetworkPolicyOK
const CreateNetworkingV1NamespacedNetworkPolicyOKCode int = 200

/*CreateNetworkingV1NamespacedNetworkPolicyOK OK

swagger:response createNetworkingV1NamespacedNetworkPolicyOK
*/
type CreateNetworkingV1NamespacedNetworkPolicyOK struct {

	/*
	  In: Body
	*/
	Payload *models.IoK8sAPINetworkingV1NetworkPolicy `json:"body,omitempty"`
}

// NewCreateNetworkingV1NamespacedNetworkPolicyOK creates CreateNetworkingV1NamespacedNetworkPolicyOK with default headers values
func NewCreateNetworkingV1NamespacedNetworkPolicyOK() *CreateNetworkingV1NamespacedNetworkPolicyOK {

	return &CreateNetworkingV1NamespacedNetworkPolicyOK{}
}

// WithPayload adds the payload to the create networking v1 namespaced network policy o k response
func (o *CreateNetworkingV1NamespacedNetworkPolicyOK) WithPayload(payload *models.IoK8sAPINetworkingV1NetworkPolicy) *CreateNetworkingV1NamespacedNetworkPolicyOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the create networking v1 namespaced network policy o k response
func (o *CreateNetworkingV1NamespacedNetworkPolicyOK) SetPayload(payload *models.IoK8sAPINetworkingV1NetworkPolicy) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CreateNetworkingV1NamespacedNetworkPolicyOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// CreateNetworkingV1NamespacedNetworkPolicyCreatedCode is the HTTP code returned for type CreateNetworkingV1NamespacedNetworkPolicyCreated
const CreateNetworkingV1NamespacedNetworkPolicyCreatedCode int = 201

/*CreateNetworkingV1NamespacedNetworkPolicyCreated Created

swagger:response createNetworkingV1NamespacedNetworkPolicyCreated
*/
type CreateNetworkingV1NamespacedNetworkPolicyCreated struct {

	/*
	  In: Body
	*/
	Payload *models.IoK8sAPINetworkingV1NetworkPolicy `json:"body,omitempty"`
}

// NewCreateNetworkingV1NamespacedNetworkPolicyCreated creates CreateNetworkingV1NamespacedNetworkPolicyCreated with default headers values
func NewCreateNetworkingV1NamespacedNetworkPolicyCreated() *CreateNetworkingV1NamespacedNetworkPolicyCreated {

	return &CreateNetworkingV1NamespacedNetworkPolicyCreated{}
}

// WithPayload adds the payload to the create networking v1 namespaced network policy created response
func (o *CreateNetworkingV1NamespacedNetworkPolicyCreated) WithPayload(payload *models.IoK8sAPINetworkingV1NetworkPolicy) *CreateNetworkingV1NamespacedNetworkPolicyCreated {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the create networking v1 namespaced network policy created response
func (o *CreateNetworkingV1NamespacedNetworkPolicyCreated) SetPayload(payload *models.IoK8sAPINetworkingV1NetworkPolicy) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CreateNetworkingV1NamespacedNetworkPolicyCreated) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(201)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// CreateNetworkingV1NamespacedNetworkPolicyAcceptedCode is the HTTP code returned for type CreateNetworkingV1NamespacedNetworkPolicyAccepted
const CreateNetworkingV1NamespacedNetworkPolicyAcceptedCode int = 202

/*CreateNetworkingV1NamespacedNetworkPolicyAccepted Accepted

swagger:response createNetworkingV1NamespacedNetworkPolicyAccepted
*/
type CreateNetworkingV1NamespacedNetworkPolicyAccepted struct {

	/*
	  In: Body
	*/
	Payload *models.IoK8sAPINetworkingV1NetworkPolicy `json:"body,omitempty"`
}

// NewCreateNetworkingV1NamespacedNetworkPolicyAccepted creates CreateNetworkingV1NamespacedNetworkPolicyAccepted with default headers values
func NewCreateNetworkingV1NamespacedNetworkPolicyAccepted() *CreateNetworkingV1NamespacedNetworkPolicyAccepted {

	return &CreateNetworkingV1NamespacedNetworkPolicyAccepted{}
}

// WithPayload adds the payload to the create networking v1 namespaced network policy accepted response
func (o *CreateNetworkingV1NamespacedNetworkPolicyAccepted) WithPayload(payload *models.IoK8sAPINetworkingV1NetworkPolicy) *CreateNetworkingV1NamespacedNetworkPolicyAccepted {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the create networking v1 namespaced network policy accepted response
func (o *CreateNetworkingV1NamespacedNetworkPolicyAccepted) SetPayload(payload *models.IoK8sAPINetworkingV1NetworkPolicy) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CreateNetworkingV1NamespacedNetworkPolicyAccepted) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(202)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// CreateNetworkingV1NamespacedNetworkPolicyUnauthorizedCode is the HTTP code returned for type CreateNetworkingV1NamespacedNetworkPolicyUnauthorized
const CreateNetworkingV1NamespacedNetworkPolicyUnauthorizedCode int = 401

/*CreateNetworkingV1NamespacedNetworkPolicyUnauthorized Unauthorized

swagger:response createNetworkingV1NamespacedNetworkPolicyUnauthorized
*/
type CreateNetworkingV1NamespacedNetworkPolicyUnauthorized struct {
}

// NewCreateNetworkingV1NamespacedNetworkPolicyUnauthorized creates CreateNetworkingV1NamespacedNetworkPolicyUnauthorized with default headers values
func NewCreateNetworkingV1NamespacedNetworkPolicyUnauthorized() *CreateNetworkingV1NamespacedNetworkPolicyUnauthorized {

	return &CreateNetworkingV1NamespacedNetworkPolicyUnauthorized{}
}

// WriteResponse to the client
func (o *CreateNetworkingV1NamespacedNetworkPolicyUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(401)
}
