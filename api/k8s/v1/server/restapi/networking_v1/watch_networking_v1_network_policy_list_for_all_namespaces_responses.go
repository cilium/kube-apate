// Code generated by go-swagger; DO NOT EDIT.

// Copyright 2017-2020 Authors of Cilium
// SPDX-License-Identifier: Apache-2.0

package networking_v1

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/cilium/kube-apate/api/k8s/v1/models"
)

// WatchNetworkingV1NetworkPolicyListForAllNamespacesOKCode is the HTTP code returned for type WatchNetworkingV1NetworkPolicyListForAllNamespacesOK
const WatchNetworkingV1NetworkPolicyListForAllNamespacesOKCode int = 200

/*WatchNetworkingV1NetworkPolicyListForAllNamespacesOK OK

swagger:response watchNetworkingV1NetworkPolicyListForAllNamespacesOK
*/
type WatchNetworkingV1NetworkPolicyListForAllNamespacesOK struct {

	/*
	  In: Body
	*/
	Payload *models.IoK8sApimachineryPkgApisMetaV1WatchEvent `json:"body,omitempty"`
}

// NewWatchNetworkingV1NetworkPolicyListForAllNamespacesOK creates WatchNetworkingV1NetworkPolicyListForAllNamespacesOK with default headers values
func NewWatchNetworkingV1NetworkPolicyListForAllNamespacesOK() *WatchNetworkingV1NetworkPolicyListForAllNamespacesOK {

	return &WatchNetworkingV1NetworkPolicyListForAllNamespacesOK{}
}

// WithPayload adds the payload to the watch networking v1 network policy list for all namespaces o k response
func (o *WatchNetworkingV1NetworkPolicyListForAllNamespacesOK) WithPayload(payload *models.IoK8sApimachineryPkgApisMetaV1WatchEvent) *WatchNetworkingV1NetworkPolicyListForAllNamespacesOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the watch networking v1 network policy list for all namespaces o k response
func (o *WatchNetworkingV1NetworkPolicyListForAllNamespacesOK) SetPayload(payload *models.IoK8sApimachineryPkgApisMetaV1WatchEvent) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *WatchNetworkingV1NetworkPolicyListForAllNamespacesOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// WatchNetworkingV1NetworkPolicyListForAllNamespacesUnauthorizedCode is the HTTP code returned for type WatchNetworkingV1NetworkPolicyListForAllNamespacesUnauthorized
const WatchNetworkingV1NetworkPolicyListForAllNamespacesUnauthorizedCode int = 401

/*WatchNetworkingV1NetworkPolicyListForAllNamespacesUnauthorized Unauthorized

swagger:response watchNetworkingV1NetworkPolicyListForAllNamespacesUnauthorized
*/
type WatchNetworkingV1NetworkPolicyListForAllNamespacesUnauthorized struct {
}

// NewWatchNetworkingV1NetworkPolicyListForAllNamespacesUnauthorized creates WatchNetworkingV1NetworkPolicyListForAllNamespacesUnauthorized with default headers values
func NewWatchNetworkingV1NetworkPolicyListForAllNamespacesUnauthorized() *WatchNetworkingV1NetworkPolicyListForAllNamespacesUnauthorized {

	return &WatchNetworkingV1NetworkPolicyListForAllNamespacesUnauthorized{}
}

// WriteResponse to the client
func (o *WatchNetworkingV1NetworkPolicyListForAllNamespacesUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(401)
}
