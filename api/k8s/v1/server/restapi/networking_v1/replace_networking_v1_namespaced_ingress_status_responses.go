// Code generated by go-swagger; DO NOT EDIT.

// Copyright 2017-2020 Authors of Cilium
// SPDX-License-Identifier: Apache-2.0

package networking_v1

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/cilium/kube-apate/api/k8s/v1/models"
)

// ReplaceNetworkingV1NamespacedIngressStatusOKCode is the HTTP code returned for type ReplaceNetworkingV1NamespacedIngressStatusOK
const ReplaceNetworkingV1NamespacedIngressStatusOKCode int = 200

/*ReplaceNetworkingV1NamespacedIngressStatusOK OK

swagger:response replaceNetworkingV1NamespacedIngressStatusOK
*/
type ReplaceNetworkingV1NamespacedIngressStatusOK struct {

	/*
	  In: Body
	*/
	Payload *models.IoK8sAPINetworkingV1Ingress `json:"body,omitempty"`
}

// NewReplaceNetworkingV1NamespacedIngressStatusOK creates ReplaceNetworkingV1NamespacedIngressStatusOK with default headers values
func NewReplaceNetworkingV1NamespacedIngressStatusOK() *ReplaceNetworkingV1NamespacedIngressStatusOK {

	return &ReplaceNetworkingV1NamespacedIngressStatusOK{}
}

// WithPayload adds the payload to the replace networking v1 namespaced ingress status o k response
func (o *ReplaceNetworkingV1NamespacedIngressStatusOK) WithPayload(payload *models.IoK8sAPINetworkingV1Ingress) *ReplaceNetworkingV1NamespacedIngressStatusOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the replace networking v1 namespaced ingress status o k response
func (o *ReplaceNetworkingV1NamespacedIngressStatusOK) SetPayload(payload *models.IoK8sAPINetworkingV1Ingress) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ReplaceNetworkingV1NamespacedIngressStatusOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// ReplaceNetworkingV1NamespacedIngressStatusCreatedCode is the HTTP code returned for type ReplaceNetworkingV1NamespacedIngressStatusCreated
const ReplaceNetworkingV1NamespacedIngressStatusCreatedCode int = 201

/*ReplaceNetworkingV1NamespacedIngressStatusCreated Created

swagger:response replaceNetworkingV1NamespacedIngressStatusCreated
*/
type ReplaceNetworkingV1NamespacedIngressStatusCreated struct {

	/*
	  In: Body
	*/
	Payload *models.IoK8sAPINetworkingV1Ingress `json:"body,omitempty"`
}

// NewReplaceNetworkingV1NamespacedIngressStatusCreated creates ReplaceNetworkingV1NamespacedIngressStatusCreated with default headers values
func NewReplaceNetworkingV1NamespacedIngressStatusCreated() *ReplaceNetworkingV1NamespacedIngressStatusCreated {

	return &ReplaceNetworkingV1NamespacedIngressStatusCreated{}
}

// WithPayload adds the payload to the replace networking v1 namespaced ingress status created response
func (o *ReplaceNetworkingV1NamespacedIngressStatusCreated) WithPayload(payload *models.IoK8sAPINetworkingV1Ingress) *ReplaceNetworkingV1NamespacedIngressStatusCreated {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the replace networking v1 namespaced ingress status created response
func (o *ReplaceNetworkingV1NamespacedIngressStatusCreated) SetPayload(payload *models.IoK8sAPINetworkingV1Ingress) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ReplaceNetworkingV1NamespacedIngressStatusCreated) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(201)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// ReplaceNetworkingV1NamespacedIngressStatusUnauthorizedCode is the HTTP code returned for type ReplaceNetworkingV1NamespacedIngressStatusUnauthorized
const ReplaceNetworkingV1NamespacedIngressStatusUnauthorizedCode int = 401

/*ReplaceNetworkingV1NamespacedIngressStatusUnauthorized Unauthorized

swagger:response replaceNetworkingV1NamespacedIngressStatusUnauthorized
*/
type ReplaceNetworkingV1NamespacedIngressStatusUnauthorized struct {
}

// NewReplaceNetworkingV1NamespacedIngressStatusUnauthorized creates ReplaceNetworkingV1NamespacedIngressStatusUnauthorized with default headers values
func NewReplaceNetworkingV1NamespacedIngressStatusUnauthorized() *ReplaceNetworkingV1NamespacedIngressStatusUnauthorized {

	return &ReplaceNetworkingV1NamespacedIngressStatusUnauthorized{}
}

// WriteResponse to the client
func (o *ReplaceNetworkingV1NamespacedIngressStatusUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(401)
}
