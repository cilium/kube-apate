// Code generated by go-swagger; DO NOT EDIT.

// Copyright 2017-2020 Authors of Cilium
// SPDX-License-Identifier: Apache-2.0

package networking_v1

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/cilium/kube-apate/api/k8s/v1/models"
)

// ReplaceNetworkingV1IngressClassOKCode is the HTTP code returned for type ReplaceNetworkingV1IngressClassOK
const ReplaceNetworkingV1IngressClassOKCode int = 200

/*ReplaceNetworkingV1IngressClassOK OK

swagger:response replaceNetworkingV1IngressClassOK
*/
type ReplaceNetworkingV1IngressClassOK struct {

	/*
	  In: Body
	*/
	Payload *models.IoK8sAPINetworkingV1IngressClass `json:"body,omitempty"`
}

// NewReplaceNetworkingV1IngressClassOK creates ReplaceNetworkingV1IngressClassOK with default headers values
func NewReplaceNetworkingV1IngressClassOK() *ReplaceNetworkingV1IngressClassOK {

	return &ReplaceNetworkingV1IngressClassOK{}
}

// WithPayload adds the payload to the replace networking v1 ingress class o k response
func (o *ReplaceNetworkingV1IngressClassOK) WithPayload(payload *models.IoK8sAPINetworkingV1IngressClass) *ReplaceNetworkingV1IngressClassOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the replace networking v1 ingress class o k response
func (o *ReplaceNetworkingV1IngressClassOK) SetPayload(payload *models.IoK8sAPINetworkingV1IngressClass) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ReplaceNetworkingV1IngressClassOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// ReplaceNetworkingV1IngressClassCreatedCode is the HTTP code returned for type ReplaceNetworkingV1IngressClassCreated
const ReplaceNetworkingV1IngressClassCreatedCode int = 201

/*ReplaceNetworkingV1IngressClassCreated Created

swagger:response replaceNetworkingV1IngressClassCreated
*/
type ReplaceNetworkingV1IngressClassCreated struct {

	/*
	  In: Body
	*/
	Payload *models.IoK8sAPINetworkingV1IngressClass `json:"body,omitempty"`
}

// NewReplaceNetworkingV1IngressClassCreated creates ReplaceNetworkingV1IngressClassCreated with default headers values
func NewReplaceNetworkingV1IngressClassCreated() *ReplaceNetworkingV1IngressClassCreated {

	return &ReplaceNetworkingV1IngressClassCreated{}
}

// WithPayload adds the payload to the replace networking v1 ingress class created response
func (o *ReplaceNetworkingV1IngressClassCreated) WithPayload(payload *models.IoK8sAPINetworkingV1IngressClass) *ReplaceNetworkingV1IngressClassCreated {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the replace networking v1 ingress class created response
func (o *ReplaceNetworkingV1IngressClassCreated) SetPayload(payload *models.IoK8sAPINetworkingV1IngressClass) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ReplaceNetworkingV1IngressClassCreated) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(201)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// ReplaceNetworkingV1IngressClassUnauthorizedCode is the HTTP code returned for type ReplaceNetworkingV1IngressClassUnauthorized
const ReplaceNetworkingV1IngressClassUnauthorizedCode int = 401

/*ReplaceNetworkingV1IngressClassUnauthorized Unauthorized

swagger:response replaceNetworkingV1IngressClassUnauthorized
*/
type ReplaceNetworkingV1IngressClassUnauthorized struct {
}

// NewReplaceNetworkingV1IngressClassUnauthorized creates ReplaceNetworkingV1IngressClassUnauthorized with default headers values
func NewReplaceNetworkingV1IngressClassUnauthorized() *ReplaceNetworkingV1IngressClassUnauthorized {

	return &ReplaceNetworkingV1IngressClassUnauthorized{}
}

// WriteResponse to the client
func (o *ReplaceNetworkingV1IngressClassUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(401)
}
