// Code generated by go-swagger; DO NOT EDIT.

// Copyright 2017-2020 Authors of Cilium
// SPDX-License-Identifier: Apache-2.0

package node

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/cilium/kube-apate/api/k8s/v1/models"
)

// GetNodeAPIGroupOKCode is the HTTP code returned for type GetNodeAPIGroupOK
const GetNodeAPIGroupOKCode int = 200

/*GetNodeAPIGroupOK OK

swagger:response getNodeApiGroupOK
*/
type GetNodeAPIGroupOK struct {

	/*
	  In: Body
	*/
	Payload *models.IoK8sApimachineryPkgApisMetaV1APIGroup `json:"body,omitempty"`
}

// NewGetNodeAPIGroupOK creates GetNodeAPIGroupOK with default headers values
func NewGetNodeAPIGroupOK() *GetNodeAPIGroupOK {

	return &GetNodeAPIGroupOK{}
}

// WithPayload adds the payload to the get node Api group o k response
func (o *GetNodeAPIGroupOK) WithPayload(payload *models.IoK8sApimachineryPkgApisMetaV1APIGroup) *GetNodeAPIGroupOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get node Api group o k response
func (o *GetNodeAPIGroupOK) SetPayload(payload *models.IoK8sApimachineryPkgApisMetaV1APIGroup) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetNodeAPIGroupOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetNodeAPIGroupUnauthorizedCode is the HTTP code returned for type GetNodeAPIGroupUnauthorized
const GetNodeAPIGroupUnauthorizedCode int = 401

/*GetNodeAPIGroupUnauthorized Unauthorized

swagger:response getNodeApiGroupUnauthorized
*/
type GetNodeAPIGroupUnauthorized struct {
}

// NewGetNodeAPIGroupUnauthorized creates GetNodeAPIGroupUnauthorized with default headers values
func NewGetNodeAPIGroupUnauthorized() *GetNodeAPIGroupUnauthorized {

	return &GetNodeAPIGroupUnauthorized{}
}

// WriteResponse to the client
func (o *GetNodeAPIGroupUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(401)
}
