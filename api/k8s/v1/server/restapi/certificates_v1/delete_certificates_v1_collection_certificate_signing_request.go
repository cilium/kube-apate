// Code generated by go-swagger; DO NOT EDIT.

// Copyright 2017-2020 Authors of Cilium
// SPDX-License-Identifier: Apache-2.0

package certificates_v1

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	"github.com/go-openapi/runtime/middleware"
)

// DeleteCertificatesV1CollectionCertificateSigningRequestHandlerFunc turns a function with the right signature into a delete certificates v1 collection certificate signing request handler
type DeleteCertificatesV1CollectionCertificateSigningRequestHandlerFunc func(DeleteCertificatesV1CollectionCertificateSigningRequestParams) middleware.Responder

// Handle executing the request and returning a response
func (fn DeleteCertificatesV1CollectionCertificateSigningRequestHandlerFunc) Handle(params DeleteCertificatesV1CollectionCertificateSigningRequestParams) middleware.Responder {
	return fn(params)
}

// DeleteCertificatesV1CollectionCertificateSigningRequestHandler interface for that can handle valid delete certificates v1 collection certificate signing request params
type DeleteCertificatesV1CollectionCertificateSigningRequestHandler interface {
	Handle(DeleteCertificatesV1CollectionCertificateSigningRequestParams) middleware.Responder
}

// NewDeleteCertificatesV1CollectionCertificateSigningRequest creates a new http.Handler for the delete certificates v1 collection certificate signing request operation
func NewDeleteCertificatesV1CollectionCertificateSigningRequest(ctx *middleware.Context, handler DeleteCertificatesV1CollectionCertificateSigningRequestHandler) *DeleteCertificatesV1CollectionCertificateSigningRequest {
	return &DeleteCertificatesV1CollectionCertificateSigningRequest{Context: ctx, Handler: handler}
}

/*DeleteCertificatesV1CollectionCertificateSigningRequest swagger:route DELETE /apis/certificates.k8s.io/v1/certificatesigningrequests certificates_v1 deleteCertificatesV1CollectionCertificateSigningRequest

delete collection of CertificateSigningRequest

*/
type DeleteCertificatesV1CollectionCertificateSigningRequest struct {
	Context *middleware.Context
	Handler DeleteCertificatesV1CollectionCertificateSigningRequestHandler
}

func (o *DeleteCertificatesV1CollectionCertificateSigningRequest) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewDeleteCertificatesV1CollectionCertificateSigningRequestParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}
