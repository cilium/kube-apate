// Code generated by go-swagger; DO NOT EDIT.

// Copyright 2017-2020 Authors of Cilium
// SPDX-License-Identifier: Apache-2.0

package certificates_v1

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/cilium/kube-apate/api/k8s/v1/models"
)

// PatchCertificatesV1CertificateSigningRequestApprovalOKCode is the HTTP code returned for type PatchCertificatesV1CertificateSigningRequestApprovalOK
const PatchCertificatesV1CertificateSigningRequestApprovalOKCode int = 200

/*PatchCertificatesV1CertificateSigningRequestApprovalOK OK

swagger:response patchCertificatesV1CertificateSigningRequestApprovalOK
*/
type PatchCertificatesV1CertificateSigningRequestApprovalOK struct {

	/*
	  In: Body
	*/
	Payload *models.IoK8sAPICertificatesV1CertificateSigningRequest `json:"body,omitempty"`
}

// NewPatchCertificatesV1CertificateSigningRequestApprovalOK creates PatchCertificatesV1CertificateSigningRequestApprovalOK with default headers values
func NewPatchCertificatesV1CertificateSigningRequestApprovalOK() *PatchCertificatesV1CertificateSigningRequestApprovalOK {

	return &PatchCertificatesV1CertificateSigningRequestApprovalOK{}
}

// WithPayload adds the payload to the patch certificates v1 certificate signing request approval o k response
func (o *PatchCertificatesV1CertificateSigningRequestApprovalOK) WithPayload(payload *models.IoK8sAPICertificatesV1CertificateSigningRequest) *PatchCertificatesV1CertificateSigningRequestApprovalOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the patch certificates v1 certificate signing request approval o k response
func (o *PatchCertificatesV1CertificateSigningRequestApprovalOK) SetPayload(payload *models.IoK8sAPICertificatesV1CertificateSigningRequest) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PatchCertificatesV1CertificateSigningRequestApprovalOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PatchCertificatesV1CertificateSigningRequestApprovalUnauthorizedCode is the HTTP code returned for type PatchCertificatesV1CertificateSigningRequestApprovalUnauthorized
const PatchCertificatesV1CertificateSigningRequestApprovalUnauthorizedCode int = 401

/*PatchCertificatesV1CertificateSigningRequestApprovalUnauthorized Unauthorized

swagger:response patchCertificatesV1CertificateSigningRequestApprovalUnauthorized
*/
type PatchCertificatesV1CertificateSigningRequestApprovalUnauthorized struct {
}

// NewPatchCertificatesV1CertificateSigningRequestApprovalUnauthorized creates PatchCertificatesV1CertificateSigningRequestApprovalUnauthorized with default headers values
func NewPatchCertificatesV1CertificateSigningRequestApprovalUnauthorized() *PatchCertificatesV1CertificateSigningRequestApprovalUnauthorized {

	return &PatchCertificatesV1CertificateSigningRequestApprovalUnauthorized{}
}

// WriteResponse to the client
func (o *PatchCertificatesV1CertificateSigningRequestApprovalUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(401)
}
