// Code generated by go-swagger; DO NOT EDIT.

// Copyright 2017-2020 Authors of Cilium
// SPDX-License-Identifier: Apache-2.0

package certificates_v1

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/cilium/kube-apate/api/k8s/v1/models"
)

// ReplaceCertificatesV1CertificateSigningRequestStatusOKCode is the HTTP code returned for type ReplaceCertificatesV1CertificateSigningRequestStatusOK
const ReplaceCertificatesV1CertificateSigningRequestStatusOKCode int = 200

/*ReplaceCertificatesV1CertificateSigningRequestStatusOK OK

swagger:response replaceCertificatesV1CertificateSigningRequestStatusOK
*/
type ReplaceCertificatesV1CertificateSigningRequestStatusOK struct {

	/*
	  In: Body
	*/
	Payload *models.IoK8sAPICertificatesV1CertificateSigningRequest `json:"body,omitempty"`
}

// NewReplaceCertificatesV1CertificateSigningRequestStatusOK creates ReplaceCertificatesV1CertificateSigningRequestStatusOK with default headers values
func NewReplaceCertificatesV1CertificateSigningRequestStatusOK() *ReplaceCertificatesV1CertificateSigningRequestStatusOK {

	return &ReplaceCertificatesV1CertificateSigningRequestStatusOK{}
}

// WithPayload adds the payload to the replace certificates v1 certificate signing request status o k response
func (o *ReplaceCertificatesV1CertificateSigningRequestStatusOK) WithPayload(payload *models.IoK8sAPICertificatesV1CertificateSigningRequest) *ReplaceCertificatesV1CertificateSigningRequestStatusOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the replace certificates v1 certificate signing request status o k response
func (o *ReplaceCertificatesV1CertificateSigningRequestStatusOK) SetPayload(payload *models.IoK8sAPICertificatesV1CertificateSigningRequest) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ReplaceCertificatesV1CertificateSigningRequestStatusOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// ReplaceCertificatesV1CertificateSigningRequestStatusCreatedCode is the HTTP code returned for type ReplaceCertificatesV1CertificateSigningRequestStatusCreated
const ReplaceCertificatesV1CertificateSigningRequestStatusCreatedCode int = 201

/*ReplaceCertificatesV1CertificateSigningRequestStatusCreated Created

swagger:response replaceCertificatesV1CertificateSigningRequestStatusCreated
*/
type ReplaceCertificatesV1CertificateSigningRequestStatusCreated struct {

	/*
	  In: Body
	*/
	Payload *models.IoK8sAPICertificatesV1CertificateSigningRequest `json:"body,omitempty"`
}

// NewReplaceCertificatesV1CertificateSigningRequestStatusCreated creates ReplaceCertificatesV1CertificateSigningRequestStatusCreated with default headers values
func NewReplaceCertificatesV1CertificateSigningRequestStatusCreated() *ReplaceCertificatesV1CertificateSigningRequestStatusCreated {

	return &ReplaceCertificatesV1CertificateSigningRequestStatusCreated{}
}

// WithPayload adds the payload to the replace certificates v1 certificate signing request status created response
func (o *ReplaceCertificatesV1CertificateSigningRequestStatusCreated) WithPayload(payload *models.IoK8sAPICertificatesV1CertificateSigningRequest) *ReplaceCertificatesV1CertificateSigningRequestStatusCreated {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the replace certificates v1 certificate signing request status created response
func (o *ReplaceCertificatesV1CertificateSigningRequestStatusCreated) SetPayload(payload *models.IoK8sAPICertificatesV1CertificateSigningRequest) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ReplaceCertificatesV1CertificateSigningRequestStatusCreated) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(201)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// ReplaceCertificatesV1CertificateSigningRequestStatusUnauthorizedCode is the HTTP code returned for type ReplaceCertificatesV1CertificateSigningRequestStatusUnauthorized
const ReplaceCertificatesV1CertificateSigningRequestStatusUnauthorizedCode int = 401

/*ReplaceCertificatesV1CertificateSigningRequestStatusUnauthorized Unauthorized

swagger:response replaceCertificatesV1CertificateSigningRequestStatusUnauthorized
*/
type ReplaceCertificatesV1CertificateSigningRequestStatusUnauthorized struct {
}

// NewReplaceCertificatesV1CertificateSigningRequestStatusUnauthorized creates ReplaceCertificatesV1CertificateSigningRequestStatusUnauthorized with default headers values
func NewReplaceCertificatesV1CertificateSigningRequestStatusUnauthorized() *ReplaceCertificatesV1CertificateSigningRequestStatusUnauthorized {

	return &ReplaceCertificatesV1CertificateSigningRequestStatusUnauthorized{}
}

// WriteResponse to the client
func (o *ReplaceCertificatesV1CertificateSigningRequestStatusUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(401)
}
