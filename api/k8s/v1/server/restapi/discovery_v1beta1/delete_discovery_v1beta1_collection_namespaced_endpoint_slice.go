// Code generated by go-swagger; DO NOT EDIT.

// Copyright 2017-2020 Authors of Cilium
// SPDX-License-Identifier: Apache-2.0

package discovery_v1beta1

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	"github.com/go-openapi/runtime/middleware"
)

// DeleteDiscoveryV1beta1CollectionNamespacedEndpointSliceHandlerFunc turns a function with the right signature into a delete discovery v1beta1 collection namespaced endpoint slice handler
type DeleteDiscoveryV1beta1CollectionNamespacedEndpointSliceHandlerFunc func(DeleteDiscoveryV1beta1CollectionNamespacedEndpointSliceParams) middleware.Responder

// Handle executing the request and returning a response
func (fn DeleteDiscoveryV1beta1CollectionNamespacedEndpointSliceHandlerFunc) Handle(params DeleteDiscoveryV1beta1CollectionNamespacedEndpointSliceParams) middleware.Responder {
	return fn(params)
}

// DeleteDiscoveryV1beta1CollectionNamespacedEndpointSliceHandler interface for that can handle valid delete discovery v1beta1 collection namespaced endpoint slice params
type DeleteDiscoveryV1beta1CollectionNamespacedEndpointSliceHandler interface {
	Handle(DeleteDiscoveryV1beta1CollectionNamespacedEndpointSliceParams) middleware.Responder
}

// NewDeleteDiscoveryV1beta1CollectionNamespacedEndpointSlice creates a new http.Handler for the delete discovery v1beta1 collection namespaced endpoint slice operation
func NewDeleteDiscoveryV1beta1CollectionNamespacedEndpointSlice(ctx *middleware.Context, handler DeleteDiscoveryV1beta1CollectionNamespacedEndpointSliceHandler) *DeleteDiscoveryV1beta1CollectionNamespacedEndpointSlice {
	return &DeleteDiscoveryV1beta1CollectionNamespacedEndpointSlice{Context: ctx, Handler: handler}
}

/*DeleteDiscoveryV1beta1CollectionNamespacedEndpointSlice swagger:route DELETE /apis/discovery.k8s.io/v1beta1/namespaces/{namespace}/endpointslices discovery_v1beta1 deleteDiscoveryV1beta1CollectionNamespacedEndpointSlice

delete collection of EndpointSlice

*/
type DeleteDiscoveryV1beta1CollectionNamespacedEndpointSlice struct {
	Context *middleware.Context
	Handler DeleteDiscoveryV1beta1CollectionNamespacedEndpointSliceHandler
}

func (o *DeleteDiscoveryV1beta1CollectionNamespacedEndpointSlice) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewDeleteDiscoveryV1beta1CollectionNamespacedEndpointSliceParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}
