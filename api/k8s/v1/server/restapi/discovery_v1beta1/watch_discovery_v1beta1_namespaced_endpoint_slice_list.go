// Code generated by go-swagger; DO NOT EDIT.

// Copyright 2017-2020 Authors of Cilium
// SPDX-License-Identifier: Apache-2.0

package discovery_v1beta1

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	"github.com/go-openapi/runtime/middleware"
)

// WatchDiscoveryV1beta1NamespacedEndpointSliceListHandlerFunc turns a function with the right signature into a watch discovery v1beta1 namespaced endpoint slice list handler
type WatchDiscoveryV1beta1NamespacedEndpointSliceListHandlerFunc func(WatchDiscoveryV1beta1NamespacedEndpointSliceListParams) middleware.Responder

// Handle executing the request and returning a response
func (fn WatchDiscoveryV1beta1NamespacedEndpointSliceListHandlerFunc) Handle(params WatchDiscoveryV1beta1NamespacedEndpointSliceListParams) middleware.Responder {
	return fn(params)
}

// WatchDiscoveryV1beta1NamespacedEndpointSliceListHandler interface for that can handle valid watch discovery v1beta1 namespaced endpoint slice list params
type WatchDiscoveryV1beta1NamespacedEndpointSliceListHandler interface {
	Handle(WatchDiscoveryV1beta1NamespacedEndpointSliceListParams) middleware.Responder
}

// NewWatchDiscoveryV1beta1NamespacedEndpointSliceList creates a new http.Handler for the watch discovery v1beta1 namespaced endpoint slice list operation
func NewWatchDiscoveryV1beta1NamespacedEndpointSliceList(ctx *middleware.Context, handler WatchDiscoveryV1beta1NamespacedEndpointSliceListHandler) *WatchDiscoveryV1beta1NamespacedEndpointSliceList {
	return &WatchDiscoveryV1beta1NamespacedEndpointSliceList{Context: ctx, Handler: handler}
}

/*WatchDiscoveryV1beta1NamespacedEndpointSliceList swagger:route GET /apis/discovery.k8s.io/v1beta1/watch/namespaces/{namespace}/endpointslices discovery_v1beta1 watchDiscoveryV1beta1NamespacedEndpointSliceList

watch individual changes to a list of EndpointSlice. deprecated: use the 'watch' parameter with a list operation instead.

*/
type WatchDiscoveryV1beta1NamespacedEndpointSliceList struct {
	Context *middleware.Context
	Handler WatchDiscoveryV1beta1NamespacedEndpointSliceListHandler
}

func (o *WatchDiscoveryV1beta1NamespacedEndpointSliceList) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewWatchDiscoveryV1beta1NamespacedEndpointSliceListParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}
