// Code generated by go-swagger; DO NOT EDIT.

// Copyright 2017-2020 Authors of Cilium
// SPDX-License-Identifier: Apache-2.0

package networking

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	"github.com/go-openapi/runtime/middleware"
)

// GetNetworkingAPIGroupHandlerFunc turns a function with the right signature into a get networking API group handler
type GetNetworkingAPIGroupHandlerFunc func(GetNetworkingAPIGroupParams) middleware.Responder

// Handle executing the request and returning a response
func (fn GetNetworkingAPIGroupHandlerFunc) Handle(params GetNetworkingAPIGroupParams) middleware.Responder {
	return fn(params)
}

// GetNetworkingAPIGroupHandler interface for that can handle valid get networking API group params
type GetNetworkingAPIGroupHandler interface {
	Handle(GetNetworkingAPIGroupParams) middleware.Responder
}

// NewGetNetworkingAPIGroup creates a new http.Handler for the get networking API group operation
func NewGetNetworkingAPIGroup(ctx *middleware.Context, handler GetNetworkingAPIGroupHandler) *GetNetworkingAPIGroup {
	return &GetNetworkingAPIGroup{Context: ctx, Handler: handler}
}

/*GetNetworkingAPIGroup swagger:route GET /apis/networking.k8s.io/ networking getNetworkingApiGroup

get information of a group

*/
type GetNetworkingAPIGroup struct {
	Context *middleware.Context
	Handler GetNetworkingAPIGroupHandler
}

func (o *GetNetworkingAPIGroup) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewGetNetworkingAPIGroupParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}
