// Code generated by go-swagger; DO NOT EDIT.

// Copyright 2017-2020 Authors of Cilium
// SPDX-License-Identifier: Apache-2.0

package rbac_authorization_v1beta1

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/cilium/kube-apate/api/k8s/v1/models"
)

// CreateRbacAuthorizationV1beta1ClusterRoleOKCode is the HTTP code returned for type CreateRbacAuthorizationV1beta1ClusterRoleOK
const CreateRbacAuthorizationV1beta1ClusterRoleOKCode int = 200

/*CreateRbacAuthorizationV1beta1ClusterRoleOK OK

swagger:response createRbacAuthorizationV1beta1ClusterRoleOK
*/
type CreateRbacAuthorizationV1beta1ClusterRoleOK struct {

	/*
	  In: Body
	*/
	Payload *models.IoK8sAPIRbacV1beta1ClusterRole `json:"body,omitempty"`
}

// NewCreateRbacAuthorizationV1beta1ClusterRoleOK creates CreateRbacAuthorizationV1beta1ClusterRoleOK with default headers values
func NewCreateRbacAuthorizationV1beta1ClusterRoleOK() *CreateRbacAuthorizationV1beta1ClusterRoleOK {

	return &CreateRbacAuthorizationV1beta1ClusterRoleOK{}
}

// WithPayload adds the payload to the create rbac authorization v1beta1 cluster role o k response
func (o *CreateRbacAuthorizationV1beta1ClusterRoleOK) WithPayload(payload *models.IoK8sAPIRbacV1beta1ClusterRole) *CreateRbacAuthorizationV1beta1ClusterRoleOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the create rbac authorization v1beta1 cluster role o k response
func (o *CreateRbacAuthorizationV1beta1ClusterRoleOK) SetPayload(payload *models.IoK8sAPIRbacV1beta1ClusterRole) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CreateRbacAuthorizationV1beta1ClusterRoleOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// CreateRbacAuthorizationV1beta1ClusterRoleCreatedCode is the HTTP code returned for type CreateRbacAuthorizationV1beta1ClusterRoleCreated
const CreateRbacAuthorizationV1beta1ClusterRoleCreatedCode int = 201

/*CreateRbacAuthorizationV1beta1ClusterRoleCreated Created

swagger:response createRbacAuthorizationV1beta1ClusterRoleCreated
*/
type CreateRbacAuthorizationV1beta1ClusterRoleCreated struct {

	/*
	  In: Body
	*/
	Payload *models.IoK8sAPIRbacV1beta1ClusterRole `json:"body,omitempty"`
}

// NewCreateRbacAuthorizationV1beta1ClusterRoleCreated creates CreateRbacAuthorizationV1beta1ClusterRoleCreated with default headers values
func NewCreateRbacAuthorizationV1beta1ClusterRoleCreated() *CreateRbacAuthorizationV1beta1ClusterRoleCreated {

	return &CreateRbacAuthorizationV1beta1ClusterRoleCreated{}
}

// WithPayload adds the payload to the create rbac authorization v1beta1 cluster role created response
func (o *CreateRbacAuthorizationV1beta1ClusterRoleCreated) WithPayload(payload *models.IoK8sAPIRbacV1beta1ClusterRole) *CreateRbacAuthorizationV1beta1ClusterRoleCreated {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the create rbac authorization v1beta1 cluster role created response
func (o *CreateRbacAuthorizationV1beta1ClusterRoleCreated) SetPayload(payload *models.IoK8sAPIRbacV1beta1ClusterRole) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CreateRbacAuthorizationV1beta1ClusterRoleCreated) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(201)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// CreateRbacAuthorizationV1beta1ClusterRoleAcceptedCode is the HTTP code returned for type CreateRbacAuthorizationV1beta1ClusterRoleAccepted
const CreateRbacAuthorizationV1beta1ClusterRoleAcceptedCode int = 202

/*CreateRbacAuthorizationV1beta1ClusterRoleAccepted Accepted

swagger:response createRbacAuthorizationV1beta1ClusterRoleAccepted
*/
type CreateRbacAuthorizationV1beta1ClusterRoleAccepted struct {

	/*
	  In: Body
	*/
	Payload *models.IoK8sAPIRbacV1beta1ClusterRole `json:"body,omitempty"`
}

// NewCreateRbacAuthorizationV1beta1ClusterRoleAccepted creates CreateRbacAuthorizationV1beta1ClusterRoleAccepted with default headers values
func NewCreateRbacAuthorizationV1beta1ClusterRoleAccepted() *CreateRbacAuthorizationV1beta1ClusterRoleAccepted {

	return &CreateRbacAuthorizationV1beta1ClusterRoleAccepted{}
}

// WithPayload adds the payload to the create rbac authorization v1beta1 cluster role accepted response
func (o *CreateRbacAuthorizationV1beta1ClusterRoleAccepted) WithPayload(payload *models.IoK8sAPIRbacV1beta1ClusterRole) *CreateRbacAuthorizationV1beta1ClusterRoleAccepted {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the create rbac authorization v1beta1 cluster role accepted response
func (o *CreateRbacAuthorizationV1beta1ClusterRoleAccepted) SetPayload(payload *models.IoK8sAPIRbacV1beta1ClusterRole) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CreateRbacAuthorizationV1beta1ClusterRoleAccepted) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(202)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// CreateRbacAuthorizationV1beta1ClusterRoleUnauthorizedCode is the HTTP code returned for type CreateRbacAuthorizationV1beta1ClusterRoleUnauthorized
const CreateRbacAuthorizationV1beta1ClusterRoleUnauthorizedCode int = 401

/*CreateRbacAuthorizationV1beta1ClusterRoleUnauthorized Unauthorized

swagger:response createRbacAuthorizationV1beta1ClusterRoleUnauthorized
*/
type CreateRbacAuthorizationV1beta1ClusterRoleUnauthorized struct {
}

// NewCreateRbacAuthorizationV1beta1ClusterRoleUnauthorized creates CreateRbacAuthorizationV1beta1ClusterRoleUnauthorized with default headers values
func NewCreateRbacAuthorizationV1beta1ClusterRoleUnauthorized() *CreateRbacAuthorizationV1beta1ClusterRoleUnauthorized {

	return &CreateRbacAuthorizationV1beta1ClusterRoleUnauthorized{}
}

// WriteResponse to the client
func (o *CreateRbacAuthorizationV1beta1ClusterRoleUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(401)
}
