// Code generated by go-swagger; DO NOT EDIT.

// Copyright 2017-2020 Authors of Cilium
// SPDX-License-Identifier: Apache-2.0

package rbac_authorization_v1alpha1

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	"github.com/go-openapi/runtime/middleware"
)

// ListRbacAuthorizationV1alpha1NamespacedRoleBindingHandlerFunc turns a function with the right signature into a list rbac authorization v1alpha1 namespaced role binding handler
type ListRbacAuthorizationV1alpha1NamespacedRoleBindingHandlerFunc func(ListRbacAuthorizationV1alpha1NamespacedRoleBindingParams) middleware.Responder

// Handle executing the request and returning a response
func (fn ListRbacAuthorizationV1alpha1NamespacedRoleBindingHandlerFunc) Handle(params ListRbacAuthorizationV1alpha1NamespacedRoleBindingParams) middleware.Responder {
	return fn(params)
}

// ListRbacAuthorizationV1alpha1NamespacedRoleBindingHandler interface for that can handle valid list rbac authorization v1alpha1 namespaced role binding params
type ListRbacAuthorizationV1alpha1NamespacedRoleBindingHandler interface {
	Handle(ListRbacAuthorizationV1alpha1NamespacedRoleBindingParams) middleware.Responder
}

// NewListRbacAuthorizationV1alpha1NamespacedRoleBinding creates a new http.Handler for the list rbac authorization v1alpha1 namespaced role binding operation
func NewListRbacAuthorizationV1alpha1NamespacedRoleBinding(ctx *middleware.Context, handler ListRbacAuthorizationV1alpha1NamespacedRoleBindingHandler) *ListRbacAuthorizationV1alpha1NamespacedRoleBinding {
	return &ListRbacAuthorizationV1alpha1NamespacedRoleBinding{Context: ctx, Handler: handler}
}

/*ListRbacAuthorizationV1alpha1NamespacedRoleBinding swagger:route GET /apis/rbac.authorization.k8s.io/v1alpha1/namespaces/{namespace}/rolebindings rbacAuthorization_v1alpha1 listRbacAuthorizationV1alpha1NamespacedRoleBinding

list or watch objects of kind RoleBinding

*/
type ListRbacAuthorizationV1alpha1NamespacedRoleBinding struct {
	Context *middleware.Context
	Handler ListRbacAuthorizationV1alpha1NamespacedRoleBindingHandler
}

func (o *ListRbacAuthorizationV1alpha1NamespacedRoleBinding) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewListRbacAuthorizationV1alpha1NamespacedRoleBindingParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}
