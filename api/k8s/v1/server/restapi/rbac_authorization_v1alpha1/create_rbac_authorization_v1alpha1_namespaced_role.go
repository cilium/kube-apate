// Code generated by go-swagger; DO NOT EDIT.

// Copyright 2017-2020 Authors of Cilium
// SPDX-License-Identifier: Apache-2.0

package rbac_authorization_v1alpha1

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	"github.com/go-openapi/runtime/middleware"
)

// CreateRbacAuthorizationV1alpha1NamespacedRoleHandlerFunc turns a function with the right signature into a create rbac authorization v1alpha1 namespaced role handler
type CreateRbacAuthorizationV1alpha1NamespacedRoleHandlerFunc func(CreateRbacAuthorizationV1alpha1NamespacedRoleParams) middleware.Responder

// Handle executing the request and returning a response
func (fn CreateRbacAuthorizationV1alpha1NamespacedRoleHandlerFunc) Handle(params CreateRbacAuthorizationV1alpha1NamespacedRoleParams) middleware.Responder {
	return fn(params)
}

// CreateRbacAuthorizationV1alpha1NamespacedRoleHandler interface for that can handle valid create rbac authorization v1alpha1 namespaced role params
type CreateRbacAuthorizationV1alpha1NamespacedRoleHandler interface {
	Handle(CreateRbacAuthorizationV1alpha1NamespacedRoleParams) middleware.Responder
}

// NewCreateRbacAuthorizationV1alpha1NamespacedRole creates a new http.Handler for the create rbac authorization v1alpha1 namespaced role operation
func NewCreateRbacAuthorizationV1alpha1NamespacedRole(ctx *middleware.Context, handler CreateRbacAuthorizationV1alpha1NamespacedRoleHandler) *CreateRbacAuthorizationV1alpha1NamespacedRole {
	return &CreateRbacAuthorizationV1alpha1NamespacedRole{Context: ctx, Handler: handler}
}

/*CreateRbacAuthorizationV1alpha1NamespacedRole swagger:route POST /apis/rbac.authorization.k8s.io/v1alpha1/namespaces/{namespace}/roles rbacAuthorization_v1alpha1 createRbacAuthorizationV1alpha1NamespacedRole

create a Role

*/
type CreateRbacAuthorizationV1alpha1NamespacedRole struct {
	Context *middleware.Context
	Handler CreateRbacAuthorizationV1alpha1NamespacedRoleHandler
}

func (o *CreateRbacAuthorizationV1alpha1NamespacedRole) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewCreateRbacAuthorizationV1alpha1NamespacedRoleParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}
