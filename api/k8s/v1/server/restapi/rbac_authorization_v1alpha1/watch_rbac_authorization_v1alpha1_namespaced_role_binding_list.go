// Code generated by go-swagger; DO NOT EDIT.

// Copyright 2017-2020 Authors of Cilium
// SPDX-License-Identifier: Apache-2.0

package rbac_authorization_v1alpha1

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	"github.com/go-openapi/runtime/middleware"
)

// WatchRbacAuthorizationV1alpha1NamespacedRoleBindingListHandlerFunc turns a function with the right signature into a watch rbac authorization v1alpha1 namespaced role binding list handler
type WatchRbacAuthorizationV1alpha1NamespacedRoleBindingListHandlerFunc func(WatchRbacAuthorizationV1alpha1NamespacedRoleBindingListParams) middleware.Responder

// Handle executing the request and returning a response
func (fn WatchRbacAuthorizationV1alpha1NamespacedRoleBindingListHandlerFunc) Handle(params WatchRbacAuthorizationV1alpha1NamespacedRoleBindingListParams) middleware.Responder {
	return fn(params)
}

// WatchRbacAuthorizationV1alpha1NamespacedRoleBindingListHandler interface for that can handle valid watch rbac authorization v1alpha1 namespaced role binding list params
type WatchRbacAuthorizationV1alpha1NamespacedRoleBindingListHandler interface {
	Handle(WatchRbacAuthorizationV1alpha1NamespacedRoleBindingListParams) middleware.Responder
}

// NewWatchRbacAuthorizationV1alpha1NamespacedRoleBindingList creates a new http.Handler for the watch rbac authorization v1alpha1 namespaced role binding list operation
func NewWatchRbacAuthorizationV1alpha1NamespacedRoleBindingList(ctx *middleware.Context, handler WatchRbacAuthorizationV1alpha1NamespacedRoleBindingListHandler) *WatchRbacAuthorizationV1alpha1NamespacedRoleBindingList {
	return &WatchRbacAuthorizationV1alpha1NamespacedRoleBindingList{Context: ctx, Handler: handler}
}

/*WatchRbacAuthorizationV1alpha1NamespacedRoleBindingList swagger:route GET /apis/rbac.authorization.k8s.io/v1alpha1/watch/namespaces/{namespace}/rolebindings rbacAuthorization_v1alpha1 watchRbacAuthorizationV1alpha1NamespacedRoleBindingList

watch individual changes to a list of RoleBinding. deprecated: use the 'watch' parameter with a list operation instead.

*/
type WatchRbacAuthorizationV1alpha1NamespacedRoleBindingList struct {
	Context *middleware.Context
	Handler WatchRbacAuthorizationV1alpha1NamespacedRoleBindingListHandler
}

func (o *WatchRbacAuthorizationV1alpha1NamespacedRoleBindingList) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewWatchRbacAuthorizationV1alpha1NamespacedRoleBindingListParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}
