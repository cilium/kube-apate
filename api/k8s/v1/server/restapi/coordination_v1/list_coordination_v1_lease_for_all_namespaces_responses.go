// Code generated by go-swagger; DO NOT EDIT.

// Copyright 2017-2020 Authors of Cilium
// SPDX-License-Identifier: Apache-2.0

package coordination_v1

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/cilium/kube-apate/api/k8s/v1/models"
)

// ListCoordinationV1LeaseForAllNamespacesOKCode is the HTTP code returned for type ListCoordinationV1LeaseForAllNamespacesOK
const ListCoordinationV1LeaseForAllNamespacesOKCode int = 200

/*ListCoordinationV1LeaseForAllNamespacesOK OK

swagger:response listCoordinationV1LeaseForAllNamespacesOK
*/
type ListCoordinationV1LeaseForAllNamespacesOK struct {

	/*
	  In: Body
	*/
	Payload *models.IoK8sAPICoordinationV1LeaseList `json:"body,omitempty"`
}

// NewListCoordinationV1LeaseForAllNamespacesOK creates ListCoordinationV1LeaseForAllNamespacesOK with default headers values
func NewListCoordinationV1LeaseForAllNamespacesOK() *ListCoordinationV1LeaseForAllNamespacesOK {

	return &ListCoordinationV1LeaseForAllNamespacesOK{}
}

// WithPayload adds the payload to the list coordination v1 lease for all namespaces o k response
func (o *ListCoordinationV1LeaseForAllNamespacesOK) WithPayload(payload *models.IoK8sAPICoordinationV1LeaseList) *ListCoordinationV1LeaseForAllNamespacesOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the list coordination v1 lease for all namespaces o k response
func (o *ListCoordinationV1LeaseForAllNamespacesOK) SetPayload(payload *models.IoK8sAPICoordinationV1LeaseList) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ListCoordinationV1LeaseForAllNamespacesOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// ListCoordinationV1LeaseForAllNamespacesUnauthorizedCode is the HTTP code returned for type ListCoordinationV1LeaseForAllNamespacesUnauthorized
const ListCoordinationV1LeaseForAllNamespacesUnauthorizedCode int = 401

/*ListCoordinationV1LeaseForAllNamespacesUnauthorized Unauthorized

swagger:response listCoordinationV1LeaseForAllNamespacesUnauthorized
*/
type ListCoordinationV1LeaseForAllNamespacesUnauthorized struct {
}

// NewListCoordinationV1LeaseForAllNamespacesUnauthorized creates ListCoordinationV1LeaseForAllNamespacesUnauthorized with default headers values
func NewListCoordinationV1LeaseForAllNamespacesUnauthorized() *ListCoordinationV1LeaseForAllNamespacesUnauthorized {

	return &ListCoordinationV1LeaseForAllNamespacesUnauthorized{}
}

// WriteResponse to the client
func (o *ListCoordinationV1LeaseForAllNamespacesUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(401)
}
