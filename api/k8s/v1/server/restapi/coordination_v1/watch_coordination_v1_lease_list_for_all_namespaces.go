// Code generated by go-swagger; DO NOT EDIT.

// Copyright 2017-2020 Authors of Cilium
// SPDX-License-Identifier: Apache-2.0

package coordination_v1

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	"github.com/go-openapi/runtime/middleware"
)

// WatchCoordinationV1LeaseListForAllNamespacesHandlerFunc turns a function with the right signature into a watch coordination v1 lease list for all namespaces handler
type WatchCoordinationV1LeaseListForAllNamespacesHandlerFunc func(WatchCoordinationV1LeaseListForAllNamespacesParams) middleware.Responder

// Handle executing the request and returning a response
func (fn WatchCoordinationV1LeaseListForAllNamespacesHandlerFunc) Handle(params WatchCoordinationV1LeaseListForAllNamespacesParams) middleware.Responder {
	return fn(params)
}

// WatchCoordinationV1LeaseListForAllNamespacesHandler interface for that can handle valid watch coordination v1 lease list for all namespaces params
type WatchCoordinationV1LeaseListForAllNamespacesHandler interface {
	Handle(WatchCoordinationV1LeaseListForAllNamespacesParams) middleware.Responder
}

// NewWatchCoordinationV1LeaseListForAllNamespaces creates a new http.Handler for the watch coordination v1 lease list for all namespaces operation
func NewWatchCoordinationV1LeaseListForAllNamespaces(ctx *middleware.Context, handler WatchCoordinationV1LeaseListForAllNamespacesHandler) *WatchCoordinationV1LeaseListForAllNamespaces {
	return &WatchCoordinationV1LeaseListForAllNamespaces{Context: ctx, Handler: handler}
}

/*WatchCoordinationV1LeaseListForAllNamespaces swagger:route GET /apis/coordination.k8s.io/v1/watch/leases coordination_v1 watchCoordinationV1LeaseListForAllNamespaces

watch individual changes to a list of Lease. deprecated: use the 'watch' parameter with a list operation instead.

*/
type WatchCoordinationV1LeaseListForAllNamespaces struct {
	Context *middleware.Context
	Handler WatchCoordinationV1LeaseListForAllNamespacesHandler
}

func (o *WatchCoordinationV1LeaseListForAllNamespaces) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewWatchCoordinationV1LeaseListForAllNamespacesParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}
