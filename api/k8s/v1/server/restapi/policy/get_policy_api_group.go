// Code generated by go-swagger; DO NOT EDIT.

// Copyright 2017-2020 Authors of Cilium
// SPDX-License-Identifier: Apache-2.0

package policy

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	"github.com/go-openapi/runtime/middleware"
)

// GetPolicyAPIGroupHandlerFunc turns a function with the right signature into a get policy API group handler
type GetPolicyAPIGroupHandlerFunc func(GetPolicyAPIGroupParams) middleware.Responder

// Handle executing the request and returning a response
func (fn GetPolicyAPIGroupHandlerFunc) Handle(params GetPolicyAPIGroupParams) middleware.Responder {
	return fn(params)
}

// GetPolicyAPIGroupHandler interface for that can handle valid get policy API group params
type GetPolicyAPIGroupHandler interface {
	Handle(GetPolicyAPIGroupParams) middleware.Responder
}

// NewGetPolicyAPIGroup creates a new http.Handler for the get policy API group operation
func NewGetPolicyAPIGroup(ctx *middleware.Context, handler GetPolicyAPIGroupHandler) *GetPolicyAPIGroup {
	return &GetPolicyAPIGroup{Context: ctx, Handler: handler}
}

/*GetPolicyAPIGroup swagger:route GET /apis/policy/ policy getPolicyApiGroup

get information of a group

*/
type GetPolicyAPIGroup struct {
	Context *middleware.Context
	Handler GetPolicyAPIGroupHandler
}

func (o *GetPolicyAPIGroup) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewGetPolicyAPIGroupParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}
