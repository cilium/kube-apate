// Code generated by go-swagger; DO NOT EDIT.

// Copyright 2017-2020 Authors of Cilium
// SPDX-License-Identifier: Apache-2.0

package core_v1

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/cilium/kube-apate/api/k8s/v1/models"
)

// WatchCoreV1ReplicationControllerListForAllNamespacesOKCode is the HTTP code returned for type WatchCoreV1ReplicationControllerListForAllNamespacesOK
const WatchCoreV1ReplicationControllerListForAllNamespacesOKCode int = 200

/*WatchCoreV1ReplicationControllerListForAllNamespacesOK OK

swagger:response watchCoreV1ReplicationControllerListForAllNamespacesOK
*/
type WatchCoreV1ReplicationControllerListForAllNamespacesOK struct {

	/*
	  In: Body
	*/
	Payload *models.IoK8sApimachineryPkgApisMetaV1WatchEvent `json:"body,omitempty"`
}

// NewWatchCoreV1ReplicationControllerListForAllNamespacesOK creates WatchCoreV1ReplicationControllerListForAllNamespacesOK with default headers values
func NewWatchCoreV1ReplicationControllerListForAllNamespacesOK() *WatchCoreV1ReplicationControllerListForAllNamespacesOK {

	return &WatchCoreV1ReplicationControllerListForAllNamespacesOK{}
}

// WithPayload adds the payload to the watch core v1 replication controller list for all namespaces o k response
func (o *WatchCoreV1ReplicationControllerListForAllNamespacesOK) WithPayload(payload *models.IoK8sApimachineryPkgApisMetaV1WatchEvent) *WatchCoreV1ReplicationControllerListForAllNamespacesOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the watch core v1 replication controller list for all namespaces o k response
func (o *WatchCoreV1ReplicationControllerListForAllNamespacesOK) SetPayload(payload *models.IoK8sApimachineryPkgApisMetaV1WatchEvent) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *WatchCoreV1ReplicationControllerListForAllNamespacesOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// WatchCoreV1ReplicationControllerListForAllNamespacesUnauthorizedCode is the HTTP code returned for type WatchCoreV1ReplicationControllerListForAllNamespacesUnauthorized
const WatchCoreV1ReplicationControllerListForAllNamespacesUnauthorizedCode int = 401

/*WatchCoreV1ReplicationControllerListForAllNamespacesUnauthorized Unauthorized

swagger:response watchCoreV1ReplicationControllerListForAllNamespacesUnauthorized
*/
type WatchCoreV1ReplicationControllerListForAllNamespacesUnauthorized struct {
}

// NewWatchCoreV1ReplicationControllerListForAllNamespacesUnauthorized creates WatchCoreV1ReplicationControllerListForAllNamespacesUnauthorized with default headers values
func NewWatchCoreV1ReplicationControllerListForAllNamespacesUnauthorized() *WatchCoreV1ReplicationControllerListForAllNamespacesUnauthorized {

	return &WatchCoreV1ReplicationControllerListForAllNamespacesUnauthorized{}
}

// WriteResponse to the client
func (o *WatchCoreV1ReplicationControllerListForAllNamespacesUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(401)
}
