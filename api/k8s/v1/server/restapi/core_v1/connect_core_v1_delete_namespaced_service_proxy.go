// Code generated by go-swagger; DO NOT EDIT.

// Copyright 2017-2020 Authors of Cilium
// SPDX-License-Identifier: Apache-2.0

package core_v1

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	"github.com/go-openapi/runtime/middleware"
)

// ConnectCoreV1DeleteNamespacedServiceProxyHandlerFunc turns a function with the right signature into a connect core v1 delete namespaced service proxy handler
type ConnectCoreV1DeleteNamespacedServiceProxyHandlerFunc func(ConnectCoreV1DeleteNamespacedServiceProxyParams) middleware.Responder

// Handle executing the request and returning a response
func (fn ConnectCoreV1DeleteNamespacedServiceProxyHandlerFunc) Handle(params ConnectCoreV1DeleteNamespacedServiceProxyParams) middleware.Responder {
	return fn(params)
}

// ConnectCoreV1DeleteNamespacedServiceProxyHandler interface for that can handle valid connect core v1 delete namespaced service proxy params
type ConnectCoreV1DeleteNamespacedServiceProxyHandler interface {
	Handle(ConnectCoreV1DeleteNamespacedServiceProxyParams) middleware.Responder
}

// NewConnectCoreV1DeleteNamespacedServiceProxy creates a new http.Handler for the connect core v1 delete namespaced service proxy operation
func NewConnectCoreV1DeleteNamespacedServiceProxy(ctx *middleware.Context, handler ConnectCoreV1DeleteNamespacedServiceProxyHandler) *ConnectCoreV1DeleteNamespacedServiceProxy {
	return &ConnectCoreV1DeleteNamespacedServiceProxy{Context: ctx, Handler: handler}
}

/*ConnectCoreV1DeleteNamespacedServiceProxy swagger:route DELETE /api/v1/namespaces/{namespace}/services/{name}/proxy core_v1 connectCoreV1DeleteNamespacedServiceProxy

connect DELETE requests to proxy of Service

*/
type ConnectCoreV1DeleteNamespacedServiceProxy struct {
	Context *middleware.Context
	Handler ConnectCoreV1DeleteNamespacedServiceProxyHandler
}

func (o *ConnectCoreV1DeleteNamespacedServiceProxy) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewConnectCoreV1DeleteNamespacedServiceProxyParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}
