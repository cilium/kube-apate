// Code generated by go-swagger; DO NOT EDIT.

// Copyright 2017-2020 Authors of Cilium
// SPDX-License-Identifier: Apache-2.0

package core_v1

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/cilium/kube-apate/api/k8s/v1/models"
)

// CreateCoreV1NamespacedServiceAccountOKCode is the HTTP code returned for type CreateCoreV1NamespacedServiceAccountOK
const CreateCoreV1NamespacedServiceAccountOKCode int = 200

/*CreateCoreV1NamespacedServiceAccountOK OK

swagger:response createCoreV1NamespacedServiceAccountOK
*/
type CreateCoreV1NamespacedServiceAccountOK struct {

	/*
	  In: Body
	*/
	Payload *models.IoK8sAPICoreV1ServiceAccount `json:"body,omitempty"`
}

// NewCreateCoreV1NamespacedServiceAccountOK creates CreateCoreV1NamespacedServiceAccountOK with default headers values
func NewCreateCoreV1NamespacedServiceAccountOK() *CreateCoreV1NamespacedServiceAccountOK {

	return &CreateCoreV1NamespacedServiceAccountOK{}
}

// WithPayload adds the payload to the create core v1 namespaced service account o k response
func (o *CreateCoreV1NamespacedServiceAccountOK) WithPayload(payload *models.IoK8sAPICoreV1ServiceAccount) *CreateCoreV1NamespacedServiceAccountOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the create core v1 namespaced service account o k response
func (o *CreateCoreV1NamespacedServiceAccountOK) SetPayload(payload *models.IoK8sAPICoreV1ServiceAccount) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CreateCoreV1NamespacedServiceAccountOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// CreateCoreV1NamespacedServiceAccountCreatedCode is the HTTP code returned for type CreateCoreV1NamespacedServiceAccountCreated
const CreateCoreV1NamespacedServiceAccountCreatedCode int = 201

/*CreateCoreV1NamespacedServiceAccountCreated Created

swagger:response createCoreV1NamespacedServiceAccountCreated
*/
type CreateCoreV1NamespacedServiceAccountCreated struct {

	/*
	  In: Body
	*/
	Payload *models.IoK8sAPICoreV1ServiceAccount `json:"body,omitempty"`
}

// NewCreateCoreV1NamespacedServiceAccountCreated creates CreateCoreV1NamespacedServiceAccountCreated with default headers values
func NewCreateCoreV1NamespacedServiceAccountCreated() *CreateCoreV1NamespacedServiceAccountCreated {

	return &CreateCoreV1NamespacedServiceAccountCreated{}
}

// WithPayload adds the payload to the create core v1 namespaced service account created response
func (o *CreateCoreV1NamespacedServiceAccountCreated) WithPayload(payload *models.IoK8sAPICoreV1ServiceAccount) *CreateCoreV1NamespacedServiceAccountCreated {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the create core v1 namespaced service account created response
func (o *CreateCoreV1NamespacedServiceAccountCreated) SetPayload(payload *models.IoK8sAPICoreV1ServiceAccount) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CreateCoreV1NamespacedServiceAccountCreated) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(201)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// CreateCoreV1NamespacedServiceAccountAcceptedCode is the HTTP code returned for type CreateCoreV1NamespacedServiceAccountAccepted
const CreateCoreV1NamespacedServiceAccountAcceptedCode int = 202

/*CreateCoreV1NamespacedServiceAccountAccepted Accepted

swagger:response createCoreV1NamespacedServiceAccountAccepted
*/
type CreateCoreV1NamespacedServiceAccountAccepted struct {

	/*
	  In: Body
	*/
	Payload *models.IoK8sAPICoreV1ServiceAccount `json:"body,omitempty"`
}

// NewCreateCoreV1NamespacedServiceAccountAccepted creates CreateCoreV1NamespacedServiceAccountAccepted with default headers values
func NewCreateCoreV1NamespacedServiceAccountAccepted() *CreateCoreV1NamespacedServiceAccountAccepted {

	return &CreateCoreV1NamespacedServiceAccountAccepted{}
}

// WithPayload adds the payload to the create core v1 namespaced service account accepted response
func (o *CreateCoreV1NamespacedServiceAccountAccepted) WithPayload(payload *models.IoK8sAPICoreV1ServiceAccount) *CreateCoreV1NamespacedServiceAccountAccepted {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the create core v1 namespaced service account accepted response
func (o *CreateCoreV1NamespacedServiceAccountAccepted) SetPayload(payload *models.IoK8sAPICoreV1ServiceAccount) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CreateCoreV1NamespacedServiceAccountAccepted) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(202)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// CreateCoreV1NamespacedServiceAccountUnauthorizedCode is the HTTP code returned for type CreateCoreV1NamespacedServiceAccountUnauthorized
const CreateCoreV1NamespacedServiceAccountUnauthorizedCode int = 401

/*CreateCoreV1NamespacedServiceAccountUnauthorized Unauthorized

swagger:response createCoreV1NamespacedServiceAccountUnauthorized
*/
type CreateCoreV1NamespacedServiceAccountUnauthorized struct {
}

// NewCreateCoreV1NamespacedServiceAccountUnauthorized creates CreateCoreV1NamespacedServiceAccountUnauthorized with default headers values
func NewCreateCoreV1NamespacedServiceAccountUnauthorized() *CreateCoreV1NamespacedServiceAccountUnauthorized {

	return &CreateCoreV1NamespacedServiceAccountUnauthorized{}
}

// WriteResponse to the client
func (o *CreateCoreV1NamespacedServiceAccountUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(401)
}
