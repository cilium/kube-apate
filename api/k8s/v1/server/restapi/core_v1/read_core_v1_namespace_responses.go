// Code generated by go-swagger; DO NOT EDIT.

// Copyright 2017-2020 Authors of Cilium
// SPDX-License-Identifier: Apache-2.0

package core_v1

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/cilium/kube-apate/api/k8s/v1/models"
)

// ReadCoreV1NamespaceOKCode is the HTTP code returned for type ReadCoreV1NamespaceOK
const ReadCoreV1NamespaceOKCode int = 200

/*ReadCoreV1NamespaceOK OK

swagger:response readCoreV1NamespaceOK
*/
type ReadCoreV1NamespaceOK struct {

	/*
	  In: Body
	*/
	Payload *models.IoK8sAPICoreV1Namespace `json:"body,omitempty"`
}

// NewReadCoreV1NamespaceOK creates ReadCoreV1NamespaceOK with default headers values
func NewReadCoreV1NamespaceOK() *ReadCoreV1NamespaceOK {

	return &ReadCoreV1NamespaceOK{}
}

// WithPayload adds the payload to the read core v1 namespace o k response
func (o *ReadCoreV1NamespaceOK) WithPayload(payload *models.IoK8sAPICoreV1Namespace) *ReadCoreV1NamespaceOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the read core v1 namespace o k response
func (o *ReadCoreV1NamespaceOK) SetPayload(payload *models.IoK8sAPICoreV1Namespace) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ReadCoreV1NamespaceOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// ReadCoreV1NamespaceUnauthorizedCode is the HTTP code returned for type ReadCoreV1NamespaceUnauthorized
const ReadCoreV1NamespaceUnauthorizedCode int = 401

/*ReadCoreV1NamespaceUnauthorized Unauthorized

swagger:response readCoreV1NamespaceUnauthorized
*/
type ReadCoreV1NamespaceUnauthorized struct {
}

// NewReadCoreV1NamespaceUnauthorized creates ReadCoreV1NamespaceUnauthorized with default headers values
func NewReadCoreV1NamespaceUnauthorized() *ReadCoreV1NamespaceUnauthorized {

	return &ReadCoreV1NamespaceUnauthorized{}
}

// WriteResponse to the client
func (o *ReadCoreV1NamespaceUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(401)
}
