// Code generated by go-swagger; DO NOT EDIT.

// Copyright 2017-2020 Authors of Cilium
// SPDX-License-Identifier: Apache-2.0

package core_v1

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"
)

// ReadCoreV1NamespacedPodLogOKCode is the HTTP code returned for type ReadCoreV1NamespacedPodLogOK
const ReadCoreV1NamespacedPodLogOKCode int = 200

/*ReadCoreV1NamespacedPodLogOK OK

swagger:response readCoreV1NamespacedPodLogOK
*/
type ReadCoreV1NamespacedPodLogOK struct {

	/*
	  In: Body
	*/
	Payload string `json:"body,omitempty"`
}

// NewReadCoreV1NamespacedPodLogOK creates ReadCoreV1NamespacedPodLogOK with default headers values
func NewReadCoreV1NamespacedPodLogOK() *ReadCoreV1NamespacedPodLogOK {

	return &ReadCoreV1NamespacedPodLogOK{}
}

// WithPayload adds the payload to the read core v1 namespaced pod log o k response
func (o *ReadCoreV1NamespacedPodLogOK) WithPayload(payload string) *ReadCoreV1NamespacedPodLogOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the read core v1 namespaced pod log o k response
func (o *ReadCoreV1NamespacedPodLogOK) SetPayload(payload string) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ReadCoreV1NamespacedPodLogOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

// ReadCoreV1NamespacedPodLogUnauthorizedCode is the HTTP code returned for type ReadCoreV1NamespacedPodLogUnauthorized
const ReadCoreV1NamespacedPodLogUnauthorizedCode int = 401

/*ReadCoreV1NamespacedPodLogUnauthorized Unauthorized

swagger:response readCoreV1NamespacedPodLogUnauthorized
*/
type ReadCoreV1NamespacedPodLogUnauthorized struct {
}

// NewReadCoreV1NamespacedPodLogUnauthorized creates ReadCoreV1NamespacedPodLogUnauthorized with default headers values
func NewReadCoreV1NamespacedPodLogUnauthorized() *ReadCoreV1NamespacedPodLogUnauthorized {

	return &ReadCoreV1NamespacedPodLogUnauthorized{}
}

// WriteResponse to the client
func (o *ReadCoreV1NamespacedPodLogUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(401)
}
