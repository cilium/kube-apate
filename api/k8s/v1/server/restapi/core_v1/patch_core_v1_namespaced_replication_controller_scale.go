// Code generated by go-swagger; DO NOT EDIT.

// Copyright 2017-2020 Authors of Cilium
// SPDX-License-Identifier: Apache-2.0

package core_v1

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	"github.com/go-openapi/runtime/middleware"
)

// PatchCoreV1NamespacedReplicationControllerScaleHandlerFunc turns a function with the right signature into a patch core v1 namespaced replication controller scale handler
type PatchCoreV1NamespacedReplicationControllerScaleHandlerFunc func(PatchCoreV1NamespacedReplicationControllerScaleParams) middleware.Responder

// Handle executing the request and returning a response
func (fn PatchCoreV1NamespacedReplicationControllerScaleHandlerFunc) Handle(params PatchCoreV1NamespacedReplicationControllerScaleParams) middleware.Responder {
	return fn(params)
}

// PatchCoreV1NamespacedReplicationControllerScaleHandler interface for that can handle valid patch core v1 namespaced replication controller scale params
type PatchCoreV1NamespacedReplicationControllerScaleHandler interface {
	Handle(PatchCoreV1NamespacedReplicationControllerScaleParams) middleware.Responder
}

// NewPatchCoreV1NamespacedReplicationControllerScale creates a new http.Handler for the patch core v1 namespaced replication controller scale operation
func NewPatchCoreV1NamespacedReplicationControllerScale(ctx *middleware.Context, handler PatchCoreV1NamespacedReplicationControllerScaleHandler) *PatchCoreV1NamespacedReplicationControllerScale {
	return &PatchCoreV1NamespacedReplicationControllerScale{Context: ctx, Handler: handler}
}

/*PatchCoreV1NamespacedReplicationControllerScale swagger:route PATCH /api/v1/namespaces/{namespace}/replicationcontrollers/{name}/scale core_v1 patchCoreV1NamespacedReplicationControllerScale

partially update scale of the specified ReplicationController

*/
type PatchCoreV1NamespacedReplicationControllerScale struct {
	Context *middleware.Context
	Handler PatchCoreV1NamespacedReplicationControllerScaleHandler
}

func (o *PatchCoreV1NamespacedReplicationControllerScale) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewPatchCoreV1NamespacedReplicationControllerScaleParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}
