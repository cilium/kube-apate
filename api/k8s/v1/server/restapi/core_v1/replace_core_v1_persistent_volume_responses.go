// Code generated by go-swagger; DO NOT EDIT.

// Copyright 2017-2020 Authors of Cilium
// SPDX-License-Identifier: Apache-2.0

package core_v1

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/cilium/kube-apate/api/k8s/v1/models"
)

// ReplaceCoreV1PersistentVolumeOKCode is the HTTP code returned for type ReplaceCoreV1PersistentVolumeOK
const ReplaceCoreV1PersistentVolumeOKCode int = 200

/*ReplaceCoreV1PersistentVolumeOK OK

swagger:response replaceCoreV1PersistentVolumeOK
*/
type ReplaceCoreV1PersistentVolumeOK struct {

	/*
	  In: Body
	*/
	Payload *models.IoK8sAPICoreV1PersistentVolume `json:"body,omitempty"`
}

// NewReplaceCoreV1PersistentVolumeOK creates ReplaceCoreV1PersistentVolumeOK with default headers values
func NewReplaceCoreV1PersistentVolumeOK() *ReplaceCoreV1PersistentVolumeOK {

	return &ReplaceCoreV1PersistentVolumeOK{}
}

// WithPayload adds the payload to the replace core v1 persistent volume o k response
func (o *ReplaceCoreV1PersistentVolumeOK) WithPayload(payload *models.IoK8sAPICoreV1PersistentVolume) *ReplaceCoreV1PersistentVolumeOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the replace core v1 persistent volume o k response
func (o *ReplaceCoreV1PersistentVolumeOK) SetPayload(payload *models.IoK8sAPICoreV1PersistentVolume) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ReplaceCoreV1PersistentVolumeOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// ReplaceCoreV1PersistentVolumeCreatedCode is the HTTP code returned for type ReplaceCoreV1PersistentVolumeCreated
const ReplaceCoreV1PersistentVolumeCreatedCode int = 201

/*ReplaceCoreV1PersistentVolumeCreated Created

swagger:response replaceCoreV1PersistentVolumeCreated
*/
type ReplaceCoreV1PersistentVolumeCreated struct {

	/*
	  In: Body
	*/
	Payload *models.IoK8sAPICoreV1PersistentVolume `json:"body,omitempty"`
}

// NewReplaceCoreV1PersistentVolumeCreated creates ReplaceCoreV1PersistentVolumeCreated with default headers values
func NewReplaceCoreV1PersistentVolumeCreated() *ReplaceCoreV1PersistentVolumeCreated {

	return &ReplaceCoreV1PersistentVolumeCreated{}
}

// WithPayload adds the payload to the replace core v1 persistent volume created response
func (o *ReplaceCoreV1PersistentVolumeCreated) WithPayload(payload *models.IoK8sAPICoreV1PersistentVolume) *ReplaceCoreV1PersistentVolumeCreated {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the replace core v1 persistent volume created response
func (o *ReplaceCoreV1PersistentVolumeCreated) SetPayload(payload *models.IoK8sAPICoreV1PersistentVolume) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ReplaceCoreV1PersistentVolumeCreated) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(201)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// ReplaceCoreV1PersistentVolumeUnauthorizedCode is the HTTP code returned for type ReplaceCoreV1PersistentVolumeUnauthorized
const ReplaceCoreV1PersistentVolumeUnauthorizedCode int = 401

/*ReplaceCoreV1PersistentVolumeUnauthorized Unauthorized

swagger:response replaceCoreV1PersistentVolumeUnauthorized
*/
type ReplaceCoreV1PersistentVolumeUnauthorized struct {
}

// NewReplaceCoreV1PersistentVolumeUnauthorized creates ReplaceCoreV1PersistentVolumeUnauthorized with default headers values
func NewReplaceCoreV1PersistentVolumeUnauthorized() *ReplaceCoreV1PersistentVolumeUnauthorized {

	return &ReplaceCoreV1PersistentVolumeUnauthorized{}
}

// WriteResponse to the client
func (o *ReplaceCoreV1PersistentVolumeUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(401)
}
