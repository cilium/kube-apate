// Code generated by go-swagger; DO NOT EDIT.

// Copyright 2017-2020 Authors of Cilium
// SPDX-License-Identifier: Apache-2.0

package core_v1

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/cilium/kube-apate/api/k8s/v1/models"
)

// ReplaceCoreV1NamespacedPersistentVolumeClaimStatusOKCode is the HTTP code returned for type ReplaceCoreV1NamespacedPersistentVolumeClaimStatusOK
const ReplaceCoreV1NamespacedPersistentVolumeClaimStatusOKCode int = 200

/*ReplaceCoreV1NamespacedPersistentVolumeClaimStatusOK OK

swagger:response replaceCoreV1NamespacedPersistentVolumeClaimStatusOK
*/
type ReplaceCoreV1NamespacedPersistentVolumeClaimStatusOK struct {

	/*
	  In: Body
	*/
	Payload *models.IoK8sAPICoreV1PersistentVolumeClaim `json:"body,omitempty"`
}

// NewReplaceCoreV1NamespacedPersistentVolumeClaimStatusOK creates ReplaceCoreV1NamespacedPersistentVolumeClaimStatusOK with default headers values
func NewReplaceCoreV1NamespacedPersistentVolumeClaimStatusOK() *ReplaceCoreV1NamespacedPersistentVolumeClaimStatusOK {

	return &ReplaceCoreV1NamespacedPersistentVolumeClaimStatusOK{}
}

// WithPayload adds the payload to the replace core v1 namespaced persistent volume claim status o k response
func (o *ReplaceCoreV1NamespacedPersistentVolumeClaimStatusOK) WithPayload(payload *models.IoK8sAPICoreV1PersistentVolumeClaim) *ReplaceCoreV1NamespacedPersistentVolumeClaimStatusOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the replace core v1 namespaced persistent volume claim status o k response
func (o *ReplaceCoreV1NamespacedPersistentVolumeClaimStatusOK) SetPayload(payload *models.IoK8sAPICoreV1PersistentVolumeClaim) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ReplaceCoreV1NamespacedPersistentVolumeClaimStatusOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// ReplaceCoreV1NamespacedPersistentVolumeClaimStatusCreatedCode is the HTTP code returned for type ReplaceCoreV1NamespacedPersistentVolumeClaimStatusCreated
const ReplaceCoreV1NamespacedPersistentVolumeClaimStatusCreatedCode int = 201

/*ReplaceCoreV1NamespacedPersistentVolumeClaimStatusCreated Created

swagger:response replaceCoreV1NamespacedPersistentVolumeClaimStatusCreated
*/
type ReplaceCoreV1NamespacedPersistentVolumeClaimStatusCreated struct {

	/*
	  In: Body
	*/
	Payload *models.IoK8sAPICoreV1PersistentVolumeClaim `json:"body,omitempty"`
}

// NewReplaceCoreV1NamespacedPersistentVolumeClaimStatusCreated creates ReplaceCoreV1NamespacedPersistentVolumeClaimStatusCreated with default headers values
func NewReplaceCoreV1NamespacedPersistentVolumeClaimStatusCreated() *ReplaceCoreV1NamespacedPersistentVolumeClaimStatusCreated {

	return &ReplaceCoreV1NamespacedPersistentVolumeClaimStatusCreated{}
}

// WithPayload adds the payload to the replace core v1 namespaced persistent volume claim status created response
func (o *ReplaceCoreV1NamespacedPersistentVolumeClaimStatusCreated) WithPayload(payload *models.IoK8sAPICoreV1PersistentVolumeClaim) *ReplaceCoreV1NamespacedPersistentVolumeClaimStatusCreated {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the replace core v1 namespaced persistent volume claim status created response
func (o *ReplaceCoreV1NamespacedPersistentVolumeClaimStatusCreated) SetPayload(payload *models.IoK8sAPICoreV1PersistentVolumeClaim) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ReplaceCoreV1NamespacedPersistentVolumeClaimStatusCreated) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(201)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// ReplaceCoreV1NamespacedPersistentVolumeClaimStatusUnauthorizedCode is the HTTP code returned for type ReplaceCoreV1NamespacedPersistentVolumeClaimStatusUnauthorized
const ReplaceCoreV1NamespacedPersistentVolumeClaimStatusUnauthorizedCode int = 401

/*ReplaceCoreV1NamespacedPersistentVolumeClaimStatusUnauthorized Unauthorized

swagger:response replaceCoreV1NamespacedPersistentVolumeClaimStatusUnauthorized
*/
type ReplaceCoreV1NamespacedPersistentVolumeClaimStatusUnauthorized struct {
}

// NewReplaceCoreV1NamespacedPersistentVolumeClaimStatusUnauthorized creates ReplaceCoreV1NamespacedPersistentVolumeClaimStatusUnauthorized with default headers values
func NewReplaceCoreV1NamespacedPersistentVolumeClaimStatusUnauthorized() *ReplaceCoreV1NamespacedPersistentVolumeClaimStatusUnauthorized {

	return &ReplaceCoreV1NamespacedPersistentVolumeClaimStatusUnauthorized{}
}

// WriteResponse to the client
func (o *ReplaceCoreV1NamespacedPersistentVolumeClaimStatusUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(401)
}
