// Code generated by go-swagger; DO NOT EDIT.

// Copyright 2017-2020 Authors of Cilium
// SPDX-License-Identifier: Apache-2.0

package core_v1

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/cilium/kube-apate/api/k8s/v1/models"
)

// ReplaceCoreV1NamespacedServiceOKCode is the HTTP code returned for type ReplaceCoreV1NamespacedServiceOK
const ReplaceCoreV1NamespacedServiceOKCode int = 200

/*ReplaceCoreV1NamespacedServiceOK OK

swagger:response replaceCoreV1NamespacedServiceOK
*/
type ReplaceCoreV1NamespacedServiceOK struct {

	/*
	  In: Body
	*/
	Payload *models.IoK8sAPICoreV1Service `json:"body,omitempty"`
}

// NewReplaceCoreV1NamespacedServiceOK creates ReplaceCoreV1NamespacedServiceOK with default headers values
func NewReplaceCoreV1NamespacedServiceOK() *ReplaceCoreV1NamespacedServiceOK {

	return &ReplaceCoreV1NamespacedServiceOK{}
}

// WithPayload adds the payload to the replace core v1 namespaced service o k response
func (o *ReplaceCoreV1NamespacedServiceOK) WithPayload(payload *models.IoK8sAPICoreV1Service) *ReplaceCoreV1NamespacedServiceOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the replace core v1 namespaced service o k response
func (o *ReplaceCoreV1NamespacedServiceOK) SetPayload(payload *models.IoK8sAPICoreV1Service) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ReplaceCoreV1NamespacedServiceOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// ReplaceCoreV1NamespacedServiceCreatedCode is the HTTP code returned for type ReplaceCoreV1NamespacedServiceCreated
const ReplaceCoreV1NamespacedServiceCreatedCode int = 201

/*ReplaceCoreV1NamespacedServiceCreated Created

swagger:response replaceCoreV1NamespacedServiceCreated
*/
type ReplaceCoreV1NamespacedServiceCreated struct {

	/*
	  In: Body
	*/
	Payload *models.IoK8sAPICoreV1Service `json:"body,omitempty"`
}

// NewReplaceCoreV1NamespacedServiceCreated creates ReplaceCoreV1NamespacedServiceCreated with default headers values
func NewReplaceCoreV1NamespacedServiceCreated() *ReplaceCoreV1NamespacedServiceCreated {

	return &ReplaceCoreV1NamespacedServiceCreated{}
}

// WithPayload adds the payload to the replace core v1 namespaced service created response
func (o *ReplaceCoreV1NamespacedServiceCreated) WithPayload(payload *models.IoK8sAPICoreV1Service) *ReplaceCoreV1NamespacedServiceCreated {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the replace core v1 namespaced service created response
func (o *ReplaceCoreV1NamespacedServiceCreated) SetPayload(payload *models.IoK8sAPICoreV1Service) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ReplaceCoreV1NamespacedServiceCreated) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(201)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// ReplaceCoreV1NamespacedServiceUnauthorizedCode is the HTTP code returned for type ReplaceCoreV1NamespacedServiceUnauthorized
const ReplaceCoreV1NamespacedServiceUnauthorizedCode int = 401

/*ReplaceCoreV1NamespacedServiceUnauthorized Unauthorized

swagger:response replaceCoreV1NamespacedServiceUnauthorized
*/
type ReplaceCoreV1NamespacedServiceUnauthorized struct {
}

// NewReplaceCoreV1NamespacedServiceUnauthorized creates ReplaceCoreV1NamespacedServiceUnauthorized with default headers values
func NewReplaceCoreV1NamespacedServiceUnauthorized() *ReplaceCoreV1NamespacedServiceUnauthorized {

	return &ReplaceCoreV1NamespacedServiceUnauthorized{}
}

// WriteResponse to the client
func (o *ReplaceCoreV1NamespacedServiceUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(401)
}
