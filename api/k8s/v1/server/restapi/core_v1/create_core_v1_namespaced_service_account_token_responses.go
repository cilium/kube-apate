// Code generated by go-swagger; DO NOT EDIT.

// Copyright 2017-2020 Authors of Cilium
// SPDX-License-Identifier: Apache-2.0

package core_v1

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/cilium/kube-apate/api/k8s/v1/models"
)

// CreateCoreV1NamespacedServiceAccountTokenOKCode is the HTTP code returned for type CreateCoreV1NamespacedServiceAccountTokenOK
const CreateCoreV1NamespacedServiceAccountTokenOKCode int = 200

/*CreateCoreV1NamespacedServiceAccountTokenOK OK

swagger:response createCoreV1NamespacedServiceAccountTokenOK
*/
type CreateCoreV1NamespacedServiceAccountTokenOK struct {

	/*
	  In: Body
	*/
	Payload *models.IoK8sAPIAuthenticationV1TokenRequest `json:"body,omitempty"`
}

// NewCreateCoreV1NamespacedServiceAccountTokenOK creates CreateCoreV1NamespacedServiceAccountTokenOK with default headers values
func NewCreateCoreV1NamespacedServiceAccountTokenOK() *CreateCoreV1NamespacedServiceAccountTokenOK {

	return &CreateCoreV1NamespacedServiceAccountTokenOK{}
}

// WithPayload adds the payload to the create core v1 namespaced service account token o k response
func (o *CreateCoreV1NamespacedServiceAccountTokenOK) WithPayload(payload *models.IoK8sAPIAuthenticationV1TokenRequest) *CreateCoreV1NamespacedServiceAccountTokenOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the create core v1 namespaced service account token o k response
func (o *CreateCoreV1NamespacedServiceAccountTokenOK) SetPayload(payload *models.IoK8sAPIAuthenticationV1TokenRequest) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CreateCoreV1NamespacedServiceAccountTokenOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// CreateCoreV1NamespacedServiceAccountTokenCreatedCode is the HTTP code returned for type CreateCoreV1NamespacedServiceAccountTokenCreated
const CreateCoreV1NamespacedServiceAccountTokenCreatedCode int = 201

/*CreateCoreV1NamespacedServiceAccountTokenCreated Created

swagger:response createCoreV1NamespacedServiceAccountTokenCreated
*/
type CreateCoreV1NamespacedServiceAccountTokenCreated struct {

	/*
	  In: Body
	*/
	Payload *models.IoK8sAPIAuthenticationV1TokenRequest `json:"body,omitempty"`
}

// NewCreateCoreV1NamespacedServiceAccountTokenCreated creates CreateCoreV1NamespacedServiceAccountTokenCreated with default headers values
func NewCreateCoreV1NamespacedServiceAccountTokenCreated() *CreateCoreV1NamespacedServiceAccountTokenCreated {

	return &CreateCoreV1NamespacedServiceAccountTokenCreated{}
}

// WithPayload adds the payload to the create core v1 namespaced service account token created response
func (o *CreateCoreV1NamespacedServiceAccountTokenCreated) WithPayload(payload *models.IoK8sAPIAuthenticationV1TokenRequest) *CreateCoreV1NamespacedServiceAccountTokenCreated {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the create core v1 namespaced service account token created response
func (o *CreateCoreV1NamespacedServiceAccountTokenCreated) SetPayload(payload *models.IoK8sAPIAuthenticationV1TokenRequest) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CreateCoreV1NamespacedServiceAccountTokenCreated) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(201)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// CreateCoreV1NamespacedServiceAccountTokenAcceptedCode is the HTTP code returned for type CreateCoreV1NamespacedServiceAccountTokenAccepted
const CreateCoreV1NamespacedServiceAccountTokenAcceptedCode int = 202

/*CreateCoreV1NamespacedServiceAccountTokenAccepted Accepted

swagger:response createCoreV1NamespacedServiceAccountTokenAccepted
*/
type CreateCoreV1NamespacedServiceAccountTokenAccepted struct {

	/*
	  In: Body
	*/
	Payload *models.IoK8sAPIAuthenticationV1TokenRequest `json:"body,omitempty"`
}

// NewCreateCoreV1NamespacedServiceAccountTokenAccepted creates CreateCoreV1NamespacedServiceAccountTokenAccepted with default headers values
func NewCreateCoreV1NamespacedServiceAccountTokenAccepted() *CreateCoreV1NamespacedServiceAccountTokenAccepted {

	return &CreateCoreV1NamespacedServiceAccountTokenAccepted{}
}

// WithPayload adds the payload to the create core v1 namespaced service account token accepted response
func (o *CreateCoreV1NamespacedServiceAccountTokenAccepted) WithPayload(payload *models.IoK8sAPIAuthenticationV1TokenRequest) *CreateCoreV1NamespacedServiceAccountTokenAccepted {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the create core v1 namespaced service account token accepted response
func (o *CreateCoreV1NamespacedServiceAccountTokenAccepted) SetPayload(payload *models.IoK8sAPIAuthenticationV1TokenRequest) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CreateCoreV1NamespacedServiceAccountTokenAccepted) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(202)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// CreateCoreV1NamespacedServiceAccountTokenUnauthorizedCode is the HTTP code returned for type CreateCoreV1NamespacedServiceAccountTokenUnauthorized
const CreateCoreV1NamespacedServiceAccountTokenUnauthorizedCode int = 401

/*CreateCoreV1NamespacedServiceAccountTokenUnauthorized Unauthorized

swagger:response createCoreV1NamespacedServiceAccountTokenUnauthorized
*/
type CreateCoreV1NamespacedServiceAccountTokenUnauthorized struct {
}

// NewCreateCoreV1NamespacedServiceAccountTokenUnauthorized creates CreateCoreV1NamespacedServiceAccountTokenUnauthorized with default headers values
func NewCreateCoreV1NamespacedServiceAccountTokenUnauthorized() *CreateCoreV1NamespacedServiceAccountTokenUnauthorized {

	return &CreateCoreV1NamespacedServiceAccountTokenUnauthorized{}
}

// WriteResponse to the client
func (o *CreateCoreV1NamespacedServiceAccountTokenUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(401)
}
