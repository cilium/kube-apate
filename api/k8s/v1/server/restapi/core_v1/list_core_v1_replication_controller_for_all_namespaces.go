// Code generated by go-swagger; DO NOT EDIT.

// Copyright 2017-2020 Authors of Cilium
// SPDX-License-Identifier: Apache-2.0

package core_v1

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	"github.com/go-openapi/runtime/middleware"
)

// ListCoreV1ReplicationControllerForAllNamespacesHandlerFunc turns a function with the right signature into a list core v1 replication controller for all namespaces handler
type ListCoreV1ReplicationControllerForAllNamespacesHandlerFunc func(ListCoreV1ReplicationControllerForAllNamespacesParams) middleware.Responder

// Handle executing the request and returning a response
func (fn ListCoreV1ReplicationControllerForAllNamespacesHandlerFunc) Handle(params ListCoreV1ReplicationControllerForAllNamespacesParams) middleware.Responder {
	return fn(params)
}

// ListCoreV1ReplicationControllerForAllNamespacesHandler interface for that can handle valid list core v1 replication controller for all namespaces params
type ListCoreV1ReplicationControllerForAllNamespacesHandler interface {
	Handle(ListCoreV1ReplicationControllerForAllNamespacesParams) middleware.Responder
}

// NewListCoreV1ReplicationControllerForAllNamespaces creates a new http.Handler for the list core v1 replication controller for all namespaces operation
func NewListCoreV1ReplicationControllerForAllNamespaces(ctx *middleware.Context, handler ListCoreV1ReplicationControllerForAllNamespacesHandler) *ListCoreV1ReplicationControllerForAllNamespaces {
	return &ListCoreV1ReplicationControllerForAllNamespaces{Context: ctx, Handler: handler}
}

/*ListCoreV1ReplicationControllerForAllNamespaces swagger:route GET /api/v1/replicationcontrollers core_v1 listCoreV1ReplicationControllerForAllNamespaces

list or watch objects of kind ReplicationController

*/
type ListCoreV1ReplicationControllerForAllNamespaces struct {
	Context *middleware.Context
	Handler ListCoreV1ReplicationControllerForAllNamespacesHandler
}

func (o *ListCoreV1ReplicationControllerForAllNamespaces) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewListCoreV1ReplicationControllerForAllNamespacesParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}
