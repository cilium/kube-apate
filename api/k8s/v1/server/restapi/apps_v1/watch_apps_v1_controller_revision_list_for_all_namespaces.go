// Code generated by go-swagger; DO NOT EDIT.

// Copyright 2017-2020 Authors of Cilium
// SPDX-License-Identifier: Apache-2.0

package apps_v1

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	"github.com/go-openapi/runtime/middleware"
)

// WatchAppsV1ControllerRevisionListForAllNamespacesHandlerFunc turns a function with the right signature into a watch apps v1 controller revision list for all namespaces handler
type WatchAppsV1ControllerRevisionListForAllNamespacesHandlerFunc func(WatchAppsV1ControllerRevisionListForAllNamespacesParams) middleware.Responder

// Handle executing the request and returning a response
func (fn WatchAppsV1ControllerRevisionListForAllNamespacesHandlerFunc) Handle(params WatchAppsV1ControllerRevisionListForAllNamespacesParams) middleware.Responder {
	return fn(params)
}

// WatchAppsV1ControllerRevisionListForAllNamespacesHandler interface for that can handle valid watch apps v1 controller revision list for all namespaces params
type WatchAppsV1ControllerRevisionListForAllNamespacesHandler interface {
	Handle(WatchAppsV1ControllerRevisionListForAllNamespacesParams) middleware.Responder
}

// NewWatchAppsV1ControllerRevisionListForAllNamespaces creates a new http.Handler for the watch apps v1 controller revision list for all namespaces operation
func NewWatchAppsV1ControllerRevisionListForAllNamespaces(ctx *middleware.Context, handler WatchAppsV1ControllerRevisionListForAllNamespacesHandler) *WatchAppsV1ControllerRevisionListForAllNamespaces {
	return &WatchAppsV1ControllerRevisionListForAllNamespaces{Context: ctx, Handler: handler}
}

/*WatchAppsV1ControllerRevisionListForAllNamespaces swagger:route GET /apis/apps/v1/watch/controllerrevisions apps_v1 watchAppsV1ControllerRevisionListForAllNamespaces

watch individual changes to a list of ControllerRevision. deprecated: use the 'watch' parameter with a list operation instead.

*/
type WatchAppsV1ControllerRevisionListForAllNamespaces struct {
	Context *middleware.Context
	Handler WatchAppsV1ControllerRevisionListForAllNamespacesHandler
}

func (o *WatchAppsV1ControllerRevisionListForAllNamespaces) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewWatchAppsV1ControllerRevisionListForAllNamespacesParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}
