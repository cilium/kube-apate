// Code generated by go-swagger; DO NOT EDIT.

// Copyright 2017-2020 Authors of Cilium
// SPDX-License-Identifier: Apache-2.0

package apps_v1

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	"github.com/go-openapi/runtime/middleware"
)

// DeleteAppsV1CollectionNamespacedDaemonSetHandlerFunc turns a function with the right signature into a delete apps v1 collection namespaced daemon set handler
type DeleteAppsV1CollectionNamespacedDaemonSetHandlerFunc func(DeleteAppsV1CollectionNamespacedDaemonSetParams) middleware.Responder

// Handle executing the request and returning a response
func (fn DeleteAppsV1CollectionNamespacedDaemonSetHandlerFunc) Handle(params DeleteAppsV1CollectionNamespacedDaemonSetParams) middleware.Responder {
	return fn(params)
}

// DeleteAppsV1CollectionNamespacedDaemonSetHandler interface for that can handle valid delete apps v1 collection namespaced daemon set params
type DeleteAppsV1CollectionNamespacedDaemonSetHandler interface {
	Handle(DeleteAppsV1CollectionNamespacedDaemonSetParams) middleware.Responder
}

// NewDeleteAppsV1CollectionNamespacedDaemonSet creates a new http.Handler for the delete apps v1 collection namespaced daemon set operation
func NewDeleteAppsV1CollectionNamespacedDaemonSet(ctx *middleware.Context, handler DeleteAppsV1CollectionNamespacedDaemonSetHandler) *DeleteAppsV1CollectionNamespacedDaemonSet {
	return &DeleteAppsV1CollectionNamespacedDaemonSet{Context: ctx, Handler: handler}
}

/*DeleteAppsV1CollectionNamespacedDaemonSet swagger:route DELETE /apis/apps/v1/namespaces/{namespace}/daemonsets apps_v1 deleteAppsV1CollectionNamespacedDaemonSet

delete collection of DaemonSet

*/
type DeleteAppsV1CollectionNamespacedDaemonSet struct {
	Context *middleware.Context
	Handler DeleteAppsV1CollectionNamespacedDaemonSetHandler
}

func (o *DeleteAppsV1CollectionNamespacedDaemonSet) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewDeleteAppsV1CollectionNamespacedDaemonSetParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}
