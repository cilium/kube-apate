// Code generated by go-swagger; DO NOT EDIT.

// Copyright 2017-2020 Authors of Cilium
// SPDX-License-Identifier: Apache-2.0

package node_v1alpha1

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/cilium/kube-apate/api/k8s/v1/models"
)

// ReplaceNodeV1alpha1RuntimeClassOKCode is the HTTP code returned for type ReplaceNodeV1alpha1RuntimeClassOK
const ReplaceNodeV1alpha1RuntimeClassOKCode int = 200

/*ReplaceNodeV1alpha1RuntimeClassOK OK

swagger:response replaceNodeV1alpha1RuntimeClassOK
*/
type ReplaceNodeV1alpha1RuntimeClassOK struct {

	/*
	  In: Body
	*/
	Payload *models.IoK8sAPINodeV1alpha1RuntimeClass `json:"body,omitempty"`
}

// NewReplaceNodeV1alpha1RuntimeClassOK creates ReplaceNodeV1alpha1RuntimeClassOK with default headers values
func NewReplaceNodeV1alpha1RuntimeClassOK() *ReplaceNodeV1alpha1RuntimeClassOK {

	return &ReplaceNodeV1alpha1RuntimeClassOK{}
}

// WithPayload adds the payload to the replace node v1alpha1 runtime class o k response
func (o *ReplaceNodeV1alpha1RuntimeClassOK) WithPayload(payload *models.IoK8sAPINodeV1alpha1RuntimeClass) *ReplaceNodeV1alpha1RuntimeClassOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the replace node v1alpha1 runtime class o k response
func (o *ReplaceNodeV1alpha1RuntimeClassOK) SetPayload(payload *models.IoK8sAPINodeV1alpha1RuntimeClass) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ReplaceNodeV1alpha1RuntimeClassOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// ReplaceNodeV1alpha1RuntimeClassCreatedCode is the HTTP code returned for type ReplaceNodeV1alpha1RuntimeClassCreated
const ReplaceNodeV1alpha1RuntimeClassCreatedCode int = 201

/*ReplaceNodeV1alpha1RuntimeClassCreated Created

swagger:response replaceNodeV1alpha1RuntimeClassCreated
*/
type ReplaceNodeV1alpha1RuntimeClassCreated struct {

	/*
	  In: Body
	*/
	Payload *models.IoK8sAPINodeV1alpha1RuntimeClass `json:"body,omitempty"`
}

// NewReplaceNodeV1alpha1RuntimeClassCreated creates ReplaceNodeV1alpha1RuntimeClassCreated with default headers values
func NewReplaceNodeV1alpha1RuntimeClassCreated() *ReplaceNodeV1alpha1RuntimeClassCreated {

	return &ReplaceNodeV1alpha1RuntimeClassCreated{}
}

// WithPayload adds the payload to the replace node v1alpha1 runtime class created response
func (o *ReplaceNodeV1alpha1RuntimeClassCreated) WithPayload(payload *models.IoK8sAPINodeV1alpha1RuntimeClass) *ReplaceNodeV1alpha1RuntimeClassCreated {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the replace node v1alpha1 runtime class created response
func (o *ReplaceNodeV1alpha1RuntimeClassCreated) SetPayload(payload *models.IoK8sAPINodeV1alpha1RuntimeClass) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ReplaceNodeV1alpha1RuntimeClassCreated) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(201)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// ReplaceNodeV1alpha1RuntimeClassUnauthorizedCode is the HTTP code returned for type ReplaceNodeV1alpha1RuntimeClassUnauthorized
const ReplaceNodeV1alpha1RuntimeClassUnauthorizedCode int = 401

/*ReplaceNodeV1alpha1RuntimeClassUnauthorized Unauthorized

swagger:response replaceNodeV1alpha1RuntimeClassUnauthorized
*/
type ReplaceNodeV1alpha1RuntimeClassUnauthorized struct {
}

// NewReplaceNodeV1alpha1RuntimeClassUnauthorized creates ReplaceNodeV1alpha1RuntimeClassUnauthorized with default headers values
func NewReplaceNodeV1alpha1RuntimeClassUnauthorized() *ReplaceNodeV1alpha1RuntimeClassUnauthorized {

	return &ReplaceNodeV1alpha1RuntimeClassUnauthorized{}
}

// WriteResponse to the client
func (o *ReplaceNodeV1alpha1RuntimeClassUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(401)
}
