// Code generated by go-swagger; DO NOT EDIT.

// Copyright 2017-2020 Authors of Cilium
// SPDX-License-Identifier: Apache-2.0

package batch_v2alpha1

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	"github.com/go-openapi/runtime/middleware"
)

// DeleteBatchV2alpha1CollectionNamespacedCronJobHandlerFunc turns a function with the right signature into a delete batch v2alpha1 collection namespaced cron job handler
type DeleteBatchV2alpha1CollectionNamespacedCronJobHandlerFunc func(DeleteBatchV2alpha1CollectionNamespacedCronJobParams) middleware.Responder

// Handle executing the request and returning a response
func (fn DeleteBatchV2alpha1CollectionNamespacedCronJobHandlerFunc) Handle(params DeleteBatchV2alpha1CollectionNamespacedCronJobParams) middleware.Responder {
	return fn(params)
}

// DeleteBatchV2alpha1CollectionNamespacedCronJobHandler interface for that can handle valid delete batch v2alpha1 collection namespaced cron job params
type DeleteBatchV2alpha1CollectionNamespacedCronJobHandler interface {
	Handle(DeleteBatchV2alpha1CollectionNamespacedCronJobParams) middleware.Responder
}

// NewDeleteBatchV2alpha1CollectionNamespacedCronJob creates a new http.Handler for the delete batch v2alpha1 collection namespaced cron job operation
func NewDeleteBatchV2alpha1CollectionNamespacedCronJob(ctx *middleware.Context, handler DeleteBatchV2alpha1CollectionNamespacedCronJobHandler) *DeleteBatchV2alpha1CollectionNamespacedCronJob {
	return &DeleteBatchV2alpha1CollectionNamespacedCronJob{Context: ctx, Handler: handler}
}

/*DeleteBatchV2alpha1CollectionNamespacedCronJob swagger:route DELETE /apis/batch/v2alpha1/namespaces/{namespace}/cronjobs batch_v2alpha1 deleteBatchV2alpha1CollectionNamespacedCronJob

delete collection of CronJob

*/
type DeleteBatchV2alpha1CollectionNamespacedCronJob struct {
	Context *middleware.Context
	Handler DeleteBatchV2alpha1CollectionNamespacedCronJobHandler
}

func (o *DeleteBatchV2alpha1CollectionNamespacedCronJob) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewDeleteBatchV2alpha1CollectionNamespacedCronJobParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}
