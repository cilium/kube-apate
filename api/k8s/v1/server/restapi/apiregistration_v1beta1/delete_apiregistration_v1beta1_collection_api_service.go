// Code generated by go-swagger; DO NOT EDIT.

// Copyright 2017-2020 Authors of Cilium
// SPDX-License-Identifier: Apache-2.0

package apiregistration_v1beta1

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	"github.com/go-openapi/runtime/middleware"
)

// DeleteApiregistrationV1beta1CollectionAPIServiceHandlerFunc turns a function with the right signature into a delete apiregistration v1beta1 collection API service handler
type DeleteApiregistrationV1beta1CollectionAPIServiceHandlerFunc func(DeleteApiregistrationV1beta1CollectionAPIServiceParams) middleware.Responder

// Handle executing the request and returning a response
func (fn DeleteApiregistrationV1beta1CollectionAPIServiceHandlerFunc) Handle(params DeleteApiregistrationV1beta1CollectionAPIServiceParams) middleware.Responder {
	return fn(params)
}

// DeleteApiregistrationV1beta1CollectionAPIServiceHandler interface for that can handle valid delete apiregistration v1beta1 collection API service params
type DeleteApiregistrationV1beta1CollectionAPIServiceHandler interface {
	Handle(DeleteApiregistrationV1beta1CollectionAPIServiceParams) middleware.Responder
}

// NewDeleteApiregistrationV1beta1CollectionAPIService creates a new http.Handler for the delete apiregistration v1beta1 collection API service operation
func NewDeleteApiregistrationV1beta1CollectionAPIService(ctx *middleware.Context, handler DeleteApiregistrationV1beta1CollectionAPIServiceHandler) *DeleteApiregistrationV1beta1CollectionAPIService {
	return &DeleteApiregistrationV1beta1CollectionAPIService{Context: ctx, Handler: handler}
}

/*DeleteApiregistrationV1beta1CollectionAPIService swagger:route DELETE /apis/apiregistration.k8s.io/v1beta1/apiservices apiregistration_v1beta1 deleteApiregistrationV1beta1CollectionApiService

delete collection of APIService

*/
type DeleteApiregistrationV1beta1CollectionAPIService struct {
	Context *middleware.Context
	Handler DeleteApiregistrationV1beta1CollectionAPIServiceHandler
}

func (o *DeleteApiregistrationV1beta1CollectionAPIService) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewDeleteApiregistrationV1beta1CollectionAPIServiceParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}
