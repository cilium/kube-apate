// Code generated by go-swagger; DO NOT EDIT.

// Copyright 2017-2020 Authors of Cilium
// SPDX-License-Identifier: Apache-2.0

package policy_v1beta1

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	"github.com/go-openapi/runtime/middleware"
)

// ListPolicyV1beta1NamespacedPodDisruptionBudgetHandlerFunc turns a function with the right signature into a list policy v1beta1 namespaced pod disruption budget handler
type ListPolicyV1beta1NamespacedPodDisruptionBudgetHandlerFunc func(ListPolicyV1beta1NamespacedPodDisruptionBudgetParams) middleware.Responder

// Handle executing the request and returning a response
func (fn ListPolicyV1beta1NamespacedPodDisruptionBudgetHandlerFunc) Handle(params ListPolicyV1beta1NamespacedPodDisruptionBudgetParams) middleware.Responder {
	return fn(params)
}

// ListPolicyV1beta1NamespacedPodDisruptionBudgetHandler interface for that can handle valid list policy v1beta1 namespaced pod disruption budget params
type ListPolicyV1beta1NamespacedPodDisruptionBudgetHandler interface {
	Handle(ListPolicyV1beta1NamespacedPodDisruptionBudgetParams) middleware.Responder
}

// NewListPolicyV1beta1NamespacedPodDisruptionBudget creates a new http.Handler for the list policy v1beta1 namespaced pod disruption budget operation
func NewListPolicyV1beta1NamespacedPodDisruptionBudget(ctx *middleware.Context, handler ListPolicyV1beta1NamespacedPodDisruptionBudgetHandler) *ListPolicyV1beta1NamespacedPodDisruptionBudget {
	return &ListPolicyV1beta1NamespacedPodDisruptionBudget{Context: ctx, Handler: handler}
}

/*ListPolicyV1beta1NamespacedPodDisruptionBudget swagger:route GET /apis/policy/v1beta1/namespaces/{namespace}/poddisruptionbudgets policy_v1beta1 listPolicyV1beta1NamespacedPodDisruptionBudget

list or watch objects of kind PodDisruptionBudget

*/
type ListPolicyV1beta1NamespacedPodDisruptionBudget struct {
	Context *middleware.Context
	Handler ListPolicyV1beta1NamespacedPodDisruptionBudgetHandler
}

func (o *ListPolicyV1beta1NamespacedPodDisruptionBudget) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewListPolicyV1beta1NamespacedPodDisruptionBudgetParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}
