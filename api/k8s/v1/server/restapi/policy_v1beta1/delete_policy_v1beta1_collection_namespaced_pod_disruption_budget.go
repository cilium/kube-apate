// Code generated by go-swagger; DO NOT EDIT.

// Copyright 2017-2020 Authors of Cilium
// SPDX-License-Identifier: Apache-2.0

package policy_v1beta1

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	"github.com/go-openapi/runtime/middleware"
)

// DeletePolicyV1beta1CollectionNamespacedPodDisruptionBudgetHandlerFunc turns a function with the right signature into a delete policy v1beta1 collection namespaced pod disruption budget handler
type DeletePolicyV1beta1CollectionNamespacedPodDisruptionBudgetHandlerFunc func(DeletePolicyV1beta1CollectionNamespacedPodDisruptionBudgetParams) middleware.Responder

// Handle executing the request and returning a response
func (fn DeletePolicyV1beta1CollectionNamespacedPodDisruptionBudgetHandlerFunc) Handle(params DeletePolicyV1beta1CollectionNamespacedPodDisruptionBudgetParams) middleware.Responder {
	return fn(params)
}

// DeletePolicyV1beta1CollectionNamespacedPodDisruptionBudgetHandler interface for that can handle valid delete policy v1beta1 collection namespaced pod disruption budget params
type DeletePolicyV1beta1CollectionNamespacedPodDisruptionBudgetHandler interface {
	Handle(DeletePolicyV1beta1CollectionNamespacedPodDisruptionBudgetParams) middleware.Responder
}

// NewDeletePolicyV1beta1CollectionNamespacedPodDisruptionBudget creates a new http.Handler for the delete policy v1beta1 collection namespaced pod disruption budget operation
func NewDeletePolicyV1beta1CollectionNamespacedPodDisruptionBudget(ctx *middleware.Context, handler DeletePolicyV1beta1CollectionNamespacedPodDisruptionBudgetHandler) *DeletePolicyV1beta1CollectionNamespacedPodDisruptionBudget {
	return &DeletePolicyV1beta1CollectionNamespacedPodDisruptionBudget{Context: ctx, Handler: handler}
}

/*DeletePolicyV1beta1CollectionNamespacedPodDisruptionBudget swagger:route DELETE /apis/policy/v1beta1/namespaces/{namespace}/poddisruptionbudgets policy_v1beta1 deletePolicyV1beta1CollectionNamespacedPodDisruptionBudget

delete collection of PodDisruptionBudget

*/
type DeletePolicyV1beta1CollectionNamespacedPodDisruptionBudget struct {
	Context *middleware.Context
	Handler DeletePolicyV1beta1CollectionNamespacedPodDisruptionBudgetHandler
}

func (o *DeletePolicyV1beta1CollectionNamespacedPodDisruptionBudget) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewDeletePolicyV1beta1CollectionNamespacedPodDisruptionBudgetParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}
