// Code generated by go-swagger; DO NOT EDIT.

// Copyright 2017-2020 Authors of Cilium
// SPDX-License-Identifier: Apache-2.0

package events_v1

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/cilium/kube-apate/api/k8s/v1/models"
)

// DeleteEventsV1NamespacedEventOKCode is the HTTP code returned for type DeleteEventsV1NamespacedEventOK
const DeleteEventsV1NamespacedEventOKCode int = 200

/*DeleteEventsV1NamespacedEventOK OK

swagger:response deleteEventsV1NamespacedEventOK
*/
type DeleteEventsV1NamespacedEventOK struct {

	/*
	  In: Body
	*/
	Payload *models.IoK8sApimachineryPkgApisMetaV1Status `json:"body,omitempty"`
}

// NewDeleteEventsV1NamespacedEventOK creates DeleteEventsV1NamespacedEventOK with default headers values
func NewDeleteEventsV1NamespacedEventOK() *DeleteEventsV1NamespacedEventOK {

	return &DeleteEventsV1NamespacedEventOK{}
}

// WithPayload adds the payload to the delete events v1 namespaced event o k response
func (o *DeleteEventsV1NamespacedEventOK) WithPayload(payload *models.IoK8sApimachineryPkgApisMetaV1Status) *DeleteEventsV1NamespacedEventOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the delete events v1 namespaced event o k response
func (o *DeleteEventsV1NamespacedEventOK) SetPayload(payload *models.IoK8sApimachineryPkgApisMetaV1Status) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DeleteEventsV1NamespacedEventOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// DeleteEventsV1NamespacedEventAcceptedCode is the HTTP code returned for type DeleteEventsV1NamespacedEventAccepted
const DeleteEventsV1NamespacedEventAcceptedCode int = 202

/*DeleteEventsV1NamespacedEventAccepted Accepted

swagger:response deleteEventsV1NamespacedEventAccepted
*/
type DeleteEventsV1NamespacedEventAccepted struct {

	/*
	  In: Body
	*/
	Payload *models.IoK8sApimachineryPkgApisMetaV1Status `json:"body,omitempty"`
}

// NewDeleteEventsV1NamespacedEventAccepted creates DeleteEventsV1NamespacedEventAccepted with default headers values
func NewDeleteEventsV1NamespacedEventAccepted() *DeleteEventsV1NamespacedEventAccepted {

	return &DeleteEventsV1NamespacedEventAccepted{}
}

// WithPayload adds the payload to the delete events v1 namespaced event accepted response
func (o *DeleteEventsV1NamespacedEventAccepted) WithPayload(payload *models.IoK8sApimachineryPkgApisMetaV1Status) *DeleteEventsV1NamespacedEventAccepted {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the delete events v1 namespaced event accepted response
func (o *DeleteEventsV1NamespacedEventAccepted) SetPayload(payload *models.IoK8sApimachineryPkgApisMetaV1Status) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DeleteEventsV1NamespacedEventAccepted) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(202)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// DeleteEventsV1NamespacedEventUnauthorizedCode is the HTTP code returned for type DeleteEventsV1NamespacedEventUnauthorized
const DeleteEventsV1NamespacedEventUnauthorizedCode int = 401

/*DeleteEventsV1NamespacedEventUnauthorized Unauthorized

swagger:response deleteEventsV1NamespacedEventUnauthorized
*/
type DeleteEventsV1NamespacedEventUnauthorized struct {
}

// NewDeleteEventsV1NamespacedEventUnauthorized creates DeleteEventsV1NamespacedEventUnauthorized with default headers values
func NewDeleteEventsV1NamespacedEventUnauthorized() *DeleteEventsV1NamespacedEventUnauthorized {

	return &DeleteEventsV1NamespacedEventUnauthorized{}
}

// WriteResponse to the client
func (o *DeleteEventsV1NamespacedEventUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(401)
}
