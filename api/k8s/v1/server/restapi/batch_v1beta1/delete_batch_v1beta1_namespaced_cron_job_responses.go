// Code generated by go-swagger; DO NOT EDIT.

// Copyright 2017-2020 Authors of Cilium
// SPDX-License-Identifier: Apache-2.0

package batch_v1beta1

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/cilium/kube-apate/api/k8s/v1/models"
)

// DeleteBatchV1beta1NamespacedCronJobOKCode is the HTTP code returned for type DeleteBatchV1beta1NamespacedCronJobOK
const DeleteBatchV1beta1NamespacedCronJobOKCode int = 200

/*DeleteBatchV1beta1NamespacedCronJobOK OK

swagger:response deleteBatchV1beta1NamespacedCronJobOK
*/
type DeleteBatchV1beta1NamespacedCronJobOK struct {

	/*
	  In: Body
	*/
	Payload *models.IoK8sApimachineryPkgApisMetaV1Status `json:"body,omitempty"`
}

// NewDeleteBatchV1beta1NamespacedCronJobOK creates DeleteBatchV1beta1NamespacedCronJobOK with default headers values
func NewDeleteBatchV1beta1NamespacedCronJobOK() *DeleteBatchV1beta1NamespacedCronJobOK {

	return &DeleteBatchV1beta1NamespacedCronJobOK{}
}

// WithPayload adds the payload to the delete batch v1beta1 namespaced cron job o k response
func (o *DeleteBatchV1beta1NamespacedCronJobOK) WithPayload(payload *models.IoK8sApimachineryPkgApisMetaV1Status) *DeleteBatchV1beta1NamespacedCronJobOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the delete batch v1beta1 namespaced cron job o k response
func (o *DeleteBatchV1beta1NamespacedCronJobOK) SetPayload(payload *models.IoK8sApimachineryPkgApisMetaV1Status) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DeleteBatchV1beta1NamespacedCronJobOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// DeleteBatchV1beta1NamespacedCronJobAcceptedCode is the HTTP code returned for type DeleteBatchV1beta1NamespacedCronJobAccepted
const DeleteBatchV1beta1NamespacedCronJobAcceptedCode int = 202

/*DeleteBatchV1beta1NamespacedCronJobAccepted Accepted

swagger:response deleteBatchV1beta1NamespacedCronJobAccepted
*/
type DeleteBatchV1beta1NamespacedCronJobAccepted struct {

	/*
	  In: Body
	*/
	Payload *models.IoK8sApimachineryPkgApisMetaV1Status `json:"body,omitempty"`
}

// NewDeleteBatchV1beta1NamespacedCronJobAccepted creates DeleteBatchV1beta1NamespacedCronJobAccepted with default headers values
func NewDeleteBatchV1beta1NamespacedCronJobAccepted() *DeleteBatchV1beta1NamespacedCronJobAccepted {

	return &DeleteBatchV1beta1NamespacedCronJobAccepted{}
}

// WithPayload adds the payload to the delete batch v1beta1 namespaced cron job accepted response
func (o *DeleteBatchV1beta1NamespacedCronJobAccepted) WithPayload(payload *models.IoK8sApimachineryPkgApisMetaV1Status) *DeleteBatchV1beta1NamespacedCronJobAccepted {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the delete batch v1beta1 namespaced cron job accepted response
func (o *DeleteBatchV1beta1NamespacedCronJobAccepted) SetPayload(payload *models.IoK8sApimachineryPkgApisMetaV1Status) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DeleteBatchV1beta1NamespacedCronJobAccepted) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(202)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// DeleteBatchV1beta1NamespacedCronJobUnauthorizedCode is the HTTP code returned for type DeleteBatchV1beta1NamespacedCronJobUnauthorized
const DeleteBatchV1beta1NamespacedCronJobUnauthorizedCode int = 401

/*DeleteBatchV1beta1NamespacedCronJobUnauthorized Unauthorized

swagger:response deleteBatchV1beta1NamespacedCronJobUnauthorized
*/
type DeleteBatchV1beta1NamespacedCronJobUnauthorized struct {
}

// NewDeleteBatchV1beta1NamespacedCronJobUnauthorized creates DeleteBatchV1beta1NamespacedCronJobUnauthorized with default headers values
func NewDeleteBatchV1beta1NamespacedCronJobUnauthorized() *DeleteBatchV1beta1NamespacedCronJobUnauthorized {

	return &DeleteBatchV1beta1NamespacedCronJobUnauthorized{}
}

// WriteResponse to the client
func (o *DeleteBatchV1beta1NamespacedCronJobUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(401)
}
