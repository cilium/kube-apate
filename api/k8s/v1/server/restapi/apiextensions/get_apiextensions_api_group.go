// Code generated by go-swagger; DO NOT EDIT.

// Copyright 2017-2020 Authors of Cilium
// SPDX-License-Identifier: Apache-2.0

package apiextensions

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	"github.com/go-openapi/runtime/middleware"
)

// GetApiextensionsAPIGroupHandlerFunc turns a function with the right signature into a get apiextensions API group handler
type GetApiextensionsAPIGroupHandlerFunc func(GetApiextensionsAPIGroupParams) middleware.Responder

// Handle executing the request and returning a response
func (fn GetApiextensionsAPIGroupHandlerFunc) Handle(params GetApiextensionsAPIGroupParams) middleware.Responder {
	return fn(params)
}

// GetApiextensionsAPIGroupHandler interface for that can handle valid get apiextensions API group params
type GetApiextensionsAPIGroupHandler interface {
	Handle(GetApiextensionsAPIGroupParams) middleware.Responder
}

// NewGetApiextensionsAPIGroup creates a new http.Handler for the get apiextensions API group operation
func NewGetApiextensionsAPIGroup(ctx *middleware.Context, handler GetApiextensionsAPIGroupHandler) *GetApiextensionsAPIGroup {
	return &GetApiextensionsAPIGroup{Context: ctx, Handler: handler}
}

/*GetApiextensionsAPIGroup swagger:route GET /apis/apiextensions.k8s.io/ apiextensions getApiextensionsApiGroup

get information of a group

*/
type GetApiextensionsAPIGroup struct {
	Context *middleware.Context
	Handler GetApiextensionsAPIGroupHandler
}

func (o *GetApiextensionsAPIGroup) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewGetApiextensionsAPIGroupParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}
